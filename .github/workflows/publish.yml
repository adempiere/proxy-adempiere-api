# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages
# This file was contributed by EdwinBetanc0urt@outlook.com from ERP Consultores y Asociados, C.A

name: Publish Proxy ADempiere API

on:
  release:
    types:
      - created

jobs:

  # Build dist application ADempiere-Proxy-Api
  build-app:
    name: Build ADempiere-Proxy
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Node configuration
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: 'yarn'

      - name: Copy default vue store front
        run: cp -rf ./packages/default-vsf ./src/modules/

      - name: Enable https to install packages
        run: git config --global url."https://".insteadOf git://

      - name: Install dependencies
        run: yarn ci

      - name: Run test
        run: yarn lint

      - name: Compile dist
        run: |
          yarn build
          yarn prebuild:packages
  
      - name: Unit Test
        run: yarn test:unit

      - name: Copy Default.json to deploy
        run: cp docker/adempiere-api/default.json config

      - name: Compress action step
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          cwd: .
          files: |
            config
            migrations
            scripts
            src
            var
            packages
            package.json
            ecosystem.json
            tsconfig.json
            nodemon.json
            graphql-schema-linter.config.js
            yarn.lock
          outPath: ./proxy-adempiere-api.tar.gz

      - name: Upload app as artifact
        uses: actions/upload-artifact@v3
        with:
          name: proxy-adempiere-api
          path: ./proxy-adempiere-api.tar.gz


  # Publish dist binaries to application
  publish-app-dist:
    name: Upload Binaries ADempiere-Proxy
    needs:
      - build-app
    runs-on: ubuntu-latest
    steps:
      - name: Download build dist app
        uses: actions/download-artifact@v3
        with:
          name: proxy-adempiere-api

      - name: Rename binary file
        run: cp proxy-adempiere-api.tar.gz Proxy-ADempiere-API.tar.gz

      - name: Publish application binary in repository
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: 'Proxy-ADempiere-API.tar.gz'

  # Check secrets to push image in docker hub registry
  check-docker-secrets:
    name: Check if docker hub registry information was set on secrets
    needs:
      - build-app
    runs-on: ubuntu-latest
    outputs:
      is_have_secrets: ${{ steps.check_secret_job.outputs.is_have_secrets }}
    steps:
      - id: check_secret_job
        run: |
          if [[ "${{ secrets.DOCKER_REPO_PROXY_API }}" != "" && \
                "${{ secrets.DOCKER_USERNAME }}" != "" && \
                "${{ secrets.DOCKER_TOKEN }}" != "" ]]; \
          then
            echo "Secrets to use a container registry are configured in the repo"
            echo "::set-output name=is_have_secrets::true"
          else
            echo "Secrets to use a container registry were not configured in the repo"
            echo "::set-output name=is_have_secrets::false"
          fi

  # Publish docker image in Docker Hub registry to application
  push-alpine-imame-dhr:
    name: Push Docker image to Docker Hub
    needs:
      - check-docker-secrets
    # Skip step based on secret
    if: needs.check-docker-secrets.outputs.is_have_secrets == 'true'

    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Download build dist app
        uses: actions/download-artifact@v3
        with:
          name: proxy-adempiere-api

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          # CONFIGURE DOCKER SECRETS INTO REPOSITORY
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Setting Dockerfile for Alpine Image
      - name: Build and push alpine Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/adempiere-api/production-alpine.Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_REPO_PROXY_API }}:alpine
            ${{ secrets.DOCKER_REPO_PROXY_API }}:alpine-${{ github.event.release.tag_name }}
          build-args: |
            NODE_RELEASE=14.17.5-alpine3.11


  # Publish docker image in Docker Hub registry to application
  push-imame-dhr:
    name: Push Docker image to Docker Hub
    needs:
      - check-docker-secrets
    # Skip step based on secret
    if: needs.check-docker-secrets.outputs.is_have_secrets == 'true'

    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Download build dist app
        uses: actions/download-artifact@v3
        with:
          name: proxy-adempiere-api

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          # CONFIGURE DOCKER SECRETS INTO REPOSITORY
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/adempiere-api/production.Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_REPO_PROXY_API }}:latest
            ${{ secrets.DOCKER_REPO_PROXY_API }}:${{ github.event.release.tag_name }}
          build-args: |
            NODE_RELEASE=14.17.5


  # Build dist documentation ADempiere-Proxy
  build-docs:
    name: Build dist ADempiere Proxy docs
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Node configuration
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: 'yarn'

      - name: Generate dist docs
        run: |
          cd docs
          yarn ci
          yarn build

      - name: Upload dist docs
        uses: actions/upload-artifact@v3
        with:
          name: adempiere-proxy-docs
          path: docs/.vuepress/dist


  # Publish dist binaries to documentation
  publish-docs-dist:
    name: Upload ADempiere Proxy docs binaries
    needs:
      - build-docs
    runs-on: ubuntu-latest
    steps:
      - name: Download build dist docs
        uses: actions/download-artifact@v3
        with:
          name: adempiere-proxy-docs

      - name: Compress files for documentation dist
        uses: TheDoctor0/zip-release@0.6.2
        with:
          filename: 'Proxy-ADempiere-API-Documentation.zip'
          path: './'

      - name: Publish documentation binary in repository
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: 'Proxy-ADempiere-API-Documentation.zip'
