// source: proto/core_functionality.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var proto_base_data_type_pb = require('../proto/base_data_type_pb.js');
goog.object.extend(proto, proto_base_data_type_pb);
goog.exportSymbol('proto.data.BankAccount', null, global);
goog.exportSymbol('proto.data.BankAccount.BankAccountType', null, global);
goog.exportSymbol('proto.data.BusinessPartner', null, global);
goog.exportSymbol('proto.data.Charge', null, global);
goog.exportSymbol('proto.data.ConversionRate', null, global);
goog.exportSymbol('proto.data.Country', null, global);
goog.exportSymbol('proto.data.CreateBusinessPartnerRequest', null, global);
goog.exportSymbol('proto.data.Currency', null, global);
goog.exportSymbol('proto.data.DocumentType', null, global);
goog.exportSymbol('proto.data.GetBusinessPartnerRequest', null, global);
goog.exportSymbol('proto.data.GetConversionRateRequest', null, global);
goog.exportSymbol('proto.data.GetCountryRequest', null, global);
goog.exportSymbol('proto.data.Language', null, global);
goog.exportSymbol('proto.data.ListBusinessPartnersRequest', null, global);
goog.exportSymbol('proto.data.ListBusinessPartnersResponse', null, global);
goog.exportSymbol('proto.data.ListLanguagesRequest', null, global);
goog.exportSymbol('proto.data.ListLanguagesResponse', null, global);
goog.exportSymbol('proto.data.ListOrganizationsRequest', null, global);
goog.exportSymbol('proto.data.ListOrganizationsResponse', null, global);
goog.exportSymbol('proto.data.ListProductConversionRequest', null, global);
goog.exportSymbol('proto.data.ListProductConversionResponse', null, global);
goog.exportSymbol('proto.data.ListWarehousesRequest', null, global);
goog.exportSymbol('proto.data.ListWarehousesResponse', null, global);
goog.exportSymbol('proto.data.Organization', null, global);
goog.exportSymbol('proto.data.PriceList', null, global);
goog.exportSymbol('proto.data.Product', null, global);
goog.exportSymbol('proto.data.ProductConversion', null, global);
goog.exportSymbol('proto.data.ProductPrice', null, global);
goog.exportSymbol('proto.data.SalesRepresentative', null, global);
goog.exportSymbol('proto.data.TaxRate', null, global);
goog.exportSymbol('proto.data.UnitOfMeasure', null, global);
goog.exportSymbol('proto.data.Warehouse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.GetCountryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.GetCountryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.GetCountryRequest.displayName = 'proto.data.GetCountryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.ListBusinessPartnersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.data.ListBusinessPartnersResponse.repeatedFields_, null);
};
goog.inherits(proto.data.ListBusinessPartnersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.ListBusinessPartnersResponse.displayName = 'proto.data.ListBusinessPartnersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.ListBusinessPartnersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.ListBusinessPartnersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.ListBusinessPartnersRequest.displayName = 'proto.data.ListBusinessPartnersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.GetBusinessPartnerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.GetBusinessPartnerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.GetBusinessPartnerRequest.displayName = 'proto.data.GetBusinessPartnerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.CreateBusinessPartnerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.CreateBusinessPartnerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.CreateBusinessPartnerRequest.displayName = 'proto.data.CreateBusinessPartnerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.ListLanguagesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.ListLanguagesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.ListLanguagesRequest.displayName = 'proto.data.ListLanguagesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.ListLanguagesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.data.ListLanguagesResponse.repeatedFields_, null);
};
goog.inherits(proto.data.ListLanguagesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.ListLanguagesResponse.displayName = 'proto.data.ListLanguagesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.Country = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.Country, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.Country.displayName = 'proto.data.Country';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.GetConversionRateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.GetConversionRateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.GetConversionRateRequest.displayName = 'proto.data.GetConversionRateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.Currency = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.Currency, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.Currency.displayName = 'proto.data.Currency';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.ConversionRate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.ConversionRate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.ConversionRate.displayName = 'proto.data.ConversionRate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.Organization = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.Organization, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.Organization.displayName = 'proto.data.Organization';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.ListOrganizationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.data.ListOrganizationsResponse.repeatedFields_, null);
};
goog.inherits(proto.data.ListOrganizationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.ListOrganizationsResponse.displayName = 'proto.data.ListOrganizationsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.ListOrganizationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.ListOrganizationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.ListOrganizationsRequest.displayName = 'proto.data.ListOrganizationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.Warehouse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.Warehouse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.Warehouse.displayName = 'proto.data.Warehouse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.ListWarehousesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.data.ListWarehousesResponse.repeatedFields_, null);
};
goog.inherits(proto.data.ListWarehousesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.ListWarehousesResponse.displayName = 'proto.data.ListWarehousesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.ListWarehousesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.ListWarehousesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.ListWarehousesRequest.displayName = 'proto.data.ListWarehousesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.UnitOfMeasure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.UnitOfMeasure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.UnitOfMeasure.displayName = 'proto.data.UnitOfMeasure';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.ListProductConversionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.ListProductConversionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.ListProductConversionRequest.displayName = 'proto.data.ListProductConversionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.ProductConversion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.ProductConversion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.ProductConversion.displayName = 'proto.data.ProductConversion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.ListProductConversionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.data.ListProductConversionResponse.repeatedFields_, null);
};
goog.inherits(proto.data.ListProductConversionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.ListProductConversionResponse.displayName = 'proto.data.ListProductConversionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.Charge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.Charge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.Charge.displayName = 'proto.data.Charge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.BusinessPartner = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.BusinessPartner, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.BusinessPartner.displayName = 'proto.data.BusinessPartner';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.DocumentType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.DocumentType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.DocumentType.displayName = 'proto.data.DocumentType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.SalesRepresentative = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.SalesRepresentative, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.SalesRepresentative.displayName = 'proto.data.SalesRepresentative';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.Product = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.Product, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.Product.displayName = 'proto.data.Product';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.TaxRate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.TaxRate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.TaxRate.displayName = 'proto.data.TaxRate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.ProductPrice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.ProductPrice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.ProductPrice.displayName = 'proto.data.ProductPrice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.Language = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.Language, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.Language.displayName = 'proto.data.Language';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.PriceList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.PriceList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.PriceList.displayName = 'proto.data.PriceList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.data.BankAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.data.BankAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.data.BankAccount.displayName = 'proto.data.BankAccount';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.GetCountryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.data.GetCountryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.GetCountryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.GetCountryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.GetCountryRequest}
 */
proto.data.GetCountryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.GetCountryRequest;
  return proto.data.GetCountryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.GetCountryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.GetCountryRequest}
 */
proto.data.GetCountryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.GetCountryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.GetCountryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.GetCountryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.GetCountryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.data.GetCountryRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.GetCountryRequest} returns this
 */
proto.data.GetCountryRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.data.GetCountryRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.GetCountryRequest} returns this
 */
proto.data.GetCountryRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.data.ListBusinessPartnersResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.ListBusinessPartnersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.data.ListBusinessPartnersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.ListBusinessPartnersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListBusinessPartnersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    businessPartnersList: jspb.Message.toObjectList(msg.getBusinessPartnersList(),
    proto.data.BusinessPartner.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.ListBusinessPartnersResponse}
 */
proto.data.ListBusinessPartnersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.ListBusinessPartnersResponse;
  return proto.data.ListBusinessPartnersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.ListBusinessPartnersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.ListBusinessPartnersResponse}
 */
proto.data.ListBusinessPartnersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordCount(value);
      break;
    case 2:
      var value = new proto.data.BusinessPartner;
      reader.readMessage(value,proto.data.BusinessPartner.deserializeBinaryFromReader);
      msg.addBusinessPartners(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.ListBusinessPartnersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.ListBusinessPartnersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.ListBusinessPartnersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListBusinessPartnersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getBusinessPartnersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.data.BusinessPartner.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 record_count = 1;
 * @return {number}
 */
proto.data.ListBusinessPartnersResponse.prototype.getRecordCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.ListBusinessPartnersResponse} returns this
 */
proto.data.ListBusinessPartnersResponse.prototype.setRecordCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated BusinessPartner business_partners = 2;
 * @return {!Array<!proto.data.BusinessPartner>}
 */
proto.data.ListBusinessPartnersResponse.prototype.getBusinessPartnersList = function() {
  return /** @type{!Array<!proto.data.BusinessPartner>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.data.BusinessPartner, 2));
};


/**
 * @param {!Array<!proto.data.BusinessPartner>} value
 * @return {!proto.data.ListBusinessPartnersResponse} returns this
*/
proto.data.ListBusinessPartnersResponse.prototype.setBusinessPartnersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.data.BusinessPartner=} opt_value
 * @param {number=} opt_index
 * @return {!proto.data.BusinessPartner}
 */
proto.data.ListBusinessPartnersResponse.prototype.addBusinessPartners = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.data.BusinessPartner, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.data.ListBusinessPartnersResponse} returns this
 */
proto.data.ListBusinessPartnersResponse.prototype.clearBusinessPartnersList = function() {
  return this.setBusinessPartnersList([]);
};


/**
 * optional string next_page_token = 3;
 * @return {string}
 */
proto.data.ListBusinessPartnersResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListBusinessPartnersResponse} returns this
 */
proto.data.ListBusinessPartnersResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.ListBusinessPartnersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.data.ListBusinessPartnersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.ListBusinessPartnersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListBusinessPartnersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    searchValue: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contactName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    email: jspb.Message.getFieldWithDefault(msg, 7, ""),
    postalCode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 9, ""),
    criteria: (f = msg.getCriteria()) && proto_base_data_type_pb.Criteria.toObject(includeInstance, f),
    pageSize: jspb.Message.getFieldWithDefault(msg, 11, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.ListBusinessPartnersRequest}
 */
proto.data.ListBusinessPartnersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.ListBusinessPartnersRequest;
  return proto.data.ListBusinessPartnersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.ListBusinessPartnersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.ListBusinessPartnersRequest}
 */
proto.data.ListBusinessPartnersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostalCode(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 10:
      var value = new proto_base_data_type_pb.Criteria;
      reader.readMessage(value,proto_base_data_type_pb.Criteria.deserializeBinaryFromReader);
      msg.setCriteria(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.ListBusinessPartnersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.ListBusinessPartnersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.ListBusinessPartnersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListBusinessPartnersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSearchValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContactName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPostalCode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCriteria();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto_base_data_type_pb.Criteria.serializeBinaryToWriter
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string search_value = 2;
 * @return {string}
 */
proto.data.ListBusinessPartnersRequest.prototype.getSearchValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListBusinessPartnersRequest} returns this
 */
proto.data.ListBusinessPartnersRequest.prototype.setSearchValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.data.ListBusinessPartnersRequest.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListBusinessPartnersRequest} returns this
 */
proto.data.ListBusinessPartnersRequest.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.data.ListBusinessPartnersRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListBusinessPartnersRequest} returns this
 */
proto.data.ListBusinessPartnersRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string contact_name = 6;
 * @return {string}
 */
proto.data.ListBusinessPartnersRequest.prototype.getContactName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListBusinessPartnersRequest} returns this
 */
proto.data.ListBusinessPartnersRequest.prototype.setContactName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string email = 7;
 * @return {string}
 */
proto.data.ListBusinessPartnersRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListBusinessPartnersRequest} returns this
 */
proto.data.ListBusinessPartnersRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string postal_code = 8;
 * @return {string}
 */
proto.data.ListBusinessPartnersRequest.prototype.getPostalCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListBusinessPartnersRequest} returns this
 */
proto.data.ListBusinessPartnersRequest.prototype.setPostalCode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string phone = 9;
 * @return {string}
 */
proto.data.ListBusinessPartnersRequest.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListBusinessPartnersRequest} returns this
 */
proto.data.ListBusinessPartnersRequest.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional Criteria criteria = 10;
 * @return {?proto.data.Criteria}
 */
proto.data.ListBusinessPartnersRequest.prototype.getCriteria = function() {
  return /** @type{?proto.data.Criteria} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Criteria, 10));
};


/**
 * @param {?proto.data.Criteria|undefined} value
 * @return {!proto.data.ListBusinessPartnersRequest} returns this
*/
proto.data.ListBusinessPartnersRequest.prototype.setCriteria = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ListBusinessPartnersRequest} returns this
 */
proto.data.ListBusinessPartnersRequest.prototype.clearCriteria = function() {
  return this.setCriteria(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ListBusinessPartnersRequest.prototype.hasCriteria = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 page_size = 11;
 * @return {number}
 */
proto.data.ListBusinessPartnersRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.ListBusinessPartnersRequest} returns this
 */
proto.data.ListBusinessPartnersRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string page_token = 12;
 * @return {string}
 */
proto.data.ListBusinessPartnersRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListBusinessPartnersRequest} returns this
 */
proto.data.ListBusinessPartnersRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.GetBusinessPartnerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.data.GetBusinessPartnerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.GetBusinessPartnerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.GetBusinessPartnerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    searchValue: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    contactName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    email: jspb.Message.getFieldWithDefault(msg, 7, ""),
    postalCode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 9, ""),
    criteria: (f = msg.getCriteria()) && proto_base_data_type_pb.Criteria.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.GetBusinessPartnerRequest}
 */
proto.data.GetBusinessPartnerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.GetBusinessPartnerRequest;
  return proto.data.GetBusinessPartnerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.GetBusinessPartnerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.GetBusinessPartnerRequest}
 */
proto.data.GetBusinessPartnerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostalCode(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 10:
      var value = new proto_base_data_type_pb.Criteria;
      reader.readMessage(value,proto_base_data_type_pb.Criteria.deserializeBinaryFromReader);
      msg.setCriteria(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.GetBusinessPartnerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.GetBusinessPartnerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.GetBusinessPartnerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.GetBusinessPartnerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSearchValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getContactName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPostalCode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCriteria();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto_base_data_type_pb.Criteria.serializeBinaryToWriter
    );
  }
};


/**
 * optional string search_value = 2;
 * @return {string}
 */
proto.data.GetBusinessPartnerRequest.prototype.getSearchValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.GetBusinessPartnerRequest} returns this
 */
proto.data.GetBusinessPartnerRequest.prototype.setSearchValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.data.GetBusinessPartnerRequest.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.GetBusinessPartnerRequest} returns this
 */
proto.data.GetBusinessPartnerRequest.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.data.GetBusinessPartnerRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.GetBusinessPartnerRequest} returns this
 */
proto.data.GetBusinessPartnerRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string contact_name = 6;
 * @return {string}
 */
proto.data.GetBusinessPartnerRequest.prototype.getContactName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.GetBusinessPartnerRequest} returns this
 */
proto.data.GetBusinessPartnerRequest.prototype.setContactName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string email = 7;
 * @return {string}
 */
proto.data.GetBusinessPartnerRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.GetBusinessPartnerRequest} returns this
 */
proto.data.GetBusinessPartnerRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string postal_code = 8;
 * @return {string}
 */
proto.data.GetBusinessPartnerRequest.prototype.getPostalCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.GetBusinessPartnerRequest} returns this
 */
proto.data.GetBusinessPartnerRequest.prototype.setPostalCode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string phone = 9;
 * @return {string}
 */
proto.data.GetBusinessPartnerRequest.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.GetBusinessPartnerRequest} returns this
 */
proto.data.GetBusinessPartnerRequest.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional Criteria criteria = 10;
 * @return {?proto.data.Criteria}
 */
proto.data.GetBusinessPartnerRequest.prototype.getCriteria = function() {
  return /** @type{?proto.data.Criteria} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Criteria, 10));
};


/**
 * @param {?proto.data.Criteria|undefined} value
 * @return {!proto.data.GetBusinessPartnerRequest} returns this
*/
proto.data.GetBusinessPartnerRequest.prototype.setCriteria = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.GetBusinessPartnerRequest} returns this
 */
proto.data.GetBusinessPartnerRequest.prototype.clearCriteria = function() {
  return this.setCriteria(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.GetBusinessPartnerRequest.prototype.hasCriteria = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.CreateBusinessPartnerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.data.CreateBusinessPartnerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.CreateBusinessPartnerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.CreateBusinessPartnerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    taxId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    duns: jspb.Message.getFieldWithDefault(msg, 4, ""),
    naics: jspb.Message.getFieldWithDefault(msg, 5, ""),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    contactName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    email: jspb.Message.getFieldWithDefault(msg, 10, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 11, ""),
    businessPartnerGroupUuid: jspb.Message.getFieldWithDefault(msg, 12, ""),
    address1: jspb.Message.getFieldWithDefault(msg, 13, ""),
    address2: jspb.Message.getFieldWithDefault(msg, 14, ""),
    address3: jspb.Message.getFieldWithDefault(msg, 15, ""),
    address4: jspb.Message.getFieldWithDefault(msg, 16, ""),
    cityUuid: jspb.Message.getFieldWithDefault(msg, 17, ""),
    cityName: jspb.Message.getFieldWithDefault(msg, 18, ""),
    postalCode: jspb.Message.getFieldWithDefault(msg, 19, ""),
    regionUuid: jspb.Message.getFieldWithDefault(msg, 20, ""),
    regionName: jspb.Message.getFieldWithDefault(msg, 21, ""),
    countryUuid: jspb.Message.getFieldWithDefault(msg, 22, ""),
    posUuid: jspb.Message.getFieldWithDefault(msg, 23, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.CreateBusinessPartnerRequest}
 */
proto.data.CreateBusinessPartnerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.CreateBusinessPartnerRequest;
  return proto.data.CreateBusinessPartnerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.CreateBusinessPartnerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.CreateBusinessPartnerRequest}
 */
proto.data.CreateBusinessPartnerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaxId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDuns(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNaics(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessPartnerGroupUuid(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress1(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress2(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress3(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress4(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setCityUuid(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setCityName(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostalCode(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionUuid(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionName(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryUuid(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setPosUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.CreateBusinessPartnerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.CreateBusinessPartnerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.CreateBusinessPartnerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.CreateBusinessPartnerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTaxId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDuns();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNaics();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getContactName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getBusinessPartnerGroupUuid();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getAddress1();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getAddress2();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAddress3();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getAddress4();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCityUuid();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getCityName();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getPostalCode();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getRegionUuid();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getRegionName();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getCountryUuid();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getPosUuid();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string tax_id = 3;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getTaxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setTaxId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string duns = 4;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getDuns = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setDuns = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string naics = 5;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getNaics = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setNaics = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string last_name = 7;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setLastName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string contact_name = 9;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getContactName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setContactName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string email = 10;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string phone = 11;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string business_partner_group_uuid = 12;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getBusinessPartnerGroupUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setBusinessPartnerGroupUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string address1 = 13;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getAddress1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setAddress1 = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string address2 = 14;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getAddress2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setAddress2 = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string address3 = 15;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getAddress3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setAddress3 = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string address4 = 16;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getAddress4 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setAddress4 = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string city_uuid = 17;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getCityUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setCityUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string city_name = 18;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getCityName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setCityName = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string postal_code = 19;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getPostalCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setPostalCode = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string region_uuid = 20;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getRegionUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setRegionUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string region_name = 21;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getRegionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setRegionName = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string country_uuid = 22;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getCountryUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setCountryUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string pos_uuid = 23;
 * @return {string}
 */
proto.data.CreateBusinessPartnerRequest.prototype.getPosUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.CreateBusinessPartnerRequest} returns this
 */
proto.data.CreateBusinessPartnerRequest.prototype.setPosUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.ListLanguagesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.data.ListLanguagesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.ListLanguagesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListLanguagesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.ListLanguagesRequest}
 */
proto.data.ListLanguagesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.ListLanguagesRequest;
  return proto.data.ListLanguagesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.ListLanguagesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.ListLanguagesRequest}
 */
proto.data.ListLanguagesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.ListLanguagesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.ListLanguagesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.ListLanguagesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListLanguagesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 page_size = 2;
 * @return {number}
 */
proto.data.ListLanguagesRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.ListLanguagesRequest} returns this
 */
proto.data.ListLanguagesRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string page_token = 3;
 * @return {string}
 */
proto.data.ListLanguagesRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListLanguagesRequest} returns this
 */
proto.data.ListLanguagesRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.data.ListLanguagesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.ListLanguagesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.data.ListLanguagesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.ListLanguagesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListLanguagesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    languagesList: jspb.Message.toObjectList(msg.getLanguagesList(),
    proto.data.Language.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.ListLanguagesResponse}
 */
proto.data.ListLanguagesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.ListLanguagesResponse;
  return proto.data.ListLanguagesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.ListLanguagesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.ListLanguagesResponse}
 */
proto.data.ListLanguagesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordCount(value);
      break;
    case 2:
      var value = new proto.data.Language;
      reader.readMessage(value,proto.data.Language.deserializeBinaryFromReader);
      msg.addLanguages(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.ListLanguagesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.ListLanguagesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.ListLanguagesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListLanguagesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getLanguagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.data.Language.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 record_count = 1;
 * @return {number}
 */
proto.data.ListLanguagesResponse.prototype.getRecordCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.ListLanguagesResponse} returns this
 */
proto.data.ListLanguagesResponse.prototype.setRecordCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Language languages = 2;
 * @return {!Array<!proto.data.Language>}
 */
proto.data.ListLanguagesResponse.prototype.getLanguagesList = function() {
  return /** @type{!Array<!proto.data.Language>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.data.Language, 2));
};


/**
 * @param {!Array<!proto.data.Language>} value
 * @return {!proto.data.ListLanguagesResponse} returns this
*/
proto.data.ListLanguagesResponse.prototype.setLanguagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.data.Language=} opt_value
 * @param {number=} opt_index
 * @return {!proto.data.Language}
 */
proto.data.ListLanguagesResponse.prototype.addLanguages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.data.Language, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.data.ListLanguagesResponse} returns this
 */
proto.data.ListLanguagesResponse.prototype.clearLanguagesList = function() {
  return this.setLanguagesList([]);
};


/**
 * optional string next_page_token = 3;
 * @return {string}
 */
proto.data.ListLanguagesResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListLanguagesResponse} returns this
 */
proto.data.ListLanguagesResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.Country.prototype.toObject = function(opt_includeInstance) {
  return proto.data.Country.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.Country} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.Country.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    countryCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    hasRegion: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    regionName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    displaySequence: jspb.Message.getFieldWithDefault(msg, 8, ""),
    isAddressLinesReverse: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    captureSequence: jspb.Message.getFieldWithDefault(msg, 10, ""),
    displaySequenceLocal: jspb.Message.getFieldWithDefault(msg, 11, ""),
    isAddressLinesLocalReverse: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    expressionPostal: jspb.Message.getFieldWithDefault(msg, 13, ""),
    hasPostalAdd: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    expressionPhone: jspb.Message.getFieldWithDefault(msg, 15, ""),
    mediaSize: jspb.Message.getFieldWithDefault(msg, 16, ""),
    expressionBankRoutingNo: jspb.Message.getFieldWithDefault(msg, 17, ""),
    expressionBankAccountNo: jspb.Message.getFieldWithDefault(msg, 18, ""),
    language: jspb.Message.getFieldWithDefault(msg, 19, ""),
    allowCitiesOutOfList: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    isPostcodeLookup: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    currency: (f = msg.getCurrency()) && proto.data.Currency.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.Country}
 */
proto.data.Country.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.Country;
  return proto.data.Country.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.Country} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.Country}
 */
proto.data.Country.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasRegion(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplaySequence(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAddressLinesReverse(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaptureSequence(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplaySequenceLocal(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAddressLinesLocalReverse(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpressionPostal(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasPostalAdd(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpressionPhone(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setMediaSize(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpressionBankRoutingNo(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpressionBankAccountNo(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowCitiesOutOfList(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPostcodeLookup(value);
      break;
    case 22:
      var value = new proto.data.Currency;
      reader.readMessage(value,proto.data.Currency.deserializeBinaryFromReader);
      msg.setCurrency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.Country.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.Country.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.Country} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.Country.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHasRegion();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getRegionName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDisplaySequence();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getIsAddressLinesReverse();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getCaptureSequence();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDisplaySequenceLocal();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getIsAddressLinesLocalReverse();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getExpressionPostal();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getHasPostalAdd();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getExpressionPhone();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getMediaSize();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getExpressionBankRoutingNo();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getExpressionBankAccountNo();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getAllowCitiesOutOfList();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getIsPostcodeLookup();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getCurrency();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.data.Currency.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.data.Country.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.data.Country.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string country_code = 3;
 * @return {string}
 */
proto.data.Country.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.data.Country.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.data.Country.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool has_region = 6;
 * @return {boolean}
 */
proto.data.Country.prototype.getHasRegion = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setHasRegion = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string region_name = 7;
 * @return {string}
 */
proto.data.Country.prototype.getRegionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setRegionName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string display_sequence = 8;
 * @return {string}
 */
proto.data.Country.prototype.getDisplaySequence = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setDisplaySequence = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool is_address_lines_reverse = 9;
 * @return {boolean}
 */
proto.data.Country.prototype.getIsAddressLinesReverse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setIsAddressLinesReverse = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional string capture_sequence = 10;
 * @return {string}
 */
proto.data.Country.prototype.getCaptureSequence = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setCaptureSequence = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string display_sequence_local = 11;
 * @return {string}
 */
proto.data.Country.prototype.getDisplaySequenceLocal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setDisplaySequenceLocal = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool is_address_lines_local_reverse = 12;
 * @return {boolean}
 */
proto.data.Country.prototype.getIsAddressLinesLocalReverse = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setIsAddressLinesLocalReverse = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional string expression_postal = 13;
 * @return {string}
 */
proto.data.Country.prototype.getExpressionPostal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setExpressionPostal = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional bool has_postal_add = 14;
 * @return {boolean}
 */
proto.data.Country.prototype.getHasPostalAdd = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setHasPostalAdd = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional string expression_phone = 15;
 * @return {string}
 */
proto.data.Country.prototype.getExpressionPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setExpressionPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string media_size = 16;
 * @return {string}
 */
proto.data.Country.prototype.getMediaSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setMediaSize = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string expression_bank_routing_no = 17;
 * @return {string}
 */
proto.data.Country.prototype.getExpressionBankRoutingNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setExpressionBankRoutingNo = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string expression_bank_account_no = 18;
 * @return {string}
 */
proto.data.Country.prototype.getExpressionBankAccountNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setExpressionBankAccountNo = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string language = 19;
 * @return {string}
 */
proto.data.Country.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional bool allow_cities_out_of_list = 20;
 * @return {boolean}
 */
proto.data.Country.prototype.getAllowCitiesOutOfList = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setAllowCitiesOutOfList = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional bool is_postcode_lookup = 21;
 * @return {boolean}
 */
proto.data.Country.prototype.getIsPostcodeLookup = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.setIsPostcodeLookup = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional Currency currency = 22;
 * @return {?proto.data.Currency}
 */
proto.data.Country.prototype.getCurrency = function() {
  return /** @type{?proto.data.Currency} */ (
    jspb.Message.getWrapperField(this, proto.data.Currency, 22));
};


/**
 * @param {?proto.data.Currency|undefined} value
 * @return {!proto.data.Country} returns this
*/
proto.data.Country.prototype.setCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.Country} returns this
 */
proto.data.Country.prototype.clearCurrency = function() {
  return this.setCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.Country.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 22) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.GetConversionRateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.data.GetConversionRateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.GetConversionRateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.GetConversionRateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversionTypeUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    currencyFromUuid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    currencyToUuid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    conversionDate: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.GetConversionRateRequest}
 */
proto.data.GetConversionRateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.GetConversionRateRequest;
  return proto.data.GetConversionRateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.GetConversionRateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.GetConversionRateRequest}
 */
proto.data.GetConversionRateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversionTypeUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyFromUuid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyToUuid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversionDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.GetConversionRateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.GetConversionRateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.GetConversionRateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.GetConversionRateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversionTypeUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurrencyFromUuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCurrencyToUuid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getConversionDate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string conversion_type_uuid = 2;
 * @return {string}
 */
proto.data.GetConversionRateRequest.prototype.getConversionTypeUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.GetConversionRateRequest} returns this
 */
proto.data.GetConversionRateRequest.prototype.setConversionTypeUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string currency_from_uuid = 3;
 * @return {string}
 */
proto.data.GetConversionRateRequest.prototype.getCurrencyFromUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.GetConversionRateRequest} returns this
 */
proto.data.GetConversionRateRequest.prototype.setCurrencyFromUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string currency_to_uuid = 4;
 * @return {string}
 */
proto.data.GetConversionRateRequest.prototype.getCurrencyToUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.GetConversionRateRequest} returns this
 */
proto.data.GetConversionRateRequest.prototype.setCurrencyToUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string conversion_date = 5;
 * @return {string}
 */
proto.data.GetConversionRateRequest.prototype.getConversionDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.GetConversionRateRequest} returns this
 */
proto.data.GetConversionRateRequest.prototype.setConversionDate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.Currency.prototype.toObject = function(opt_includeInstance) {
  return proto.data.Currency.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.Currency} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.Currency.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    isoCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    curSymbol: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    standardPrecision: jspb.Message.getFieldWithDefault(msg, 6, 0),
    costingPrecision: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.Currency}
 */
proto.data.Currency.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.Currency;
  return proto.data.Currency.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.Currency} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.Currency}
 */
proto.data.Currency.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsoCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurSymbol(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStandardPrecision(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCostingPrecision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.Currency.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.Currency.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.Currency} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.Currency.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getIsoCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCurSymbol();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStandardPrecision();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getCostingPrecision();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.data.Currency.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Currency} returns this
 */
proto.data.Currency.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.data.Currency.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.Currency} returns this
 */
proto.data.Currency.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string iso_code = 3;
 * @return {string}
 */
proto.data.Currency.prototype.getIsoCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Currency} returns this
 */
proto.data.Currency.prototype.setIsoCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string cur_symbol = 4;
 * @return {string}
 */
proto.data.Currency.prototype.getCurSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Currency} returns this
 */
proto.data.Currency.prototype.setCurSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.data.Currency.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Currency} returns this
 */
proto.data.Currency.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 standard_precision = 6;
 * @return {number}
 */
proto.data.Currency.prototype.getStandardPrecision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.Currency} returns this
 */
proto.data.Currency.prototype.setStandardPrecision = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 costing_precision = 7;
 * @return {number}
 */
proto.data.Currency.prototype.getCostingPrecision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.Currency} returns this
 */
proto.data.Currency.prototype.setCostingPrecision = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.ConversionRate.prototype.toObject = function(opt_includeInstance) {
  return proto.data.ConversionRate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.ConversionRate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ConversionRate.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    conversionTypeUuid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    validFrom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    validTo: jspb.Message.getFieldWithDefault(msg, 5, ""),
    currencyFrom: (f = msg.getCurrencyFrom()) && proto.data.Currency.toObject(includeInstance, f),
    currencyTo: (f = msg.getCurrencyTo()) && proto.data.Currency.toObject(includeInstance, f),
    multiplyRate: (f = msg.getMultiplyRate()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    divideRate: (f = msg.getDivideRate()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.ConversionRate}
 */
proto.data.ConversionRate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.ConversionRate;
  return proto.data.ConversionRate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.ConversionRate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.ConversionRate}
 */
proto.data.ConversionRate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversionTypeUuid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidFrom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidTo(value);
      break;
    case 6:
      var value = new proto.data.Currency;
      reader.readMessage(value,proto.data.Currency.deserializeBinaryFromReader);
      msg.setCurrencyFrom(value);
      break;
    case 7:
      var value = new proto.data.Currency;
      reader.readMessage(value,proto.data.Currency.deserializeBinaryFromReader);
      msg.setCurrencyTo(value);
      break;
    case 8:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setMultiplyRate(value);
      break;
    case 9:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setDivideRate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.ConversionRate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.ConversionRate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.ConversionRate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ConversionRate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getConversionTypeUuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getValidFrom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getValidTo();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCurrencyFrom();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.data.Currency.serializeBinaryToWriter
    );
  }
  f = message.getCurrencyTo();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.data.Currency.serializeBinaryToWriter
    );
  }
  f = message.getMultiplyRate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getDivideRate();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.data.ConversionRate.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ConversionRate} returns this
 */
proto.data.ConversionRate.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.data.ConversionRate.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.ConversionRate} returns this
 */
proto.data.ConversionRate.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string conversion_type_uuid = 3;
 * @return {string}
 */
proto.data.ConversionRate.prototype.getConversionTypeUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ConversionRate} returns this
 */
proto.data.ConversionRate.prototype.setConversionTypeUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string valid_from = 4;
 * @return {string}
 */
proto.data.ConversionRate.prototype.getValidFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ConversionRate} returns this
 */
proto.data.ConversionRate.prototype.setValidFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string valid_to = 5;
 * @return {string}
 */
proto.data.ConversionRate.prototype.getValidTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ConversionRate} returns this
 */
proto.data.ConversionRate.prototype.setValidTo = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Currency currency_from = 6;
 * @return {?proto.data.Currency}
 */
proto.data.ConversionRate.prototype.getCurrencyFrom = function() {
  return /** @type{?proto.data.Currency} */ (
    jspb.Message.getWrapperField(this, proto.data.Currency, 6));
};


/**
 * @param {?proto.data.Currency|undefined} value
 * @return {!proto.data.ConversionRate} returns this
*/
proto.data.ConversionRate.prototype.setCurrencyFrom = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ConversionRate} returns this
 */
proto.data.ConversionRate.prototype.clearCurrencyFrom = function() {
  return this.setCurrencyFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ConversionRate.prototype.hasCurrencyFrom = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Currency currency_to = 7;
 * @return {?proto.data.Currency}
 */
proto.data.ConversionRate.prototype.getCurrencyTo = function() {
  return /** @type{?proto.data.Currency} */ (
    jspb.Message.getWrapperField(this, proto.data.Currency, 7));
};


/**
 * @param {?proto.data.Currency|undefined} value
 * @return {!proto.data.ConversionRate} returns this
*/
proto.data.ConversionRate.prototype.setCurrencyTo = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ConversionRate} returns this
 */
proto.data.ConversionRate.prototype.clearCurrencyTo = function() {
  return this.setCurrencyTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ConversionRate.prototype.hasCurrencyTo = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Decimal multiply_rate = 8;
 * @return {?proto.data.Decimal}
 */
proto.data.ConversionRate.prototype.getMultiplyRate = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 8));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.ConversionRate} returns this
*/
proto.data.ConversionRate.prototype.setMultiplyRate = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ConversionRate} returns this
 */
proto.data.ConversionRate.prototype.clearMultiplyRate = function() {
  return this.setMultiplyRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ConversionRate.prototype.hasMultiplyRate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Decimal divide_rate = 9;
 * @return {?proto.data.Decimal}
 */
proto.data.ConversionRate.prototype.getDivideRate = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 9));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.ConversionRate} returns this
*/
proto.data.ConversionRate.prototype.setDivideRate = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ConversionRate} returns this
 */
proto.data.ConversionRate.prototype.clearDivideRate = function() {
  return this.setDivideRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ConversionRate.prototype.hasDivideRate = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.Organization.prototype.toObject = function(opt_includeInstance) {
  return proto.data.Organization.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.Organization} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.Organization.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isReadOnly: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    duns: jspb.Message.getFieldWithDefault(msg, 6, ""),
    taxId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 8, ""),
    phone2: jspb.Message.getFieldWithDefault(msg, 9, ""),
    fax: jspb.Message.getFieldWithDefault(msg, 10, ""),
    corporateBrandingImage: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.Organization}
 */
proto.data.Organization.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.Organization;
  return proto.data.Organization.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.Organization} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.Organization}
 */
proto.data.Organization.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsReadOnly(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDuns(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaxId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone2(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setFax(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCorporateBrandingImage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.Organization.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.Organization.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.Organization} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.Organization.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsReadOnly();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getDuns();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTaxId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPhone2();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getFax();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCorporateBrandingImage();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.data.Organization.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Organization} returns this
 */
proto.data.Organization.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.data.Organization.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.Organization} returns this
 */
proto.data.Organization.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.data.Organization.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Organization} returns this
 */
proto.data.Organization.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.data.Organization.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Organization} returns this
 */
proto.data.Organization.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool is_read_only = 5;
 * @return {boolean}
 */
proto.data.Organization.prototype.getIsReadOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.Organization} returns this
 */
proto.data.Organization.prototype.setIsReadOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string duns = 6;
 * @return {string}
 */
proto.data.Organization.prototype.getDuns = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Organization} returns this
 */
proto.data.Organization.prototype.setDuns = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string tax_id = 7;
 * @return {string}
 */
proto.data.Organization.prototype.getTaxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Organization} returns this
 */
proto.data.Organization.prototype.setTaxId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string phone = 8;
 * @return {string}
 */
proto.data.Organization.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Organization} returns this
 */
proto.data.Organization.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string phone2 = 9;
 * @return {string}
 */
proto.data.Organization.prototype.getPhone2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Organization} returns this
 */
proto.data.Organization.prototype.setPhone2 = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string fax = 10;
 * @return {string}
 */
proto.data.Organization.prototype.getFax = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Organization} returns this
 */
proto.data.Organization.prototype.setFax = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string corporate_branding_image = 11;
 * @return {string}
 */
proto.data.Organization.prototype.getCorporateBrandingImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Organization} returns this
 */
proto.data.Organization.prototype.setCorporateBrandingImage = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.data.ListOrganizationsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.ListOrganizationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.data.ListOrganizationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.ListOrganizationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListOrganizationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    organizationsList: jspb.Message.toObjectList(msg.getOrganizationsList(),
    proto.data.Organization.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.ListOrganizationsResponse}
 */
proto.data.ListOrganizationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.ListOrganizationsResponse;
  return proto.data.ListOrganizationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.ListOrganizationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.ListOrganizationsResponse}
 */
proto.data.ListOrganizationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordCount(value);
      break;
    case 2:
      var value = new proto.data.Organization;
      reader.readMessage(value,proto.data.Organization.deserializeBinaryFromReader);
      msg.addOrganizations(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.ListOrganizationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.ListOrganizationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.ListOrganizationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListOrganizationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getOrganizationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.data.Organization.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int64 record_count = 1;
 * @return {number}
 */
proto.data.ListOrganizationsResponse.prototype.getRecordCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.ListOrganizationsResponse} returns this
 */
proto.data.ListOrganizationsResponse.prototype.setRecordCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Organization organizations = 2;
 * @return {!Array<!proto.data.Organization>}
 */
proto.data.ListOrganizationsResponse.prototype.getOrganizationsList = function() {
  return /** @type{!Array<!proto.data.Organization>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.data.Organization, 2));
};


/**
 * @param {!Array<!proto.data.Organization>} value
 * @return {!proto.data.ListOrganizationsResponse} returns this
*/
proto.data.ListOrganizationsResponse.prototype.setOrganizationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.data.Organization=} opt_value
 * @param {number=} opt_index
 * @return {!proto.data.Organization}
 */
proto.data.ListOrganizationsResponse.prototype.addOrganizations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.data.Organization, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.data.ListOrganizationsResponse} returns this
 */
proto.data.ListOrganizationsResponse.prototype.clearOrganizationsList = function() {
  return this.setOrganizationsList([]);
};


/**
 * optional string next_page_token = 4;
 * @return {string}
 */
proto.data.ListOrganizationsResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListOrganizationsResponse} returns this
 */
proto.data.ListOrganizationsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.ListOrganizationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.data.ListOrganizationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.ListOrganizationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListOrganizationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    roleId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    roleUuid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.ListOrganizationsRequest}
 */
proto.data.ListOrganizationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.ListOrganizationsRequest;
  return proto.data.ListOrganizationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.ListOrganizationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.ListOrganizationsRequest}
 */
proto.data.ListOrganizationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRoleId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoleUuid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.ListOrganizationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.ListOrganizationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.ListOrganizationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListOrganizationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoleId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRoleUuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int32 role_id = 2;
 * @return {number}
 */
proto.data.ListOrganizationsRequest.prototype.getRoleId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.ListOrganizationsRequest} returns this
 */
proto.data.ListOrganizationsRequest.prototype.setRoleId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string role_uuid = 3;
 * @return {string}
 */
proto.data.ListOrganizationsRequest.prototype.getRoleUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListOrganizationsRequest} returns this
 */
proto.data.ListOrganizationsRequest.prototype.setRoleUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 page_size = 4;
 * @return {number}
 */
proto.data.ListOrganizationsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.ListOrganizationsRequest} returns this
 */
proto.data.ListOrganizationsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string page_token = 5;
 * @return {string}
 */
proto.data.ListOrganizationsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListOrganizationsRequest} returns this
 */
proto.data.ListOrganizationsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.Warehouse.prototype.toObject = function(opt_includeInstance) {
  return proto.data.Warehouse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.Warehouse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.Warehouse.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.Warehouse}
 */
proto.data.Warehouse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.Warehouse;
  return proto.data.Warehouse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.Warehouse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.Warehouse}
 */
proto.data.Warehouse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.Warehouse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.Warehouse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.Warehouse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.Warehouse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.data.Warehouse.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Warehouse} returns this
 */
proto.data.Warehouse.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.data.Warehouse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.Warehouse} returns this
 */
proto.data.Warehouse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.data.Warehouse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Warehouse} returns this
 */
proto.data.Warehouse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.data.Warehouse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Warehouse} returns this
 */
proto.data.Warehouse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.data.ListWarehousesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.ListWarehousesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.data.ListWarehousesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.ListWarehousesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListWarehousesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    warehousesList: jspb.Message.toObjectList(msg.getWarehousesList(),
    proto.data.Warehouse.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.ListWarehousesResponse}
 */
proto.data.ListWarehousesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.ListWarehousesResponse;
  return proto.data.ListWarehousesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.ListWarehousesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.ListWarehousesResponse}
 */
proto.data.ListWarehousesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordCount(value);
      break;
    case 2:
      var value = new proto.data.Warehouse;
      reader.readMessage(value,proto.data.Warehouse.deserializeBinaryFromReader);
      msg.addWarehouses(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.ListWarehousesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.ListWarehousesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.ListWarehousesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListWarehousesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getWarehousesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.data.Warehouse.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int64 record_count = 1;
 * @return {number}
 */
proto.data.ListWarehousesResponse.prototype.getRecordCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.ListWarehousesResponse} returns this
 */
proto.data.ListWarehousesResponse.prototype.setRecordCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Warehouse warehouses = 2;
 * @return {!Array<!proto.data.Warehouse>}
 */
proto.data.ListWarehousesResponse.prototype.getWarehousesList = function() {
  return /** @type{!Array<!proto.data.Warehouse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.data.Warehouse, 2));
};


/**
 * @param {!Array<!proto.data.Warehouse>} value
 * @return {!proto.data.ListWarehousesResponse} returns this
*/
proto.data.ListWarehousesResponse.prototype.setWarehousesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.data.Warehouse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.data.Warehouse}
 */
proto.data.ListWarehousesResponse.prototype.addWarehouses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.data.Warehouse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.data.ListWarehousesResponse} returns this
 */
proto.data.ListWarehousesResponse.prototype.clearWarehousesList = function() {
  return this.setWarehousesList([]);
};


/**
 * optional string next_page_token = 4;
 * @return {string}
 */
proto.data.ListWarehousesResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListWarehousesResponse} returns this
 */
proto.data.ListWarehousesResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.ListWarehousesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.data.ListWarehousesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.ListWarehousesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListWarehousesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organizationId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    organizationUuid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.ListWarehousesRequest}
 */
proto.data.ListWarehousesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.ListWarehousesRequest;
  return proto.data.ListWarehousesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.ListWarehousesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.ListWarehousesRequest}
 */
proto.data.ListWarehousesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOrganizationId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationUuid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.ListWarehousesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.ListWarehousesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.ListWarehousesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListWarehousesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrganizationId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOrganizationUuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int32 organization_id = 2;
 * @return {number}
 */
proto.data.ListWarehousesRequest.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.ListWarehousesRequest} returns this
 */
proto.data.ListWarehousesRequest.prototype.setOrganizationId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string organization_uuid = 3;
 * @return {string}
 */
proto.data.ListWarehousesRequest.prototype.getOrganizationUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListWarehousesRequest} returns this
 */
proto.data.ListWarehousesRequest.prototype.setOrganizationUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 page_size = 4;
 * @return {number}
 */
proto.data.ListWarehousesRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.ListWarehousesRequest} returns this
 */
proto.data.ListWarehousesRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string page_token = 5;
 * @return {string}
 */
proto.data.ListWarehousesRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListWarehousesRequest} returns this
 */
proto.data.ListWarehousesRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.UnitOfMeasure.prototype.toObject = function(opt_includeInstance) {
  return proto.data.UnitOfMeasure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.UnitOfMeasure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.UnitOfMeasure.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    code: jspb.Message.getFieldWithDefault(msg, 3, ""),
    symbol: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    standardPrecision: jspb.Message.getFieldWithDefault(msg, 7, 0),
    costingPrecision: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.UnitOfMeasure}
 */
proto.data.UnitOfMeasure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.UnitOfMeasure;
  return proto.data.UnitOfMeasure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.UnitOfMeasure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.UnitOfMeasure}
 */
proto.data.UnitOfMeasure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStandardPrecision(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCostingPrecision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.UnitOfMeasure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.UnitOfMeasure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.UnitOfMeasure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.UnitOfMeasure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStandardPrecision();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getCostingPrecision();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.data.UnitOfMeasure.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.UnitOfMeasure} returns this
 */
proto.data.UnitOfMeasure.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.data.UnitOfMeasure.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.UnitOfMeasure} returns this
 */
proto.data.UnitOfMeasure.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string code = 3;
 * @return {string}
 */
proto.data.UnitOfMeasure.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.UnitOfMeasure} returns this
 */
proto.data.UnitOfMeasure.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string symbol = 4;
 * @return {string}
 */
proto.data.UnitOfMeasure.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.UnitOfMeasure} returns this
 */
proto.data.UnitOfMeasure.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.data.UnitOfMeasure.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.UnitOfMeasure} returns this
 */
proto.data.UnitOfMeasure.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.data.UnitOfMeasure.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.UnitOfMeasure} returns this
 */
proto.data.UnitOfMeasure.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 standard_precision = 7;
 * @return {number}
 */
proto.data.UnitOfMeasure.prototype.getStandardPrecision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.UnitOfMeasure} returns this
 */
proto.data.UnitOfMeasure.prototype.setStandardPrecision = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 costing_precision = 8;
 * @return {number}
 */
proto.data.UnitOfMeasure.prototype.getCostingPrecision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.UnitOfMeasure} returns this
 */
proto.data.UnitOfMeasure.prototype.setCostingPrecision = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.ListProductConversionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.data.ListProductConversionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.ListProductConversionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListProductConversionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    productUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    productId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.ListProductConversionRequest}
 */
proto.data.ListProductConversionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.ListProductConversionRequest;
  return proto.data.ListProductConversionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.ListProductConversionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.ListProductConversionRequest}
 */
proto.data.ListProductConversionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProductId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.ListProductConversionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.ListProductConversionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.ListProductConversionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListProductConversionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProductId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string product_uuid = 2;
 * @return {string}
 */
proto.data.ListProductConversionRequest.prototype.getProductUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListProductConversionRequest} returns this
 */
proto.data.ListProductConversionRequest.prototype.setProductUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 product_id = 3;
 * @return {number}
 */
proto.data.ListProductConversionRequest.prototype.getProductId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.ListProductConversionRequest} returns this
 */
proto.data.ListProductConversionRequest.prototype.setProductId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 page_size = 4;
 * @return {number}
 */
proto.data.ListProductConversionRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.ListProductConversionRequest} returns this
 */
proto.data.ListProductConversionRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string page_token = 5;
 * @return {string}
 */
proto.data.ListProductConversionRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListProductConversionRequest} returns this
 */
proto.data.ListProductConversionRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.ProductConversion.prototype.toObject = function(opt_includeInstance) {
  return proto.data.ProductConversion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.ProductConversion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ProductConversion.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    uom: (f = msg.getUom()) && proto.data.UnitOfMeasure.toObject(includeInstance, f),
    productUom: (f = msg.getProductUom()) && proto.data.UnitOfMeasure.toObject(includeInstance, f),
    multiplyRate: (f = msg.getMultiplyRate()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    divideRate: (f = msg.getDivideRate()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.ProductConversion}
 */
proto.data.ProductConversion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.ProductConversion;
  return proto.data.ProductConversion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.ProductConversion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.ProductConversion}
 */
proto.data.ProductConversion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = new proto.data.UnitOfMeasure;
      reader.readMessage(value,proto.data.UnitOfMeasure.deserializeBinaryFromReader);
      msg.setUom(value);
      break;
    case 4:
      var value = new proto.data.UnitOfMeasure;
      reader.readMessage(value,proto.data.UnitOfMeasure.deserializeBinaryFromReader);
      msg.setProductUom(value);
      break;
    case 5:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setMultiplyRate(value);
      break;
    case 6:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setDivideRate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.ProductConversion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.ProductConversion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.ProductConversion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ProductConversion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getUom();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.data.UnitOfMeasure.serializeBinaryToWriter
    );
  }
  f = message.getProductUom();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.data.UnitOfMeasure.serializeBinaryToWriter
    );
  }
  f = message.getMultiplyRate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getDivideRate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.data.ProductConversion.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ProductConversion} returns this
 */
proto.data.ProductConversion.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.data.ProductConversion.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.ProductConversion} returns this
 */
proto.data.ProductConversion.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional UnitOfMeasure uom = 3;
 * @return {?proto.data.UnitOfMeasure}
 */
proto.data.ProductConversion.prototype.getUom = function() {
  return /** @type{?proto.data.UnitOfMeasure} */ (
    jspb.Message.getWrapperField(this, proto.data.UnitOfMeasure, 3));
};


/**
 * @param {?proto.data.UnitOfMeasure|undefined} value
 * @return {!proto.data.ProductConversion} returns this
*/
proto.data.ProductConversion.prototype.setUom = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductConversion} returns this
 */
proto.data.ProductConversion.prototype.clearUom = function() {
  return this.setUom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductConversion.prototype.hasUom = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional UnitOfMeasure product_uom = 4;
 * @return {?proto.data.UnitOfMeasure}
 */
proto.data.ProductConversion.prototype.getProductUom = function() {
  return /** @type{?proto.data.UnitOfMeasure} */ (
    jspb.Message.getWrapperField(this, proto.data.UnitOfMeasure, 4));
};


/**
 * @param {?proto.data.UnitOfMeasure|undefined} value
 * @return {!proto.data.ProductConversion} returns this
*/
proto.data.ProductConversion.prototype.setProductUom = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductConversion} returns this
 */
proto.data.ProductConversion.prototype.clearProductUom = function() {
  return this.setProductUom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductConversion.prototype.hasProductUom = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Decimal multiply_rate = 5;
 * @return {?proto.data.Decimal}
 */
proto.data.ProductConversion.prototype.getMultiplyRate = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 5));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.ProductConversion} returns this
*/
proto.data.ProductConversion.prototype.setMultiplyRate = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductConversion} returns this
 */
proto.data.ProductConversion.prototype.clearMultiplyRate = function() {
  return this.setMultiplyRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductConversion.prototype.hasMultiplyRate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Decimal divide_rate = 6;
 * @return {?proto.data.Decimal}
 */
proto.data.ProductConversion.prototype.getDivideRate = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 6));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.ProductConversion} returns this
*/
proto.data.ProductConversion.prototype.setDivideRate = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductConversion} returns this
 */
proto.data.ProductConversion.prototype.clearDivideRate = function() {
  return this.setDivideRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductConversion.prototype.hasDivideRate = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.data.ListProductConversionResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.ListProductConversionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.data.ListProductConversionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.ListProductConversionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListProductConversionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    productConversionList: jspb.Message.toObjectList(msg.getProductConversionList(),
    proto.data.ProductConversion.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.ListProductConversionResponse}
 */
proto.data.ListProductConversionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.ListProductConversionResponse;
  return proto.data.ListProductConversionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.ListProductConversionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.ListProductConversionResponse}
 */
proto.data.ListProductConversionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordCount(value);
      break;
    case 2:
      var value = new proto.data.ProductConversion;
      reader.readMessage(value,proto.data.ProductConversion.deserializeBinaryFromReader);
      msg.addProductConversion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.ListProductConversionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.ListProductConversionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.ListProductConversionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ListProductConversionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getProductConversionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.data.ProductConversion.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 record_count = 1;
 * @return {number}
 */
proto.data.ListProductConversionResponse.prototype.getRecordCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.ListProductConversionResponse} returns this
 */
proto.data.ListProductConversionResponse.prototype.setRecordCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated ProductConversion product_conversion = 2;
 * @return {!Array<!proto.data.ProductConversion>}
 */
proto.data.ListProductConversionResponse.prototype.getProductConversionList = function() {
  return /** @type{!Array<!proto.data.ProductConversion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.data.ProductConversion, 2));
};


/**
 * @param {!Array<!proto.data.ProductConversion>} value
 * @return {!proto.data.ListProductConversionResponse} returns this
*/
proto.data.ListProductConversionResponse.prototype.setProductConversionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.data.ProductConversion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.data.ProductConversion}
 */
proto.data.ListProductConversionResponse.prototype.addProductConversion = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.data.ProductConversion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.data.ListProductConversionResponse} returns this
 */
proto.data.ListProductConversionResponse.prototype.clearProductConversionList = function() {
  return this.setProductConversionList([]);
};


/**
 * optional string next_page_token = 3;
 * @return {string}
 */
proto.data.ListProductConversionResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ListProductConversionResponse} returns this
 */
proto.data.ListProductConversionResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.Charge.prototype.toObject = function(opt_includeInstance) {
  return proto.data.Charge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.Charge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.Charge.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.Charge}
 */
proto.data.Charge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.Charge;
  return proto.data.Charge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.Charge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.Charge}
 */
proto.data.Charge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.Charge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.Charge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.Charge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.Charge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.data.Charge.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Charge} returns this
 */
proto.data.Charge.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.data.Charge.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.Charge} returns this
 */
proto.data.Charge.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.data.Charge.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Charge} returns this
 */
proto.data.Charge.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.data.Charge.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Charge} returns this
 */
proto.data.Charge.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.BusinessPartner.prototype.toObject = function(opt_includeInstance) {
  return proto.data.BusinessPartner.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.BusinessPartner} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.BusinessPartner.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    taxId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    duns: jspb.Message.getFieldWithDefault(msg, 5, ""),
    naics: jspb.Message.getFieldWithDefault(msg, 6, ""),
    name: jspb.Message.getFieldWithDefault(msg, 7, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    description: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.BusinessPartner}
 */
proto.data.BusinessPartner.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.BusinessPartner;
  return proto.data.BusinessPartner.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.BusinessPartner} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.BusinessPartner}
 */
proto.data.BusinessPartner.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaxId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDuns(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setNaics(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.BusinessPartner.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.BusinessPartner.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.BusinessPartner} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.BusinessPartner.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTaxId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDuns();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNaics();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.data.BusinessPartner.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.BusinessPartner} returns this
 */
proto.data.BusinessPartner.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.data.BusinessPartner.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.BusinessPartner} returns this
 */
proto.data.BusinessPartner.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.data.BusinessPartner.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.BusinessPartner} returns this
 */
proto.data.BusinessPartner.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string tax_id = 4;
 * @return {string}
 */
proto.data.BusinessPartner.prototype.getTaxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.BusinessPartner} returns this
 */
proto.data.BusinessPartner.prototype.setTaxId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string duns = 5;
 * @return {string}
 */
proto.data.BusinessPartner.prototype.getDuns = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.BusinessPartner} returns this
 */
proto.data.BusinessPartner.prototype.setDuns = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string naics = 6;
 * @return {string}
 */
proto.data.BusinessPartner.prototype.getNaics = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.BusinessPartner} returns this
 */
proto.data.BusinessPartner.prototype.setNaics = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string name = 7;
 * @return {string}
 */
proto.data.BusinessPartner.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.BusinessPartner} returns this
 */
proto.data.BusinessPartner.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string last_name = 8;
 * @return {string}
 */
proto.data.BusinessPartner.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.BusinessPartner} returns this
 */
proto.data.BusinessPartner.prototype.setLastName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string description = 9;
 * @return {string}
 */
proto.data.BusinessPartner.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.BusinessPartner} returns this
 */
proto.data.BusinessPartner.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.DocumentType.prototype.toObject = function(opt_includeInstance) {
  return proto.data.DocumentType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.DocumentType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.DocumentType.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    printName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.DocumentType}
 */
proto.data.DocumentType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.DocumentType;
  return proto.data.DocumentType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.DocumentType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.DocumentType}
 */
proto.data.DocumentType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrintName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.DocumentType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.DocumentType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.DocumentType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.DocumentType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrintName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.data.DocumentType.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.DocumentType} returns this
 */
proto.data.DocumentType.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.data.DocumentType.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.DocumentType} returns this
 */
proto.data.DocumentType.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.data.DocumentType.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.DocumentType} returns this
 */
proto.data.DocumentType.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string print_name = 4;
 * @return {string}
 */
proto.data.DocumentType.prototype.getPrintName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.DocumentType} returns this
 */
proto.data.DocumentType.prototype.setPrintName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.data.DocumentType.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.DocumentType} returns this
 */
proto.data.DocumentType.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.SalesRepresentative.prototype.toObject = function(opt_includeInstance) {
  return proto.data.SalesRepresentative.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.SalesRepresentative} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.SalesRepresentative.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.SalesRepresentative}
 */
proto.data.SalesRepresentative.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.SalesRepresentative;
  return proto.data.SalesRepresentative.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.SalesRepresentative} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.SalesRepresentative}
 */
proto.data.SalesRepresentative.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.SalesRepresentative.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.SalesRepresentative.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.SalesRepresentative} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.SalesRepresentative.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.data.SalesRepresentative.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.SalesRepresentative} returns this
 */
proto.data.SalesRepresentative.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.data.SalesRepresentative.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.SalesRepresentative} returns this
 */
proto.data.SalesRepresentative.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.data.SalesRepresentative.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.SalesRepresentative} returns this
 */
proto.data.SalesRepresentative.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.data.SalesRepresentative.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.SalesRepresentative} returns this
 */
proto.data.SalesRepresentative.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.Product.prototype.toObject = function(opt_includeInstance) {
  return proto.data.Product.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.Product} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.Product.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    help: jspb.Message.getFieldWithDefault(msg, 5, ""),
    documentNote: jspb.Message.getFieldWithDefault(msg, 6, ""),
    uomName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    productType: jspb.Message.getFieldWithDefault(msg, 8, ""),
    isStocked: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    isDropShip: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    isPurchased: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    isSold: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    imageUrl: jspb.Message.getFieldWithDefault(msg, 13, ""),
    productCategoryName: jspb.Message.getFieldWithDefault(msg, 14, ""),
    productGroupName: jspb.Message.getFieldWithDefault(msg, 15, ""),
    productClassName: jspb.Message.getFieldWithDefault(msg, 16, ""),
    productClassificationName: jspb.Message.getFieldWithDefault(msg, 17, ""),
    weight: (f = msg.getWeight()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    volume: (f = msg.getVolume()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    upc: jspb.Message.getFieldWithDefault(msg, 20, ""),
    sku: jspb.Message.getFieldWithDefault(msg, 21, ""),
    shelfWidth: jspb.Message.getFieldWithDefault(msg, 22, 0),
    shelfHeight: (f = msg.getShelfHeight()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    shelfDepth: jspb.Message.getFieldWithDefault(msg, 24, 0),
    unitsPerPack: jspb.Message.getFieldWithDefault(msg, 25, 0),
    unitsPerPallet: (f = msg.getUnitsPerPallet()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    guaranteeDays: jspb.Message.getFieldWithDefault(msg, 27, 0),
    descriptionUrl: jspb.Message.getFieldWithDefault(msg, 28, ""),
    versionNo: jspb.Message.getFieldWithDefault(msg, 29, ""),
    taxCategory: jspb.Message.getFieldWithDefault(msg, 30, ""),
    description: jspb.Message.getFieldWithDefault(msg, 31, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.Product}
 */
proto.data.Product.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.Product;
  return proto.data.Product.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.Product} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.Product}
 */
proto.data.Product.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentNote(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUomName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductType(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsStocked(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDropShip(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPurchased(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSold(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageUrl(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductCategoryName(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductGroupName(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductClassName(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductClassificationName(value);
      break;
    case 18:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setWeight(value);
      break;
    case 19:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setVolume(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpc(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShelfWidth(value);
      break;
    case 23:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setShelfHeight(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShelfDepth(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUnitsPerPack(value);
      break;
    case 26:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setUnitsPerPallet(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGuaranteeDays(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescriptionUrl(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersionNo(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaxCategory(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.Product.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.Product.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.Product} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.Product.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDocumentNote();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUomName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getProductType();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getIsStocked();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIsDropShip();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsPurchased();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getIsSold();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getProductCategoryName();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getProductGroupName();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getProductClassName();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getProductClassificationName();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getWeight();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getVolume();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getUpc();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getShelfWidth();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getShelfHeight();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getShelfDepth();
  if (f !== 0) {
    writer.writeInt32(
      24,
      f
    );
  }
  f = message.getUnitsPerPack();
  if (f !== 0) {
    writer.writeInt32(
      25,
      f
    );
  }
  f = message.getUnitsPerPallet();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getGuaranteeDays();
  if (f !== 0) {
    writer.writeInt32(
      27,
      f
    );
  }
  f = message.getDescriptionUrl();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getVersionNo();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getTaxCategory();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.data.Product.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.data.Product.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.data.Product.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.data.Product.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string help = 5;
 * @return {string}
 */
proto.data.Product.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string document_note = 6;
 * @return {string}
 */
proto.data.Product.prototype.getDocumentNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setDocumentNote = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string uom_name = 7;
 * @return {string}
 */
proto.data.Product.prototype.getUomName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setUomName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string product_type = 8;
 * @return {string}
 */
proto.data.Product.prototype.getProductType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setProductType = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool is_stocked = 9;
 * @return {boolean}
 */
proto.data.Product.prototype.getIsStocked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setIsStocked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool is_drop_ship = 10;
 * @return {boolean}
 */
proto.data.Product.prototype.getIsDropShip = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setIsDropShip = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool is_purchased = 11;
 * @return {boolean}
 */
proto.data.Product.prototype.getIsPurchased = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setIsPurchased = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool is_sold = 12;
 * @return {boolean}
 */
proto.data.Product.prototype.getIsSold = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setIsSold = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional string image_url = 13;
 * @return {string}
 */
proto.data.Product.prototype.getImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setImageUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string product_category_name = 14;
 * @return {string}
 */
proto.data.Product.prototype.getProductCategoryName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setProductCategoryName = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string product_group_name = 15;
 * @return {string}
 */
proto.data.Product.prototype.getProductGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setProductGroupName = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string product_class_name = 16;
 * @return {string}
 */
proto.data.Product.prototype.getProductClassName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setProductClassName = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string product_classification_name = 17;
 * @return {string}
 */
proto.data.Product.prototype.getProductClassificationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setProductClassificationName = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional Decimal weight = 18;
 * @return {?proto.data.Decimal}
 */
proto.data.Product.prototype.getWeight = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 18));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.Product} returns this
*/
proto.data.Product.prototype.setWeight = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.clearWeight = function() {
  return this.setWeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.Product.prototype.hasWeight = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional Decimal volume = 19;
 * @return {?proto.data.Decimal}
 */
proto.data.Product.prototype.getVolume = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 19));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.Product} returns this
*/
proto.data.Product.prototype.setVolume = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.clearVolume = function() {
  return this.setVolume(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.Product.prototype.hasVolume = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional string upc = 20;
 * @return {string}
 */
proto.data.Product.prototype.getUpc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setUpc = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string sku = 21;
 * @return {string}
 */
proto.data.Product.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional int32 shelf_width = 22;
 * @return {number}
 */
proto.data.Product.prototype.getShelfWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setShelfWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional Decimal shelf_height = 23;
 * @return {?proto.data.Decimal}
 */
proto.data.Product.prototype.getShelfHeight = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 23));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.Product} returns this
*/
proto.data.Product.prototype.setShelfHeight = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.clearShelfHeight = function() {
  return this.setShelfHeight(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.Product.prototype.hasShelfHeight = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional int32 shelf_depth = 24;
 * @return {number}
 */
proto.data.Product.prototype.getShelfDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setShelfDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};


/**
 * optional int32 units_per_pack = 25;
 * @return {number}
 */
proto.data.Product.prototype.getUnitsPerPack = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setUnitsPerPack = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional Decimal units_per_pallet = 26;
 * @return {?proto.data.Decimal}
 */
proto.data.Product.prototype.getUnitsPerPallet = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 26));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.Product} returns this
*/
proto.data.Product.prototype.setUnitsPerPallet = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.clearUnitsPerPallet = function() {
  return this.setUnitsPerPallet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.Product.prototype.hasUnitsPerPallet = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional int32 guarantee_days = 27;
 * @return {number}
 */
proto.data.Product.prototype.getGuaranteeDays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setGuaranteeDays = function(value) {
  return jspb.Message.setProto3IntField(this, 27, value);
};


/**
 * optional string description_url = 28;
 * @return {string}
 */
proto.data.Product.prototype.getDescriptionUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setDescriptionUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string version_no = 29;
 * @return {string}
 */
proto.data.Product.prototype.getVersionNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setVersionNo = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional string tax_category = 30;
 * @return {string}
 */
proto.data.Product.prototype.getTaxCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setTaxCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string description = 31;
 * @return {string}
 */
proto.data.Product.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Product} returns this
 */
proto.data.Product.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.TaxRate.prototype.toObject = function(opt_includeInstance) {
  return proto.data.TaxRate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.TaxRate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.TaxRate.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    taxIndicator: jspb.Message.getFieldWithDefault(msg, 5, ""),
    rate: (f = msg.getRate()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.TaxRate}
 */
proto.data.TaxRate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.TaxRate;
  return proto.data.TaxRate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.TaxRate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.TaxRate}
 */
proto.data.TaxRate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaxIndicator(value);
      break;
    case 6:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setRate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.TaxRate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.TaxRate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.TaxRate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.TaxRate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTaxIndicator();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.data.TaxRate.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.TaxRate} returns this
 */
proto.data.TaxRate.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.data.TaxRate.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.TaxRate} returns this
 */
proto.data.TaxRate.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.data.TaxRate.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.TaxRate} returns this
 */
proto.data.TaxRate.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.data.TaxRate.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.TaxRate} returns this
 */
proto.data.TaxRate.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string tax_indicator = 5;
 * @return {string}
 */
proto.data.TaxRate.prototype.getTaxIndicator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.TaxRate} returns this
 */
proto.data.TaxRate.prototype.setTaxIndicator = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Decimal rate = 6;
 * @return {?proto.data.Decimal}
 */
proto.data.TaxRate.prototype.getRate = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 6));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.TaxRate} returns this
*/
proto.data.TaxRate.prototype.setRate = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.TaxRate} returns this
 */
proto.data.TaxRate.prototype.clearRate = function() {
  return this.setRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.TaxRate.prototype.hasRate = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.ProductPrice.prototype.toObject = function(opt_includeInstance) {
  return proto.data.ProductPrice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.ProductPrice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ProductPrice.toObject = function(includeInstance, msg) {
  var f, obj = {
    product: (f = msg.getProduct()) && proto.data.Product.toObject(includeInstance, f),
    priceList: (f = msg.getPriceList()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    priceStandard: (f = msg.getPriceStandard()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    priceLimit: (f = msg.getPriceLimit()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    priceListName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isTaxIncluded: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    validFrom: jspb.Message.getFieldWithDefault(msg, 7, ""),
    currency: (f = msg.getCurrency()) && proto.data.Currency.toObject(includeInstance, f),
    taxRate: (f = msg.getTaxRate()) && proto.data.TaxRate.toObject(includeInstance, f),
    pricePrecision: jspb.Message.getFieldWithDefault(msg, 10, 0),
    quantityOnHand: (f = msg.getQuantityOnHand()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    quantityReserved: (f = msg.getQuantityReserved()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    quantityOrdered: (f = msg.getQuantityOrdered()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    quantityAvailable: (f = msg.getQuantityAvailable()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    displayCurrency: (f = msg.getDisplayCurrency()) && proto.data.Currency.toObject(includeInstance, f),
    displayPriceList: (f = msg.getDisplayPriceList()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    displayPriceStandard: (f = msg.getDisplayPriceStandard()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    displayPriceLimit: (f = msg.getDisplayPriceLimit()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    conversionRate: (f = msg.getConversionRate()) && proto.data.ConversionRate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.ProductPrice}
 */
proto.data.ProductPrice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.ProductPrice;
  return proto.data.ProductPrice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.ProductPrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.ProductPrice}
 */
proto.data.ProductPrice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.data.Product;
      reader.readMessage(value,proto.data.Product.deserializeBinaryFromReader);
      msg.setProduct(value);
      break;
    case 2:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setPriceList(value);
      break;
    case 3:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setPriceStandard(value);
      break;
    case 4:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setPriceLimit(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriceListName(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsTaxIncluded(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidFrom(value);
      break;
    case 8:
      var value = new proto.data.Currency;
      reader.readMessage(value,proto.data.Currency.deserializeBinaryFromReader);
      msg.setCurrency(value);
      break;
    case 9:
      var value = new proto.data.TaxRate;
      reader.readMessage(value,proto.data.TaxRate.deserializeBinaryFromReader);
      msg.setTaxRate(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPricePrecision(value);
      break;
    case 11:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setQuantityOnHand(value);
      break;
    case 12:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setQuantityReserved(value);
      break;
    case 13:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setQuantityOrdered(value);
      break;
    case 14:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setQuantityAvailable(value);
      break;
    case 15:
      var value = new proto.data.Currency;
      reader.readMessage(value,proto.data.Currency.deserializeBinaryFromReader);
      msg.setDisplayCurrency(value);
      break;
    case 16:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setDisplayPriceList(value);
      break;
    case 17:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setDisplayPriceStandard(value);
      break;
    case 18:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setDisplayPriceLimit(value);
      break;
    case 19:
      var value = new proto.data.ConversionRate;
      reader.readMessage(value,proto.data.ConversionRate.deserializeBinaryFromReader);
      msg.setConversionRate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.ProductPrice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.ProductPrice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.ProductPrice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.ProductPrice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProduct();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.data.Product.serializeBinaryToWriter
    );
  }
  f = message.getPriceList();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getPriceStandard();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getPriceLimit();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getPriceListName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsTaxIncluded();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getValidFrom();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCurrency();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.data.Currency.serializeBinaryToWriter
    );
  }
  f = message.getTaxRate();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.data.TaxRate.serializeBinaryToWriter
    );
  }
  f = message.getPricePrecision();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getQuantityOnHand();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getQuantityReserved();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getQuantityOrdered();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getQuantityAvailable();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getDisplayCurrency();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.data.Currency.serializeBinaryToWriter
    );
  }
  f = message.getDisplayPriceList();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getDisplayPriceStandard();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getDisplayPriceLimit();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getConversionRate();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.data.ConversionRate.serializeBinaryToWriter
    );
  }
};


/**
 * optional Product product = 1;
 * @return {?proto.data.Product}
 */
proto.data.ProductPrice.prototype.getProduct = function() {
  return /** @type{?proto.data.Product} */ (
    jspb.Message.getWrapperField(this, proto.data.Product, 1));
};


/**
 * @param {?proto.data.Product|undefined} value
 * @return {!proto.data.ProductPrice} returns this
*/
proto.data.ProductPrice.prototype.setProduct = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.clearProduct = function() {
  return this.setProduct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductPrice.prototype.hasProduct = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Decimal price_list = 2;
 * @return {?proto.data.Decimal}
 */
proto.data.ProductPrice.prototype.getPriceList = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 2));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.ProductPrice} returns this
*/
proto.data.ProductPrice.prototype.setPriceList = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.clearPriceList = function() {
  return this.setPriceList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductPrice.prototype.hasPriceList = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Decimal price_standard = 3;
 * @return {?proto.data.Decimal}
 */
proto.data.ProductPrice.prototype.getPriceStandard = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 3));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.ProductPrice} returns this
*/
proto.data.ProductPrice.prototype.setPriceStandard = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.clearPriceStandard = function() {
  return this.setPriceStandard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductPrice.prototype.hasPriceStandard = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Decimal price_limit = 4;
 * @return {?proto.data.Decimal}
 */
proto.data.ProductPrice.prototype.getPriceLimit = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 4));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.ProductPrice} returns this
*/
proto.data.ProductPrice.prototype.setPriceLimit = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.clearPriceLimit = function() {
  return this.setPriceLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductPrice.prototype.hasPriceLimit = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string price_list_name = 5;
 * @return {string}
 */
proto.data.ProductPrice.prototype.getPriceListName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.setPriceListName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool is_tax_included = 6;
 * @return {boolean}
 */
proto.data.ProductPrice.prototype.getIsTaxIncluded = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.setIsTaxIncluded = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string valid_from = 7;
 * @return {string}
 */
proto.data.ProductPrice.prototype.getValidFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.setValidFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional Currency currency = 8;
 * @return {?proto.data.Currency}
 */
proto.data.ProductPrice.prototype.getCurrency = function() {
  return /** @type{?proto.data.Currency} */ (
    jspb.Message.getWrapperField(this, proto.data.Currency, 8));
};


/**
 * @param {?proto.data.Currency|undefined} value
 * @return {!proto.data.ProductPrice} returns this
*/
proto.data.ProductPrice.prototype.setCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.clearCurrency = function() {
  return this.setCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductPrice.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional TaxRate tax_rate = 9;
 * @return {?proto.data.TaxRate}
 */
proto.data.ProductPrice.prototype.getTaxRate = function() {
  return /** @type{?proto.data.TaxRate} */ (
    jspb.Message.getWrapperField(this, proto.data.TaxRate, 9));
};


/**
 * @param {?proto.data.TaxRate|undefined} value
 * @return {!proto.data.ProductPrice} returns this
*/
proto.data.ProductPrice.prototype.setTaxRate = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.clearTaxRate = function() {
  return this.setTaxRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductPrice.prototype.hasTaxRate = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 price_precision = 10;
 * @return {number}
 */
proto.data.ProductPrice.prototype.getPricePrecision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.setPricePrecision = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional Decimal quantity_on_hand = 11;
 * @return {?proto.data.Decimal}
 */
proto.data.ProductPrice.prototype.getQuantityOnHand = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 11));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.ProductPrice} returns this
*/
proto.data.ProductPrice.prototype.setQuantityOnHand = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.clearQuantityOnHand = function() {
  return this.setQuantityOnHand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductPrice.prototype.hasQuantityOnHand = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Decimal quantity_reserved = 12;
 * @return {?proto.data.Decimal}
 */
proto.data.ProductPrice.prototype.getQuantityReserved = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 12));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.ProductPrice} returns this
*/
proto.data.ProductPrice.prototype.setQuantityReserved = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.clearQuantityReserved = function() {
  return this.setQuantityReserved(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductPrice.prototype.hasQuantityReserved = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Decimal quantity_ordered = 13;
 * @return {?proto.data.Decimal}
 */
proto.data.ProductPrice.prototype.getQuantityOrdered = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 13));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.ProductPrice} returns this
*/
proto.data.ProductPrice.prototype.setQuantityOrdered = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.clearQuantityOrdered = function() {
  return this.setQuantityOrdered(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductPrice.prototype.hasQuantityOrdered = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional Decimal quantity_available = 14;
 * @return {?proto.data.Decimal}
 */
proto.data.ProductPrice.prototype.getQuantityAvailable = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 14));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.ProductPrice} returns this
*/
proto.data.ProductPrice.prototype.setQuantityAvailable = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.clearQuantityAvailable = function() {
  return this.setQuantityAvailable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductPrice.prototype.hasQuantityAvailable = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Currency display_currency = 15;
 * @return {?proto.data.Currency}
 */
proto.data.ProductPrice.prototype.getDisplayCurrency = function() {
  return /** @type{?proto.data.Currency} */ (
    jspb.Message.getWrapperField(this, proto.data.Currency, 15));
};


/**
 * @param {?proto.data.Currency|undefined} value
 * @return {!proto.data.ProductPrice} returns this
*/
proto.data.ProductPrice.prototype.setDisplayCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.clearDisplayCurrency = function() {
  return this.setDisplayCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductPrice.prototype.hasDisplayCurrency = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Decimal display_price_list = 16;
 * @return {?proto.data.Decimal}
 */
proto.data.ProductPrice.prototype.getDisplayPriceList = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 16));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.ProductPrice} returns this
*/
proto.data.ProductPrice.prototype.setDisplayPriceList = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.clearDisplayPriceList = function() {
  return this.setDisplayPriceList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductPrice.prototype.hasDisplayPriceList = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional Decimal display_price_standard = 17;
 * @return {?proto.data.Decimal}
 */
proto.data.ProductPrice.prototype.getDisplayPriceStandard = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 17));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.ProductPrice} returns this
*/
proto.data.ProductPrice.prototype.setDisplayPriceStandard = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.clearDisplayPriceStandard = function() {
  return this.setDisplayPriceStandard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductPrice.prototype.hasDisplayPriceStandard = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional Decimal display_price_limit = 18;
 * @return {?proto.data.Decimal}
 */
proto.data.ProductPrice.prototype.getDisplayPriceLimit = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 18));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.ProductPrice} returns this
*/
proto.data.ProductPrice.prototype.setDisplayPriceLimit = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.clearDisplayPriceLimit = function() {
  return this.setDisplayPriceLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductPrice.prototype.hasDisplayPriceLimit = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional ConversionRate conversion_rate = 19;
 * @return {?proto.data.ConversionRate}
 */
proto.data.ProductPrice.prototype.getConversionRate = function() {
  return /** @type{?proto.data.ConversionRate} */ (
    jspb.Message.getWrapperField(this, proto.data.ConversionRate, 19));
};


/**
 * @param {?proto.data.ConversionRate|undefined} value
 * @return {!proto.data.ProductPrice} returns this
*/
proto.data.ProductPrice.prototype.setConversionRate = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.ProductPrice} returns this
 */
proto.data.ProductPrice.prototype.clearConversionRate = function() {
  return this.setConversionRate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.ProductPrice.prototype.hasConversionRate = function() {
  return jspb.Message.getField(this, 19) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.Language.prototype.toObject = function(opt_includeInstance) {
  return proto.data.Language.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.Language} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.Language.toObject = function(includeInstance, msg) {
  var f, obj = {
    language: jspb.Message.getFieldWithDefault(msg, 1, ""),
    languageName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    languageIso: jspb.Message.getFieldWithDefault(msg, 3, ""),
    countryCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isBaseLanguage: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    isSystemLanguage: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isDecimalPoint: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    datePattern: jspb.Message.getFieldWithDefault(msg, 8, ""),
    timePattern: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.Language}
 */
proto.data.Language.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.Language;
  return proto.data.Language.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.Language} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.Language}
 */
proto.data.Language.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageIso(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryCode(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsBaseLanguage(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSystemLanguage(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDecimalPoint(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatePattern(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimePattern(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.Language.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.Language.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.Language} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.Language.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLanguageName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLanguageIso();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountryCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsBaseLanguage();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIsSystemLanguage();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsDecimalPoint();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getDatePattern();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTimePattern();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string language = 1;
 * @return {string}
 */
proto.data.Language.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Language} returns this
 */
proto.data.Language.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string language_name = 2;
 * @return {string}
 */
proto.data.Language.prototype.getLanguageName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Language} returns this
 */
proto.data.Language.prototype.setLanguageName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string language_iso = 3;
 * @return {string}
 */
proto.data.Language.prototype.getLanguageIso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Language} returns this
 */
proto.data.Language.prototype.setLanguageIso = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string country_code = 4;
 * @return {string}
 */
proto.data.Language.prototype.getCountryCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Language} returns this
 */
proto.data.Language.prototype.setCountryCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool is_base_language = 5;
 * @return {boolean}
 */
proto.data.Language.prototype.getIsBaseLanguage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.Language} returns this
 */
proto.data.Language.prototype.setIsBaseLanguage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool is_system_language = 6;
 * @return {boolean}
 */
proto.data.Language.prototype.getIsSystemLanguage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.Language} returns this
 */
proto.data.Language.prototype.setIsSystemLanguage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool is_decimal_point = 7;
 * @return {boolean}
 */
proto.data.Language.prototype.getIsDecimalPoint = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.Language} returns this
 */
proto.data.Language.prototype.setIsDecimalPoint = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string date_pattern = 8;
 * @return {string}
 */
proto.data.Language.prototype.getDatePattern = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Language} returns this
 */
proto.data.Language.prototype.setDatePattern = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string time_pattern = 9;
 * @return {string}
 */
proto.data.Language.prototype.getTimePattern = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.Language} returns this
 */
proto.data.Language.prototype.setTimePattern = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.PriceList.prototype.toObject = function(opt_includeInstance) {
  return proto.data.PriceList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.PriceList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.PriceList.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    currency: (f = msg.getCurrency()) && proto.data.Currency.toObject(includeInstance, f),
    isDefault: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isTaxIncluded: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    isEnforcePriceLimit: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    isNetPrice: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    pricePrecision: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.PriceList}
 */
proto.data.PriceList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.PriceList;
  return proto.data.PriceList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.PriceList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.PriceList}
 */
proto.data.PriceList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = new proto.data.Currency;
      reader.readMessage(value,proto.data.Currency.deserializeBinaryFromReader);
      msg.setCurrency(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDefault(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsTaxIncluded(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsEnforcePriceLimit(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNetPrice(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPricePrecision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.PriceList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.PriceList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.PriceList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.PriceList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCurrency();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.data.Currency.serializeBinaryToWriter
    );
  }
  f = message.getIsDefault();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsTaxIncluded();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getIsEnforcePriceLimit();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getIsNetPrice();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getPricePrecision();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.data.PriceList.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.PriceList} returns this
 */
proto.data.PriceList.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.data.PriceList.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.PriceList} returns this
 */
proto.data.PriceList.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.data.PriceList.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.PriceList} returns this
 */
proto.data.PriceList.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.data.PriceList.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.PriceList} returns this
 */
proto.data.PriceList.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Currency currency = 5;
 * @return {?proto.data.Currency}
 */
proto.data.PriceList.prototype.getCurrency = function() {
  return /** @type{?proto.data.Currency} */ (
    jspb.Message.getWrapperField(this, proto.data.Currency, 5));
};


/**
 * @param {?proto.data.Currency|undefined} value
 * @return {!proto.data.PriceList} returns this
*/
proto.data.PriceList.prototype.setCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.PriceList} returns this
 */
proto.data.PriceList.prototype.clearCurrency = function() {
  return this.setCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.PriceList.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool is_default = 6;
 * @return {boolean}
 */
proto.data.PriceList.prototype.getIsDefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.PriceList} returns this
 */
proto.data.PriceList.prototype.setIsDefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool is_tax_included = 7;
 * @return {boolean}
 */
proto.data.PriceList.prototype.getIsTaxIncluded = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.PriceList} returns this
 */
proto.data.PriceList.prototype.setIsTaxIncluded = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool is_enforce_price_limit = 8;
 * @return {boolean}
 */
proto.data.PriceList.prototype.getIsEnforcePriceLimit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.PriceList} returns this
 */
proto.data.PriceList.prototype.setIsEnforcePriceLimit = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool is_net_price = 9;
 * @return {boolean}
 */
proto.data.PriceList.prototype.getIsNetPrice = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.PriceList} returns this
 */
proto.data.PriceList.prototype.setIsNetPrice = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional int32 price_precision = 10;
 * @return {number}
 */
proto.data.PriceList.prototype.getPricePrecision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.PriceList} returns this
 */
proto.data.PriceList.prototype.setPricePrecision = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.data.BankAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.data.BankAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.data.BankAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.BankAccount.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    accountNo: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    currency: (f = msg.getCurrency()) && proto.data.Currency.toObject(includeInstance, f),
    bban: jspb.Message.getFieldWithDefault(msg, 7, ""),
    iban: jspb.Message.getFieldWithDefault(msg, 8, ""),
    creditLimit: (f = msg.getCreditLimit()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    currentBalance: (f = msg.getCurrentBalance()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    isDefault: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    businessPartner: (f = msg.getBusinessPartner()) && proto.data.BusinessPartner.toObject(includeInstance, f),
    bankAccountType: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.data.BankAccount}
 */
proto.data.BankAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.data.BankAccount;
  return proto.data.BankAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.data.BankAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.data.BankAccount}
 */
proto.data.BankAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountNo(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = new proto.data.Currency;
      reader.readMessage(value,proto.data.Currency.deserializeBinaryFromReader);
      msg.setCurrency(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBban(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setIban(value);
      break;
    case 9:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setCreditLimit(value);
      break;
    case 10:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setCurrentBalance(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDefault(value);
      break;
    case 12:
      var value = new proto.data.BusinessPartner;
      reader.readMessage(value,proto.data.BusinessPartner.deserializeBinaryFromReader);
      msg.setBusinessPartner(value);
      break;
    case 13:
      var value = /** @type {!proto.data.BankAccount.BankAccountType} */ (reader.readEnum());
      msg.setBankAccountType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.data.BankAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.data.BankAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.data.BankAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.data.BankAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAccountNo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCurrency();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.data.Currency.serializeBinaryToWriter
    );
  }
  f = message.getBban();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIban();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCreditLimit();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getCurrentBalance();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getIsDefault();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getBusinessPartner();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.data.BusinessPartner.serializeBinaryToWriter
    );
  }
  f = message.getBankAccountType();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.data.BankAccount.BankAccountType = {
  CHECKING: 0,
  SAVINGS: 1
};

/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.data.BankAccount.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.BankAccount} returns this
 */
proto.data.BankAccount.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.data.BankAccount.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.data.BankAccount} returns this
 */
proto.data.BankAccount.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.data.BankAccount.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.BankAccount} returns this
 */
proto.data.BankAccount.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string account_no = 4;
 * @return {string}
 */
proto.data.BankAccount.prototype.getAccountNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.BankAccount} returns this
 */
proto.data.BankAccount.prototype.setAccountNo = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.data.BankAccount.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.BankAccount} returns this
 */
proto.data.BankAccount.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Currency currency = 6;
 * @return {?proto.data.Currency}
 */
proto.data.BankAccount.prototype.getCurrency = function() {
  return /** @type{?proto.data.Currency} */ (
    jspb.Message.getWrapperField(this, proto.data.Currency, 6));
};


/**
 * @param {?proto.data.Currency|undefined} value
 * @return {!proto.data.BankAccount} returns this
*/
proto.data.BankAccount.prototype.setCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.BankAccount} returns this
 */
proto.data.BankAccount.prototype.clearCurrency = function() {
  return this.setCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.BankAccount.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string bban = 7;
 * @return {string}
 */
proto.data.BankAccount.prototype.getBban = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.BankAccount} returns this
 */
proto.data.BankAccount.prototype.setBban = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string iban = 8;
 * @return {string}
 */
proto.data.BankAccount.prototype.getIban = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.data.BankAccount} returns this
 */
proto.data.BankAccount.prototype.setIban = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional Decimal credit_limit = 9;
 * @return {?proto.data.Decimal}
 */
proto.data.BankAccount.prototype.getCreditLimit = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 9));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.BankAccount} returns this
*/
proto.data.BankAccount.prototype.setCreditLimit = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.BankAccount} returns this
 */
proto.data.BankAccount.prototype.clearCreditLimit = function() {
  return this.setCreditLimit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.BankAccount.prototype.hasCreditLimit = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Decimal current_balance = 10;
 * @return {?proto.data.Decimal}
 */
proto.data.BankAccount.prototype.getCurrentBalance = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 10));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.data.BankAccount} returns this
*/
proto.data.BankAccount.prototype.setCurrentBalance = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.BankAccount} returns this
 */
proto.data.BankAccount.prototype.clearCurrentBalance = function() {
  return this.setCurrentBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.BankAccount.prototype.hasCurrentBalance = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool is_default = 11;
 * @return {boolean}
 */
proto.data.BankAccount.prototype.getIsDefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.data.BankAccount} returns this
 */
proto.data.BankAccount.prototype.setIsDefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional BusinessPartner business_partner = 12;
 * @return {?proto.data.BusinessPartner}
 */
proto.data.BankAccount.prototype.getBusinessPartner = function() {
  return /** @type{?proto.data.BusinessPartner} */ (
    jspb.Message.getWrapperField(this, proto.data.BusinessPartner, 12));
};


/**
 * @param {?proto.data.BusinessPartner|undefined} value
 * @return {!proto.data.BankAccount} returns this
*/
proto.data.BankAccount.prototype.setBusinessPartner = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.data.BankAccount} returns this
 */
proto.data.BankAccount.prototype.clearBusinessPartner = function() {
  return this.setBusinessPartner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.data.BankAccount.prototype.hasBusinessPartner = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional BankAccountType bank_account_type = 13;
 * @return {!proto.data.BankAccount.BankAccountType}
 */
proto.data.BankAccount.prototype.getBankAccountType = function() {
  return /** @type {!proto.data.BankAccount.BankAccountType} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.data.BankAccount.BankAccountType} value
 * @return {!proto.data.BankAccount} returns this
 */
proto.data.BankAccount.prototype.setBankAccountType = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


goog.object.extend(exports, proto.data);
