// source: proto/dictionary.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.dictionary.Browser', null, global);
goog.exportSymbol('proto.dictionary.ContextInfo', null, global);
goog.exportSymbol('proto.dictionary.DependentField', null, global);
goog.exportSymbol('proto.dictionary.EntityRequest', null, global);
goog.exportSymbol('proto.dictionary.Field', null, global);
goog.exportSymbol('proto.dictionary.FieldCondition', null, global);
goog.exportSymbol('proto.dictionary.FieldDefinition', null, global);
goog.exportSymbol('proto.dictionary.FieldGroup', null, global);
goog.exportSymbol('proto.dictionary.FieldRequest', null, global);
goog.exportSymbol('proto.dictionary.Form', null, global);
goog.exportSymbol('proto.dictionary.ListFieldsRequest', null, global);
goog.exportSymbol('proto.dictionary.ListFieldsResponse', null, global);
goog.exportSymbol('proto.dictionary.MessageText', null, global);
goog.exportSymbol('proto.dictionary.Process', null, global);
goog.exportSymbol('proto.dictionary.Reference', null, global);
goog.exportSymbol('proto.dictionary.ReferenceRequest', null, global);
goog.exportSymbol('proto.dictionary.ReportExportType', null, global);
goog.exportSymbol('proto.dictionary.Tab', null, global);
goog.exportSymbol('proto.dictionary.ValidationRule', null, global);
goog.exportSymbol('proto.dictionary.Window', null, global);
goog.exportSymbol('proto.dictionary.ZoomWindow', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.EntityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.EntityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.EntityRequest.displayName = 'proto.dictionary.EntityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.FieldRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.FieldRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.FieldRequest.displayName = 'proto.dictionary.FieldRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.ReferenceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.ReferenceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.ReferenceRequest.displayName = 'proto.dictionary.ReferenceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.ValidationRule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.ValidationRule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.ValidationRule.displayName = 'proto.dictionary.ValidationRule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.Window = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dictionary.Window.repeatedFields_, null);
};
goog.inherits(proto.dictionary.Window, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.Window.displayName = 'proto.dictionary.Window';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.Tab = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dictionary.Tab.repeatedFields_, null);
};
goog.inherits(proto.dictionary.Tab, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.Tab.displayName = 'proto.dictionary.Tab';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.Field = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dictionary.Field.repeatedFields_, null);
};
goog.inherits(proto.dictionary.Field, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.Field.displayName = 'proto.dictionary.Field';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.DependentField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.DependentField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.DependentField.displayName = 'proto.dictionary.DependentField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.ContextInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.ContextInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.ContextInfo.displayName = 'proto.dictionary.ContextInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.MessageText = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.MessageText, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.MessageText.displayName = 'proto.dictionary.MessageText';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.FieldGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.FieldGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.FieldGroup.displayName = 'proto.dictionary.FieldGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.FieldDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dictionary.FieldDefinition.repeatedFields_, null);
};
goog.inherits(proto.dictionary.FieldDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.FieldDefinition.displayName = 'proto.dictionary.FieldDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.FieldCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.FieldCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.FieldCondition.displayName = 'proto.dictionary.FieldCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.Process = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dictionary.Process.repeatedFields_, null);
};
goog.inherits(proto.dictionary.Process, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.Process.displayName = 'proto.dictionary.Process';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.Form = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.Form, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.Form.displayName = 'proto.dictionary.Form';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.Browser = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dictionary.Browser.repeatedFields_, null);
};
goog.inherits(proto.dictionary.Browser, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.Browser.displayName = 'proto.dictionary.Browser';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.ZoomWindow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.ZoomWindow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.ZoomWindow.displayName = 'proto.dictionary.ZoomWindow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.Reference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dictionary.Reference.repeatedFields_, null);
};
goog.inherits(proto.dictionary.Reference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.Reference.displayName = 'proto.dictionary.Reference';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.ReportExportType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.ReportExportType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.ReportExportType.displayName = 'proto.dictionary.ReportExportType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.ListFieldsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dictionary.ListFieldsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.ListFieldsRequest.displayName = 'proto.dictionary.ListFieldsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dictionary.ListFieldsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dictionary.ListFieldsResponse.repeatedFields_, null);
};
goog.inherits(proto.dictionary.ListFieldsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dictionary.ListFieldsResponse.displayName = 'proto.dictionary.ListFieldsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.EntityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.EntityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.EntityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.EntityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.EntityRequest}
 */
proto.dictionary.EntityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.EntityRequest;
  return proto.dictionary.EntityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.EntityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.EntityRequest}
 */
proto.dictionary.EntityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.EntityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.EntityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.EntityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.EntityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.EntityRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.EntityRequest} returns this
 */
proto.dictionary.EntityRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.EntityRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.EntityRequest} returns this
 */
proto.dictionary.EntityRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.FieldRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.FieldRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.FieldRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.FieldRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    columnUuid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    elementUuid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    tableName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    columnName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    elementColumnName: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.FieldRequest}
 */
proto.dictionary.FieldRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.FieldRequest;
  return proto.dictionary.FieldRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.FieldRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.FieldRequest}
 */
proto.dictionary.FieldRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnUuid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setElementUuid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setElementColumnName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.FieldRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.FieldRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.FieldRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.FieldRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColumnUuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getElementUuid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getColumnName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getElementColumnName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string field_uuid = 2;
 * @return {string}
 */
proto.dictionary.FieldRequest.prototype.getFieldUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldRequest} returns this
 */
proto.dictionary.FieldRequest.prototype.setFieldUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string column_uuid = 3;
 * @return {string}
 */
proto.dictionary.FieldRequest.prototype.getColumnUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldRequest} returns this
 */
proto.dictionary.FieldRequest.prototype.setColumnUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string element_uuid = 4;
 * @return {string}
 */
proto.dictionary.FieldRequest.prototype.getElementUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldRequest} returns this
 */
proto.dictionary.FieldRequest.prototype.setElementUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string table_name = 5;
 * @return {string}
 */
proto.dictionary.FieldRequest.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldRequest} returns this
 */
proto.dictionary.FieldRequest.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string column_name = 6;
 * @return {string}
 */
proto.dictionary.FieldRequest.prototype.getColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldRequest} returns this
 */
proto.dictionary.FieldRequest.prototype.setColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string element_column_name = 7;
 * @return {string}
 */
proto.dictionary.FieldRequest.prototype.getElementColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldRequest} returns this
 */
proto.dictionary.FieldRequest.prototype.setElementColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.ReferenceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.ReferenceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.ReferenceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ReferenceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    referenceUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    columnName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.ReferenceRequest}
 */
proto.dictionary.ReferenceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.ReferenceRequest;
  return proto.dictionary.ReferenceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.ReferenceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.ReferenceRequest}
 */
proto.dictionary.ReferenceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferenceUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.ReferenceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.ReferenceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.ReferenceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ReferenceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReferenceUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColumnName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string reference_uuid = 2;
 * @return {string}
 */
proto.dictionary.ReferenceRequest.prototype.getReferenceUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ReferenceRequest} returns this
 */
proto.dictionary.ReferenceRequest.prototype.setReferenceUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string column_name = 3;
 * @return {string}
 */
proto.dictionary.ReferenceRequest.prototype.getColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ReferenceRequest} returns this
 */
proto.dictionary.ReferenceRequest.prototype.setColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.ValidationRule.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.ValidationRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.ValidationRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ValidationRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    validationCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    type: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.ValidationRule}
 */
proto.dictionary.ValidationRule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.ValidationRule;
  return proto.dictionary.ValidationRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.ValidationRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.ValidationRule}
 */
proto.dictionary.ValidationRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.ValidationRule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.ValidationRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.ValidationRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ValidationRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValidationCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.ValidationRule.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.ValidationRule} returns this
 */
proto.dictionary.ValidationRule.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.ValidationRule.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ValidationRule} returns this
 */
proto.dictionary.ValidationRule.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string validation_code = 3;
 * @return {string}
 */
proto.dictionary.ValidationRule.prototype.getValidationCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ValidationRule} returns this
 */
proto.dictionary.ValidationRule.prototype.setValidationCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.dictionary.ValidationRule.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ValidationRule} returns this
 */
proto.dictionary.ValidationRule.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.dictionary.ValidationRule.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ValidationRule} returns this
 */
proto.dictionary.ValidationRule.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string type = 6;
 * @return {string}
 */
proto.dictionary.ValidationRule.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ValidationRule} returns this
 */
proto.dictionary.ValidationRule.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dictionary.Window.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.Window.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.Window.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.Window} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Window.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    help: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isSalesTransaction: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    windowType: jspb.Message.getFieldWithDefault(msg, 8, ""),
    contextInfo: (f = msg.getContextInfo()) && proto.dictionary.ContextInfo.toObject(includeInstance, f),
    tabsList: jspb.Message.toObjectList(msg.getTabsList(),
    proto.dictionary.Tab.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.Window}
 */
proto.dictionary.Window.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.Window;
  return proto.dictionary.Window.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.Window} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.Window}
 */
proto.dictionary.Window.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSalesTransaction(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWindowType(value);
      break;
    case 9:
      var value = new proto.dictionary.ContextInfo;
      reader.readMessage(value,proto.dictionary.ContextInfo.deserializeBinaryFromReader);
      msg.setContextInfo(value);
      break;
    case 10:
      var value = new proto.dictionary.Tab;
      reader.readMessage(value,proto.dictionary.Tab.deserializeBinaryFromReader);
      msg.addTabs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.Window.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.Window.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.Window} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Window.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsSalesTransaction();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getWindowType();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getContextInfo();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.dictionary.ContextInfo.serializeBinaryToWriter
    );
  }
  f = message.getTabsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.dictionary.Tab.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.Window.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.Window.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dictionary.Window.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.dictionary.Window.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string help = 5;
 * @return {string}
 */
proto.dictionary.Window.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool is_active = 6;
 * @return {boolean}
 */
proto.dictionary.Window.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool is_sales_transaction = 7;
 * @return {boolean}
 */
proto.dictionary.Window.prototype.getIsSalesTransaction = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.setIsSalesTransaction = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string window_type = 8;
 * @return {string}
 */
proto.dictionary.Window.prototype.getWindowType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.setWindowType = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional ContextInfo context_info = 9;
 * @return {?proto.dictionary.ContextInfo}
 */
proto.dictionary.Window.prototype.getContextInfo = function() {
  return /** @type{?proto.dictionary.ContextInfo} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.ContextInfo, 9));
};


/**
 * @param {?proto.dictionary.ContextInfo|undefined} value
 * @return {!proto.dictionary.Window} returns this
*/
proto.dictionary.Window.prototype.setContextInfo = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.clearContextInfo = function() {
  return this.setContextInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Window.prototype.hasContextInfo = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated Tab tabs = 10;
 * @return {!Array<!proto.dictionary.Tab>}
 */
proto.dictionary.Window.prototype.getTabsList = function() {
  return /** @type{!Array<!proto.dictionary.Tab>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.Tab, 10));
};


/**
 * @param {!Array<!proto.dictionary.Tab>} value
 * @return {!proto.dictionary.Window} returns this
*/
proto.dictionary.Window.prototype.setTabsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.dictionary.Tab=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.Tab}
 */
proto.dictionary.Window.prototype.addTabs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.dictionary.Tab, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Window} returns this
 */
proto.dictionary.Window.prototype.clearTabsList = function() {
  return this.setTabsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dictionary.Tab.repeatedFields_ = [33,35,36];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.Tab.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.Tab.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.Tab} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Tab.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    help: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tableName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 7, 0),
    tabLevel: jspb.Message.getFieldWithDefault(msg, 8, 0),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    isSingleRow: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    isAdvancedTab: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    isHasTree: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    isInfoTab: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    isSortTab: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    isTranslationTab: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    isReadOnly: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    isInsertRecord: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    isView: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    isDeleteable: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    isDocument: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    isChangeLog: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    accessLevel: jspb.Message.getFieldWithDefault(msg, 22, 0),
    linkColumnName: jspb.Message.getFieldWithDefault(msg, 23, ""),
    sortOrderColumnName: jspb.Message.getFieldWithDefault(msg, 24, ""),
    sortYesNoColumnName: jspb.Message.getFieldWithDefault(msg, 25, ""),
    parentColumnName: jspb.Message.getFieldWithDefault(msg, 26, ""),
    displayLogic: jspb.Message.getFieldWithDefault(msg, 27, ""),
    commitWarning: jspb.Message.getFieldWithDefault(msg, 28, ""),
    parentTabUuid: jspb.Message.getFieldWithDefault(msg, 32, ""),
    contextColumnNamesList: (f = jspb.Message.getRepeatedField(msg, 33)) == null ? undefined : f,
    contextInfo: (f = msg.getContextInfo()) && proto.dictionary.ContextInfo.toObject(includeInstance, f),
    processesList: jspb.Message.toObjectList(msg.getProcessesList(),
    proto.dictionary.Process.toObject, includeInstance),
    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.dictionary.Field.toObject, includeInstance),
    fieldGroup: (f = msg.getFieldGroup()) && proto.dictionary.FieldGroup.toObject(includeInstance, f),
    readOnlyLogic: jspb.Message.getFieldWithDefault(msg, 38, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.Tab}
 */
proto.dictionary.Tab.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.Tab;
  return proto.dictionary.Tab.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.Tab} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.Tab}
 */
proto.dictionary.Tab.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequence(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTabLevel(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSingleRow(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAdvancedTab(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsHasTree(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsInfoTab(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSortTab(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsTranslationTab(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsReadOnly(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsInsertRecord(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsView(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDeleteable(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDocument(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsChangeLog(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccessLevel(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setLinkColumnName(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortOrderColumnName(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortYesNoColumnName(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentColumnName(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayLogic(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommitWarning(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentTabUuid(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.addContextColumnNames(value);
      break;
    case 34:
      var value = new proto.dictionary.ContextInfo;
      reader.readMessage(value,proto.dictionary.ContextInfo.deserializeBinaryFromReader);
      msg.setContextInfo(value);
      break;
    case 35:
      var value = new proto.dictionary.Process;
      reader.readMessage(value,proto.dictionary.Process.deserializeBinaryFromReader);
      msg.addProcesses(value);
      break;
    case 36:
      var value = new proto.dictionary.Field;
      reader.readMessage(value,proto.dictionary.Field.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    case 37:
      var value = new proto.dictionary.FieldGroup;
      reader.readMessage(value,proto.dictionary.FieldGroup.deserializeBinaryFromReader);
      msg.setFieldGroup(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setReadOnlyLogic(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.Tab.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.Tab.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.Tab} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Tab.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getTabLevel();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIsSingleRow();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsAdvancedTab();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getIsHasTree();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsInfoTab();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getIsSortTab();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getIsTranslationTab();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getIsReadOnly();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getIsInsertRecord();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getIsView();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getIsDeleteable();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getIsDocument();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getIsChangeLog();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getAccessLevel();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getLinkColumnName();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getSortOrderColumnName();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getSortYesNoColumnName();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getParentColumnName();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getDisplayLogic();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getCommitWarning();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getParentTabUuid();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getContextColumnNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      33,
      f
    );
  }
  f = message.getContextInfo();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      proto.dictionary.ContextInfo.serializeBinaryToWriter
    );
  }
  f = message.getProcessesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      35,
      f,
      proto.dictionary.Process.serializeBinaryToWriter
    );
  }
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      36,
      f,
      proto.dictionary.Field.serializeBinaryToWriter
    );
  }
  f = message.getFieldGroup();
  if (f != null) {
    writer.writeMessage(
      37,
      f,
      proto.dictionary.FieldGroup.serializeBinaryToWriter
    );
  }
  f = message.getReadOnlyLogic();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.Tab.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string help = 5;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string table_name = 6;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 sequence = 7;
 * @return {number}
 */
proto.dictionary.Tab.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 tab_level = 8;
 * @return {number}
 */
proto.dictionary.Tab.prototype.getTabLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setTabLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool is_active = 9;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool is_single_row = 10;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsSingleRow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsSingleRow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool is_advanced_tab = 11;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsAdvancedTab = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsAdvancedTab = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool is_has_tree = 12;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsHasTree = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsHasTree = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool is_info_tab = 13;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsInfoTab = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsInfoTab = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool is_sort_tab = 14;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsSortTab = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsSortTab = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool is_translation_tab = 15;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsTranslationTab = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsTranslationTab = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool is_read_only = 16;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsReadOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsReadOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool is_insert_record = 17;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsInsertRecord = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsInsertRecord = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool is_view = 18;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsView = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsView = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool is_deleteable = 19;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsDeleteable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsDeleteable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional bool is_document = 20;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsDocument = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsDocument = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional bool is_change_log = 21;
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.getIsChangeLog = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setIsChangeLog = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional int32 access_level = 22;
 * @return {number}
 */
proto.dictionary.Tab.prototype.getAccessLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setAccessLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional string link_column_name = 23;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getLinkColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setLinkColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string sort_order_column_name = 24;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getSortOrderColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setSortOrderColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string sort_yes_no_column_name = 25;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getSortYesNoColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setSortYesNoColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string parent_column_name = 26;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getParentColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setParentColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string display_logic = 27;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getDisplayLogic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setDisplayLogic = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string commit_warning = 28;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getCommitWarning = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setCommitWarning = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string parent_tab_uuid = 32;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getParentTabUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setParentTabUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * repeated string context_column_names = 33;
 * @return {!Array<string>}
 */
proto.dictionary.Tab.prototype.getContextColumnNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 33));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setContextColumnNamesList = function(value) {
  return jspb.Message.setField(this, 33, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.addContextColumnNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 33, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.clearContextColumnNamesList = function() {
  return this.setContextColumnNamesList([]);
};


/**
 * optional ContextInfo context_info = 34;
 * @return {?proto.dictionary.ContextInfo}
 */
proto.dictionary.Tab.prototype.getContextInfo = function() {
  return /** @type{?proto.dictionary.ContextInfo} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.ContextInfo, 34));
};


/**
 * @param {?proto.dictionary.ContextInfo|undefined} value
 * @return {!proto.dictionary.Tab} returns this
*/
proto.dictionary.Tab.prototype.setContextInfo = function(value) {
  return jspb.Message.setWrapperField(this, 34, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.clearContextInfo = function() {
  return this.setContextInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.hasContextInfo = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * repeated Process processes = 35;
 * @return {!Array<!proto.dictionary.Process>}
 */
proto.dictionary.Tab.prototype.getProcessesList = function() {
  return /** @type{!Array<!proto.dictionary.Process>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.Process, 35));
};


/**
 * @param {!Array<!proto.dictionary.Process>} value
 * @return {!proto.dictionary.Tab} returns this
*/
proto.dictionary.Tab.prototype.setProcessesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 35, value);
};


/**
 * @param {!proto.dictionary.Process=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.Process}
 */
proto.dictionary.Tab.prototype.addProcesses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 35, opt_value, proto.dictionary.Process, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.clearProcessesList = function() {
  return this.setProcessesList([]);
};


/**
 * repeated Field fields = 36;
 * @return {!Array<!proto.dictionary.Field>}
 */
proto.dictionary.Tab.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.dictionary.Field>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.Field, 36));
};


/**
 * @param {!Array<!proto.dictionary.Field>} value
 * @return {!proto.dictionary.Tab} returns this
*/
proto.dictionary.Tab.prototype.setFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 36, value);
};


/**
 * @param {!proto.dictionary.Field=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.Field}
 */
proto.dictionary.Tab.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 36, opt_value, proto.dictionary.Field, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};


/**
 * optional FieldGroup field_group = 37;
 * @return {?proto.dictionary.FieldGroup}
 */
proto.dictionary.Tab.prototype.getFieldGroup = function() {
  return /** @type{?proto.dictionary.FieldGroup} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.FieldGroup, 37));
};


/**
 * @param {?proto.dictionary.FieldGroup|undefined} value
 * @return {!proto.dictionary.Tab} returns this
*/
proto.dictionary.Tab.prototype.setFieldGroup = function(value) {
  return jspb.Message.setWrapperField(this, 37, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.clearFieldGroup = function() {
  return this.setFieldGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Tab.prototype.hasFieldGroup = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional string read_only_logic = 38;
 * @return {string}
 */
proto.dictionary.Tab.prototype.getReadOnlyLogic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Tab} returns this
 */
proto.dictionary.Tab.prototype.setReadOnlyLogic = function(value) {
  return jspb.Message.setProto3StringField(this, 38, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dictionary.Field.repeatedFields_ = [53,58];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.Field.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.Field.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.Field} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Field.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    help: jspb.Message.getFieldWithDefault(msg, 5, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 6, 0),
    columnName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    elementName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    isDisplayed: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    isDisplayedGrid: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    isReadOnly: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    isAllowCopy: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    isEncrypted: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    isSameLine: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    isHeading: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    isFieldOnly: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    isQuickEntry: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    isMandatory: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    isKey: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    isParent: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    isUpdateable: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    isIdentifier: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    isAllowLogging: jspb.Message.getBooleanFieldWithDefault(msg, 23, false),
    isSelectionColumn: jspb.Message.getBooleanFieldWithDefault(msg, 24, false),
    isRange: jspb.Message.getBooleanFieldWithDefault(msg, 25, false),
    isAlwaysUpdateable: jspb.Message.getBooleanFieldWithDefault(msg, 26, false),
    isTranslated: jspb.Message.getBooleanFieldWithDefault(msg, 27, false),
    identifierSequence: jspb.Message.getFieldWithDefault(msg, 78, 0),
    displayLogic: jspb.Message.getFieldWithDefault(msg, 29, ""),
    displayType: jspb.Message.getFieldWithDefault(msg, 30, 0),
    defaultValue: jspb.Message.getFieldWithDefault(msg, 31, ""),
    readOnlyLogic: jspb.Message.getFieldWithDefault(msg, 32, ""),
    mandatoryLogic: jspb.Message.getFieldWithDefault(msg, 33, ""),
    callout: jspb.Message.getFieldWithDefault(msg, 34, ""),
    columnSql: jspb.Message.getFieldWithDefault(msg, 35, ""),
    vFormat: jspb.Message.getFieldWithDefault(msg, 36, ""),
    valueMin: jspb.Message.getFieldWithDefault(msg, 37, ""),
    valueMax: jspb.Message.getFieldWithDefault(msg, 38, ""),
    formatPattern: jspb.Message.getFieldWithDefault(msg, 39, ""),
    contextInfo: (f = msg.getContextInfo()) && proto.dictionary.ContextInfo.toObject(includeInstance, f),
    fieldGroup: (f = msg.getFieldGroup()) && proto.dictionary.FieldGroup.toObject(includeInstance, f),
    fieldDefinition: (f = msg.getFieldDefinition()) && proto.dictionary.FieldDefinition.toObject(includeInstance, f),
    reference: (f = msg.getReference()) && proto.dictionary.Reference.toObject(includeInstance, f),
    process: (f = msg.getProcess()) && proto.dictionary.Process.toObject(includeInstance, f),
    isQueryCriteria: jspb.Message.getBooleanFieldWithDefault(msg, 45, false),
    isOrderBy: jspb.Message.getBooleanFieldWithDefault(msg, 46, false),
    seqNoGrid: jspb.Message.getFieldWithDefault(msg, 47, 0),
    sortNo: jspb.Message.getFieldWithDefault(msg, 48, 0),
    isInfoOnly: jspb.Message.getBooleanFieldWithDefault(msg, 49, false),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 50, false),
    defaultValueTo: jspb.Message.getFieldWithDefault(msg, 51, ""),
    fieldLength: jspb.Message.getFieldWithDefault(msg, 52, 0),
    contextColumnNamesList: (f = jspb.Message.getRepeatedField(msg, 53)) == null ? undefined : f,
    columnId: jspb.Message.getFieldWithDefault(msg, 54, 0),
    columnUuid: jspb.Message.getFieldWithDefault(msg, 55, ""),
    elementId: jspb.Message.getFieldWithDefault(msg, 56, 0),
    elementUuid: jspb.Message.getFieldWithDefault(msg, 57, ""),
    dependentFieldsList: jspb.Message.toObjectList(msg.getDependentFieldsList(),
    proto.dictionary.DependentField.toObject, includeInstance),
    isDisplayedAsPanel: jspb.Message.getFieldWithDefault(msg, 59, ""),
    isDisplayedAsTable: jspb.Message.getFieldWithDefault(msg, 60, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.Field}
 */
proto.dictionary.Field.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.Field;
  return proto.dictionary.Field.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.Field} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.Field}
 */
proto.dictionary.Field.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequence(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setElementName(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDisplayed(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDisplayedGrid(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsReadOnly(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAllowCopy(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsEncrypted(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSameLine(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsHeading(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsFieldOnly(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsQuickEntry(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsMandatory(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsKey(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsParent(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsUpdateable(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsIdentifier(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAllowLogging(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSelectionColumn(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsRange(value);
      break;
    case 26:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAlwaysUpdateable(value);
      break;
    case 27:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsTranslated(value);
      break;
    case 78:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdentifierSequence(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayLogic(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDisplayType(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultValue(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setReadOnlyLogic(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setMandatoryLogic(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallout(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnSql(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setVFormat(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueMin(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueMax(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormatPattern(value);
      break;
    case 40:
      var value = new proto.dictionary.ContextInfo;
      reader.readMessage(value,proto.dictionary.ContextInfo.deserializeBinaryFromReader);
      msg.setContextInfo(value);
      break;
    case 41:
      var value = new proto.dictionary.FieldGroup;
      reader.readMessage(value,proto.dictionary.FieldGroup.deserializeBinaryFromReader);
      msg.setFieldGroup(value);
      break;
    case 42:
      var value = new proto.dictionary.FieldDefinition;
      reader.readMessage(value,proto.dictionary.FieldDefinition.deserializeBinaryFromReader);
      msg.setFieldDefinition(value);
      break;
    case 43:
      var value = new proto.dictionary.Reference;
      reader.readMessage(value,proto.dictionary.Reference.deserializeBinaryFromReader);
      msg.setReference(value);
      break;
    case 44:
      var value = new proto.dictionary.Process;
      reader.readMessage(value,proto.dictionary.Process.deserializeBinaryFromReader);
      msg.setProcess(value);
      break;
    case 45:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsQueryCriteria(value);
      break;
    case 46:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsOrderBy(value);
      break;
    case 47:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSeqNoGrid(value);
      break;
    case 48:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSortNo(value);
      break;
    case 49:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsInfoOnly(value);
      break;
    case 50:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultValueTo(value);
      break;
    case 52:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldLength(value);
      break;
    case 53:
      var value = /** @type {string} */ (reader.readString());
      msg.addContextColumnNames(value);
      break;
    case 54:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColumnId(value);
      break;
    case 55:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnUuid(value);
      break;
    case 56:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setElementId(value);
      break;
    case 57:
      var value = /** @type {string} */ (reader.readString());
      msg.setElementUuid(value);
      break;
    case 58:
      var value = new proto.dictionary.DependentField;
      reader.readMessage(value,proto.dictionary.DependentField.deserializeBinaryFromReader);
      msg.addDependentFields(value);
      break;
    case 59:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsDisplayedAsPanel(value);
      break;
    case 60:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsDisplayedAsTable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.Field.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.Field.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.Field} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Field.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getColumnName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getElementName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getIsDisplayed();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIsDisplayedGrid();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsReadOnly();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getIsAllowCopy();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsEncrypted();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getIsSameLine();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getIsHeading();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getIsFieldOnly();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getIsQuickEntry();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getIsMandatory();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getIsKey();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getIsParent();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getIsUpdateable();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getIsIdentifier();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getIsAllowLogging();
  if (f) {
    writer.writeBool(
      23,
      f
    );
  }
  f = message.getIsSelectionColumn();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getIsRange();
  if (f) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getIsAlwaysUpdateable();
  if (f) {
    writer.writeBool(
      26,
      f
    );
  }
  f = message.getIsTranslated();
  if (f) {
    writer.writeBool(
      27,
      f
    );
  }
  f = message.getIdentifierSequence();
  if (f !== 0) {
    writer.writeInt32(
      78,
      f
    );
  }
  f = message.getDisplayLogic();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getDisplayType();
  if (f !== 0) {
    writer.writeInt32(
      30,
      f
    );
  }
  f = message.getDefaultValue();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getReadOnlyLogic();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getMandatoryLogic();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getCallout();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getColumnSql();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getVFormat();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getValueMin();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getValueMax();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
  f = message.getFormatPattern();
  if (f.length > 0) {
    writer.writeString(
      39,
      f
    );
  }
  f = message.getContextInfo();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      proto.dictionary.ContextInfo.serializeBinaryToWriter
    );
  }
  f = message.getFieldGroup();
  if (f != null) {
    writer.writeMessage(
      41,
      f,
      proto.dictionary.FieldGroup.serializeBinaryToWriter
    );
  }
  f = message.getFieldDefinition();
  if (f != null) {
    writer.writeMessage(
      42,
      f,
      proto.dictionary.FieldDefinition.serializeBinaryToWriter
    );
  }
  f = message.getReference();
  if (f != null) {
    writer.writeMessage(
      43,
      f,
      proto.dictionary.Reference.serializeBinaryToWriter
    );
  }
  f = message.getProcess();
  if (f != null) {
    writer.writeMessage(
      44,
      f,
      proto.dictionary.Process.serializeBinaryToWriter
    );
  }
  f = message.getIsQueryCriteria();
  if (f) {
    writer.writeBool(
      45,
      f
    );
  }
  f = message.getIsOrderBy();
  if (f) {
    writer.writeBool(
      46,
      f
    );
  }
  f = message.getSeqNoGrid();
  if (f !== 0) {
    writer.writeInt32(
      47,
      f
    );
  }
  f = message.getSortNo();
  if (f !== 0) {
    writer.writeInt32(
      48,
      f
    );
  }
  f = message.getIsInfoOnly();
  if (f) {
    writer.writeBool(
      49,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      50,
      f
    );
  }
  f = message.getDefaultValueTo();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
  f = message.getFieldLength();
  if (f !== 0) {
    writer.writeInt32(
      52,
      f
    );
  }
  f = message.getContextColumnNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      53,
      f
    );
  }
  f = message.getColumnId();
  if (f !== 0) {
    writer.writeInt32(
      54,
      f
    );
  }
  f = message.getColumnUuid();
  if (f.length > 0) {
    writer.writeString(
      55,
      f
    );
  }
  f = message.getElementId();
  if (f !== 0) {
    writer.writeInt32(
      56,
      f
    );
  }
  f = message.getElementUuid();
  if (f.length > 0) {
    writer.writeString(
      57,
      f
    );
  }
  f = message.getDependentFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      58,
      f,
      proto.dictionary.DependentField.serializeBinaryToWriter
    );
  }
  f = message.getIsDisplayedAsPanel();
  if (f.length > 0) {
    writer.writeString(
      59,
      f
    );
  }
  f = message.getIsDisplayedAsTable();
  if (f.length > 0) {
    writer.writeString(
      60,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.Field.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.Field.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dictionary.Field.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.dictionary.Field.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string help = 5;
 * @return {string}
 */
proto.dictionary.Field.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 sequence = 6;
 * @return {number}
 */
proto.dictionary.Field.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string column_name = 7;
 * @return {string}
 */
proto.dictionary.Field.prototype.getColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string element_name = 8;
 * @return {string}
 */
proto.dictionary.Field.prototype.getElementName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setElementName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool is_displayed = 9;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsDisplayed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsDisplayed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool is_displayed_grid = 10;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsDisplayedGrid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsDisplayedGrid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool is_read_only = 11;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsReadOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsReadOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool is_allow_copy = 12;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsAllowCopy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsAllowCopy = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool is_encrypted = 13;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsEncrypted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsEncrypted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool is_same_line = 14;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsSameLine = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsSameLine = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool is_heading = 15;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsHeading = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsHeading = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool is_field_only = 16;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsFieldOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsFieldOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool is_quick_entry = 17;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsQuickEntry = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsQuickEntry = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool is_mandatory = 18;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsMandatory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsMandatory = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool is_key = 19;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsKey = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsKey = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional bool is_parent = 20;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsParent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsParent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional bool is_updateable = 21;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsUpdateable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsUpdateable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * optional bool is_identifier = 22;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsIdentifier = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsIdentifier = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional bool is_allow_logging = 23;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsAllowLogging = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsAllowLogging = function(value) {
  return jspb.Message.setProto3BooleanField(this, 23, value);
};


/**
 * optional bool is_selection_column = 24;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsSelectionColumn = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsSelectionColumn = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * optional bool is_range = 25;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsRange = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsRange = function(value) {
  return jspb.Message.setProto3BooleanField(this, 25, value);
};


/**
 * optional bool is_always_updateable = 26;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsAlwaysUpdateable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 26, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsAlwaysUpdateable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 26, value);
};


/**
 * optional bool is_translated = 27;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsTranslated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 27, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsTranslated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 27, value);
};


/**
 * optional int32 identifier_sequence = 78;
 * @return {number}
 */
proto.dictionary.Field.prototype.getIdentifierSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 78, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIdentifierSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 78, value);
};


/**
 * optional string display_logic = 29;
 * @return {string}
 */
proto.dictionary.Field.prototype.getDisplayLogic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setDisplayLogic = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional int32 display_type = 30;
 * @return {number}
 */
proto.dictionary.Field.prototype.getDisplayType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setDisplayType = function(value) {
  return jspb.Message.setProto3IntField(this, 30, value);
};


/**
 * optional string default_value = 31;
 * @return {string}
 */
proto.dictionary.Field.prototype.getDefaultValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setDefaultValue = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string read_only_logic = 32;
 * @return {string}
 */
proto.dictionary.Field.prototype.getReadOnlyLogic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setReadOnlyLogic = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string mandatory_logic = 33;
 * @return {string}
 */
proto.dictionary.Field.prototype.getMandatoryLogic = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setMandatoryLogic = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional string callout = 34;
 * @return {string}
 */
proto.dictionary.Field.prototype.getCallout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setCallout = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional string column_sql = 35;
 * @return {string}
 */
proto.dictionary.Field.prototype.getColumnSql = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setColumnSql = function(value) {
  return jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional string v_format = 36;
 * @return {string}
 */
proto.dictionary.Field.prototype.getVFormat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setVFormat = function(value) {
  return jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional string value_min = 37;
 * @return {string}
 */
proto.dictionary.Field.prototype.getValueMin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setValueMin = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional string value_max = 38;
 * @return {string}
 */
proto.dictionary.Field.prototype.getValueMax = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setValueMax = function(value) {
  return jspb.Message.setProto3StringField(this, 38, value);
};


/**
 * optional string format_pattern = 39;
 * @return {string}
 */
proto.dictionary.Field.prototype.getFormatPattern = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setFormatPattern = function(value) {
  return jspb.Message.setProto3StringField(this, 39, value);
};


/**
 * optional ContextInfo context_info = 40;
 * @return {?proto.dictionary.ContextInfo}
 */
proto.dictionary.Field.prototype.getContextInfo = function() {
  return /** @type{?proto.dictionary.ContextInfo} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.ContextInfo, 40));
};


/**
 * @param {?proto.dictionary.ContextInfo|undefined} value
 * @return {!proto.dictionary.Field} returns this
*/
proto.dictionary.Field.prototype.setContextInfo = function(value) {
  return jspb.Message.setWrapperField(this, 40, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.clearContextInfo = function() {
  return this.setContextInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Field.prototype.hasContextInfo = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional FieldGroup field_group = 41;
 * @return {?proto.dictionary.FieldGroup}
 */
proto.dictionary.Field.prototype.getFieldGroup = function() {
  return /** @type{?proto.dictionary.FieldGroup} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.FieldGroup, 41));
};


/**
 * @param {?proto.dictionary.FieldGroup|undefined} value
 * @return {!proto.dictionary.Field} returns this
*/
proto.dictionary.Field.prototype.setFieldGroup = function(value) {
  return jspb.Message.setWrapperField(this, 41, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.clearFieldGroup = function() {
  return this.setFieldGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Field.prototype.hasFieldGroup = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional FieldDefinition field_definition = 42;
 * @return {?proto.dictionary.FieldDefinition}
 */
proto.dictionary.Field.prototype.getFieldDefinition = function() {
  return /** @type{?proto.dictionary.FieldDefinition} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.FieldDefinition, 42));
};


/**
 * @param {?proto.dictionary.FieldDefinition|undefined} value
 * @return {!proto.dictionary.Field} returns this
*/
proto.dictionary.Field.prototype.setFieldDefinition = function(value) {
  return jspb.Message.setWrapperField(this, 42, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.clearFieldDefinition = function() {
  return this.setFieldDefinition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Field.prototype.hasFieldDefinition = function() {
  return jspb.Message.getField(this, 42) != null;
};


/**
 * optional Reference reference = 43;
 * @return {?proto.dictionary.Reference}
 */
proto.dictionary.Field.prototype.getReference = function() {
  return /** @type{?proto.dictionary.Reference} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.Reference, 43));
};


/**
 * @param {?proto.dictionary.Reference|undefined} value
 * @return {!proto.dictionary.Field} returns this
*/
proto.dictionary.Field.prototype.setReference = function(value) {
  return jspb.Message.setWrapperField(this, 43, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.clearReference = function() {
  return this.setReference(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Field.prototype.hasReference = function() {
  return jspb.Message.getField(this, 43) != null;
};


/**
 * optional Process process = 44;
 * @return {?proto.dictionary.Process}
 */
proto.dictionary.Field.prototype.getProcess = function() {
  return /** @type{?proto.dictionary.Process} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.Process, 44));
};


/**
 * @param {?proto.dictionary.Process|undefined} value
 * @return {!proto.dictionary.Field} returns this
*/
proto.dictionary.Field.prototype.setProcess = function(value) {
  return jspb.Message.setWrapperField(this, 44, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.clearProcess = function() {
  return this.setProcess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Field.prototype.hasProcess = function() {
  return jspb.Message.getField(this, 44) != null;
};


/**
 * optional bool is_query_criteria = 45;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsQueryCriteria = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 45, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsQueryCriteria = function(value) {
  return jspb.Message.setProto3BooleanField(this, 45, value);
};


/**
 * optional bool is_order_by = 46;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsOrderBy = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 46, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsOrderBy = function(value) {
  return jspb.Message.setProto3BooleanField(this, 46, value);
};


/**
 * optional int32 seq_no_grid = 47;
 * @return {number}
 */
proto.dictionary.Field.prototype.getSeqNoGrid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 47, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setSeqNoGrid = function(value) {
  return jspb.Message.setProto3IntField(this, 47, value);
};


/**
 * optional int32 sort_no = 48;
 * @return {number}
 */
proto.dictionary.Field.prototype.getSortNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 48, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setSortNo = function(value) {
  return jspb.Message.setProto3IntField(this, 48, value);
};


/**
 * optional bool is_info_only = 49;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsInfoOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 49, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsInfoOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 49, value);
};


/**
 * optional bool is_active = 50;
 * @return {boolean}
 */
proto.dictionary.Field.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 50, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 50, value);
};


/**
 * optional string default_value_to = 51;
 * @return {string}
 */
proto.dictionary.Field.prototype.getDefaultValueTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setDefaultValueTo = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};


/**
 * optional int32 field_length = 52;
 * @return {number}
 */
proto.dictionary.Field.prototype.getFieldLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 52, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setFieldLength = function(value) {
  return jspb.Message.setProto3IntField(this, 52, value);
};


/**
 * repeated string context_column_names = 53;
 * @return {!Array<string>}
 */
proto.dictionary.Field.prototype.getContextColumnNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 53));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setContextColumnNamesList = function(value) {
  return jspb.Message.setField(this, 53, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.addContextColumnNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 53, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.clearContextColumnNamesList = function() {
  return this.setContextColumnNamesList([]);
};


/**
 * optional int32 column_id = 54;
 * @return {number}
 */
proto.dictionary.Field.prototype.getColumnId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 54, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setColumnId = function(value) {
  return jspb.Message.setProto3IntField(this, 54, value);
};


/**
 * optional string column_uuid = 55;
 * @return {string}
 */
proto.dictionary.Field.prototype.getColumnUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 55, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setColumnUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 55, value);
};


/**
 * optional int32 element_id = 56;
 * @return {number}
 */
proto.dictionary.Field.prototype.getElementId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 56, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setElementId = function(value) {
  return jspb.Message.setProto3IntField(this, 56, value);
};


/**
 * optional string element_uuid = 57;
 * @return {string}
 */
proto.dictionary.Field.prototype.getElementUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 57, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setElementUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 57, value);
};


/**
 * repeated DependentField dependent_fields = 58;
 * @return {!Array<!proto.dictionary.DependentField>}
 */
proto.dictionary.Field.prototype.getDependentFieldsList = function() {
  return /** @type{!Array<!proto.dictionary.DependentField>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.DependentField, 58));
};


/**
 * @param {!Array<!proto.dictionary.DependentField>} value
 * @return {!proto.dictionary.Field} returns this
*/
proto.dictionary.Field.prototype.setDependentFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 58, value);
};


/**
 * @param {!proto.dictionary.DependentField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.DependentField}
 */
proto.dictionary.Field.prototype.addDependentFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 58, opt_value, proto.dictionary.DependentField, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.clearDependentFieldsList = function() {
  return this.setDependentFieldsList([]);
};


/**
 * optional string is_displayed_as_panel = 59;
 * @return {string}
 */
proto.dictionary.Field.prototype.getIsDisplayedAsPanel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 59, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsDisplayedAsPanel = function(value) {
  return jspb.Message.setProto3StringField(this, 59, value);
};


/**
 * optional string is_displayed_as_table = 60;
 * @return {string}
 */
proto.dictionary.Field.prototype.getIsDisplayedAsTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 60, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Field} returns this
 */
proto.dictionary.Field.prototype.setIsDisplayedAsTable = function(value) {
  return jspb.Message.setProto3StringField(this, 60, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.DependentField.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.DependentField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.DependentField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.DependentField.toObject = function(includeInstance, msg) {
  var f, obj = {
    containerId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    containerUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    containerName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    id: jspb.Message.getFieldWithDefault(msg, 4, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    columnName: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.DependentField}
 */
proto.dictionary.DependentField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.DependentField;
  return proto.dictionary.DependentField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.DependentField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.DependentField}
 */
proto.dictionary.DependentField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setContainerId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContainerUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContainerName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.DependentField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.DependentField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.DependentField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.DependentField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainerId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getContainerUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContainerName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getColumnName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 container_id = 1;
 * @return {number}
 */
proto.dictionary.DependentField.prototype.getContainerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.DependentField} returns this
 */
proto.dictionary.DependentField.prototype.setContainerId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string container_uuid = 2;
 * @return {string}
 */
proto.dictionary.DependentField.prototype.getContainerUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.DependentField} returns this
 */
proto.dictionary.DependentField.prototype.setContainerUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string container_name = 3;
 * @return {string}
 */
proto.dictionary.DependentField.prototype.getContainerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.DependentField} returns this
 */
proto.dictionary.DependentField.prototype.setContainerName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 id = 4;
 * @return {number}
 */
proto.dictionary.DependentField.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.DependentField} returns this
 */
proto.dictionary.DependentField.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string uuid = 5;
 * @return {string}
 */
proto.dictionary.DependentField.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.DependentField} returns this
 */
proto.dictionary.DependentField.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string column_name = 6;
 * @return {string}
 */
proto.dictionary.DependentField.prototype.getColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.DependentField} returns this
 */
proto.dictionary.DependentField.prototype.setColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.ContextInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.ContextInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.ContextInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ContextInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    messageText: (f = msg.getMessageText()) && proto.dictionary.MessageText.toObject(includeInstance, f),
    sqlStatement: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.ContextInfo}
 */
proto.dictionary.ContextInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.ContextInfo;
  return proto.dictionary.ContextInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.ContextInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.ContextInfo}
 */
proto.dictionary.ContextInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = new proto.dictionary.MessageText;
      reader.readMessage(value,proto.dictionary.MessageText.deserializeBinaryFromReader);
      msg.setMessageText(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSqlStatement(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.ContextInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.ContextInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.ContextInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ContextInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMessageText();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.dictionary.MessageText.serializeBinaryToWriter
    );
  }
  f = message.getSqlStatement();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.ContextInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.ContextInfo} returns this
 */
proto.dictionary.ContextInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.ContextInfo.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ContextInfo} returns this
 */
proto.dictionary.ContextInfo.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dictionary.ContextInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ContextInfo} returns this
 */
proto.dictionary.ContextInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.dictionary.ContextInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ContextInfo} returns this
 */
proto.dictionary.ContextInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional MessageText message_text = 5;
 * @return {?proto.dictionary.MessageText}
 */
proto.dictionary.ContextInfo.prototype.getMessageText = function() {
  return /** @type{?proto.dictionary.MessageText} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.MessageText, 5));
};


/**
 * @param {?proto.dictionary.MessageText|undefined} value
 * @return {!proto.dictionary.ContextInfo} returns this
*/
proto.dictionary.ContextInfo.prototype.setMessageText = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.ContextInfo} returns this
 */
proto.dictionary.ContextInfo.prototype.clearMessageText = function() {
  return this.setMessageText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.ContextInfo.prototype.hasMessageText = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string sql_statement = 6;
 * @return {string}
 */
proto.dictionary.ContextInfo.prototype.getSqlStatement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ContextInfo} returns this
 */
proto.dictionary.ContextInfo.prototype.setSqlStatement = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool is_active = 7;
 * @return {boolean}
 */
proto.dictionary.ContextInfo.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.ContextInfo} returns this
 */
proto.dictionary.ContextInfo.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.MessageText.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.MessageText.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.MessageText} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.MessageText.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    messageType: jspb.Message.getFieldWithDefault(msg, 4, ""),
    messageText: jspb.Message.getFieldWithDefault(msg, 5, ""),
    messageTip: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.MessageText}
 */
proto.dictionary.MessageText.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.MessageText;
  return proto.dictionary.MessageText.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.MessageText} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.MessageText}
 */
proto.dictionary.MessageText.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageText(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageTip(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.MessageText.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.MessageText.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.MessageText} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.MessageText.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMessageType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMessageText();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMessageTip();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.MessageText.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.MessageText} returns this
 */
proto.dictionary.MessageText.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.MessageText.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.MessageText} returns this
 */
proto.dictionary.MessageText.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.dictionary.MessageText.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.MessageText} returns this
 */
proto.dictionary.MessageText.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string message_type = 4;
 * @return {string}
 */
proto.dictionary.MessageText.prototype.getMessageType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.MessageText} returns this
 */
proto.dictionary.MessageText.prototype.setMessageType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string message_text = 5;
 * @return {string}
 */
proto.dictionary.MessageText.prototype.getMessageText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.MessageText} returns this
 */
proto.dictionary.MessageText.prototype.setMessageText = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string message_tip = 6;
 * @return {string}
 */
proto.dictionary.MessageText.prototype.getMessageTip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.MessageText} returns this
 */
proto.dictionary.MessageText.prototype.setMessageTip = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool is_active = 7;
 * @return {boolean}
 */
proto.dictionary.MessageText.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.MessageText} returns this
 */
proto.dictionary.MessageText.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.FieldGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.FieldGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.FieldGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.FieldGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fieldGroupType: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.FieldGroup}
 */
proto.dictionary.FieldGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.FieldGroup;
  return proto.dictionary.FieldGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.FieldGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.FieldGroup}
 */
proto.dictionary.FieldGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldGroupType(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.FieldGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.FieldGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.FieldGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.FieldGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFieldGroupType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.FieldGroup.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.FieldGroup} returns this
 */
proto.dictionary.FieldGroup.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.FieldGroup.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldGroup} returns this
 */
proto.dictionary.FieldGroup.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dictionary.FieldGroup.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldGroup} returns this
 */
proto.dictionary.FieldGroup.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string field_group_type = 4;
 * @return {string}
 */
proto.dictionary.FieldGroup.prototype.getFieldGroupType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldGroup} returns this
 */
proto.dictionary.FieldGroup.prototype.setFieldGroupType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool is_active = 5;
 * @return {boolean}
 */
proto.dictionary.FieldGroup.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.FieldGroup} returns this
 */
proto.dictionary.FieldGroup.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dictionary.FieldDefinition.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.FieldDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.FieldDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.FieldDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.FieldDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    fieldGroupType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    proto.dictionary.FieldCondition.toObject, includeInstance),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.FieldDefinition}
 */
proto.dictionary.FieldDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.FieldDefinition;
  return proto.dictionary.FieldDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.FieldDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.FieldDefinition}
 */
proto.dictionary.FieldDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldGroupType(value);
      break;
    case 6:
      var value = new proto.dictionary.FieldCondition;
      reader.readMessage(value,proto.dictionary.FieldCondition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.FieldDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.FieldDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.FieldDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.FieldDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFieldGroupType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.dictionary.FieldCondition.serializeBinaryToWriter
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.FieldDefinition.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.FieldDefinition} returns this
 */
proto.dictionary.FieldDefinition.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.FieldDefinition.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldDefinition} returns this
 */
proto.dictionary.FieldDefinition.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.dictionary.FieldDefinition.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldDefinition} returns this
 */
proto.dictionary.FieldDefinition.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.dictionary.FieldDefinition.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldDefinition} returns this
 */
proto.dictionary.FieldDefinition.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string field_group_type = 5;
 * @return {string}
 */
proto.dictionary.FieldDefinition.prototype.getFieldGroupType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldDefinition} returns this
 */
proto.dictionary.FieldDefinition.prototype.setFieldGroupType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated FieldCondition conditions = 6;
 * @return {!Array<!proto.dictionary.FieldCondition>}
 */
proto.dictionary.FieldDefinition.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.dictionary.FieldCondition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.FieldCondition, 6));
};


/**
 * @param {!Array<!proto.dictionary.FieldCondition>} value
 * @return {!proto.dictionary.FieldDefinition} returns this
*/
proto.dictionary.FieldDefinition.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.dictionary.FieldCondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.FieldCondition}
 */
proto.dictionary.FieldDefinition.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.dictionary.FieldCondition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.FieldDefinition} returns this
 */
proto.dictionary.FieldDefinition.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};


/**
 * optional bool is_active = 7;
 * @return {boolean}
 */
proto.dictionary.FieldDefinition.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.FieldDefinition} returns this
 */
proto.dictionary.FieldDefinition.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.FieldCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.FieldCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.FieldCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.FieldCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    condition: jspb.Message.getFieldWithDefault(msg, 3, ""),
    stylesheet: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.FieldCondition}
 */
proto.dictionary.FieldCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.FieldCondition;
  return proto.dictionary.FieldCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.FieldCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.FieldCondition}
 */
proto.dictionary.FieldCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCondition(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStylesheet(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.FieldCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.FieldCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.FieldCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.FieldCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCondition();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStylesheet();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.FieldCondition.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.FieldCondition} returns this
 */
proto.dictionary.FieldCondition.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.FieldCondition.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldCondition} returns this
 */
proto.dictionary.FieldCondition.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string condition = 3;
 * @return {string}
 */
proto.dictionary.FieldCondition.prototype.getCondition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldCondition} returns this
 */
proto.dictionary.FieldCondition.prototype.setCondition = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string stylesheet = 4;
 * @return {string}
 */
proto.dictionary.FieldCondition.prototype.getStylesheet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.FieldCondition} returns this
 */
proto.dictionary.FieldCondition.prototype.setStylesheet = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool is_active = 5;
 * @return {boolean}
 */
proto.dictionary.FieldCondition.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.FieldCondition} returns this
 */
proto.dictionary.FieldCondition.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dictionary.Process.repeatedFields_ = [11,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.Process.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.Process.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.Process} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Process.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    help: jspb.Message.getFieldWithDefault(msg, 6, ""),
    isReport: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    accessLevel: jspb.Message.getFieldWithDefault(msg, 8, 0),
    showHelp: jspb.Message.getFieldWithDefault(msg, 9, ""),
    isDirectPrint: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    parametersList: jspb.Message.toObjectList(msg.getParametersList(),
    proto.dictionary.Field.toObject, includeInstance),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    reportExportTypesList: jspb.Message.toObjectList(msg.getReportExportTypesList(),
    proto.dictionary.ReportExportType.toObject, includeInstance),
    browserUuid: jspb.Message.getFieldWithDefault(msg, 14, ""),
    formUuid: jspb.Message.getFieldWithDefault(msg, 15, ""),
    workflowUuid: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.Process}
 */
proto.dictionary.Process.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.Process;
  return proto.dictionary.Process.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.Process} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.Process}
 */
proto.dictionary.Process.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsReport(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccessLevel(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setShowHelp(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDirectPrint(value);
      break;
    case 11:
      var value = new proto.dictionary.Field;
      reader.readMessage(value,proto.dictionary.Field.deserializeBinaryFromReader);
      msg.addParameters(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 13:
      var value = new proto.dictionary.ReportExportType;
      reader.readMessage(value,proto.dictionary.ReportExportType.deserializeBinaryFromReader);
      msg.addReportExportTypes(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrowserUuid(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setFormUuid(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkflowUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.Process.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.Process.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.Process} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Process.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsReport();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getAccessLevel();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getShowHelp();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getIsDirectPrint();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getParametersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.dictionary.Field.serializeBinaryToWriter
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getReportExportTypesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.dictionary.ReportExportType.serializeBinaryToWriter
    );
  }
  f = message.getBrowserUuid();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getFormUuid();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getWorkflowUuid();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.Process.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.Process.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.dictionary.Process.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.dictionary.Process.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.dictionary.Process.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string help = 6;
 * @return {string}
 */
proto.dictionary.Process.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool is_report = 7;
 * @return {boolean}
 */
proto.dictionary.Process.prototype.getIsReport = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setIsReport = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional int32 access_level = 8;
 * @return {number}
 */
proto.dictionary.Process.prototype.getAccessLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setAccessLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string show_help = 9;
 * @return {string}
 */
proto.dictionary.Process.prototype.getShowHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setShowHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool is_direct_print = 10;
 * @return {boolean}
 */
proto.dictionary.Process.prototype.getIsDirectPrint = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setIsDirectPrint = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * repeated Field parameters = 11;
 * @return {!Array<!proto.dictionary.Field>}
 */
proto.dictionary.Process.prototype.getParametersList = function() {
  return /** @type{!Array<!proto.dictionary.Field>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.Field, 11));
};


/**
 * @param {!Array<!proto.dictionary.Field>} value
 * @return {!proto.dictionary.Process} returns this
*/
proto.dictionary.Process.prototype.setParametersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.dictionary.Field=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.Field}
 */
proto.dictionary.Process.prototype.addParameters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.dictionary.Field, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.clearParametersList = function() {
  return this.setParametersList([]);
};


/**
 * optional bool is_active = 12;
 * @return {boolean}
 */
proto.dictionary.Process.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * repeated ReportExportType report_export_types = 13;
 * @return {!Array<!proto.dictionary.ReportExportType>}
 */
proto.dictionary.Process.prototype.getReportExportTypesList = function() {
  return /** @type{!Array<!proto.dictionary.ReportExportType>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.ReportExportType, 13));
};


/**
 * @param {!Array<!proto.dictionary.ReportExportType>} value
 * @return {!proto.dictionary.Process} returns this
*/
proto.dictionary.Process.prototype.setReportExportTypesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.dictionary.ReportExportType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.ReportExportType}
 */
proto.dictionary.Process.prototype.addReportExportTypes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.dictionary.ReportExportType, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.clearReportExportTypesList = function() {
  return this.setReportExportTypesList([]);
};


/**
 * optional string browser_uuid = 14;
 * @return {string}
 */
proto.dictionary.Process.prototype.getBrowserUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setBrowserUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string form_uuid = 15;
 * @return {string}
 */
proto.dictionary.Process.prototype.getFormUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setFormUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string workflow_uuid = 16;
 * @return {string}
 */
proto.dictionary.Process.prototype.getWorkflowUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Process} returns this
 */
proto.dictionary.Process.prototype.setWorkflowUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.Form.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.Form.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.Form} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Form.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    help: jspb.Message.getFieldWithDefault(msg, 5, ""),
    accessLevel: jspb.Message.getFieldWithDefault(msg, 6, 0),
    fileName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.Form}
 */
proto.dictionary.Form.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.Form;
  return proto.dictionary.Form.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.Form} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.Form}
 */
proto.dictionary.Form.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccessLevel(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.Form.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.Form.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.Form} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Form.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAccessLevel();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.Form.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Form} returns this
 */
proto.dictionary.Form.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.Form.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Form} returns this
 */
proto.dictionary.Form.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dictionary.Form.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Form} returns this
 */
proto.dictionary.Form.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.dictionary.Form.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Form} returns this
 */
proto.dictionary.Form.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string help = 5;
 * @return {string}
 */
proto.dictionary.Form.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Form} returns this
 */
proto.dictionary.Form.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 access_level = 6;
 * @return {number}
 */
proto.dictionary.Form.prototype.getAccessLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Form} returns this
 */
proto.dictionary.Form.prototype.setAccessLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string file_name = 7;
 * @return {string}
 */
proto.dictionary.Form.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Form} returns this
 */
proto.dictionary.Form.prototype.setFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool is_active = 8;
 * @return {boolean}
 */
proto.dictionary.Form.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Form} returns this
 */
proto.dictionary.Form.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dictionary.Browser.repeatedFields_ = [9,19];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.Browser.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.Browser.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.Browser} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Browser.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    help: jspb.Message.getFieldWithDefault(msg, 6, ""),
    accessLevel: jspb.Message.getFieldWithDefault(msg, 8, 0),
    contextColumnNamesList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    isUpdateable: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    isDeleteable: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    isSelectedByDefault: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    isCollapsibleByDefault: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    isExecutedQueryByDefault: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    isShowTotal: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    viewUuid: jspb.Message.getFieldWithDefault(msg, 16, ""),
    window: (f = msg.getWindow()) && proto.dictionary.Window.toObject(includeInstance, f),
    process: (f = msg.getProcess()) && proto.dictionary.Process.toObject(includeInstance, f),
    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.dictionary.Field.toObject, includeInstance),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    tableName: jspb.Message.getFieldWithDefault(msg, 21, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.Browser}
 */
proto.dictionary.Browser.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.Browser;
  return proto.dictionary.Browser.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.Browser} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.Browser}
 */
proto.dictionary.Browser.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccessLevel(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addContextColumnNames(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsUpdateable(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDeleteable(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSelectedByDefault(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsCollapsibleByDefault(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsExecutedQueryByDefault(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsShowTotal(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewUuid(value);
      break;
    case 17:
      var value = new proto.dictionary.Window;
      reader.readMessage(value,proto.dictionary.Window.deserializeBinaryFromReader);
      msg.setWindow(value);
      break;
    case 18:
      var value = new proto.dictionary.Process;
      reader.readMessage(value,proto.dictionary.Process.deserializeBinaryFromReader);
      msg.setProcess(value);
      break;
    case 19:
      var value = new proto.dictionary.Field;
      reader.readMessage(value,proto.dictionary.Field.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.Browser.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.Browser.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.Browser} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Browser.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAccessLevel();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getContextColumnNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getIsUpdateable();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsDeleteable();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getIsSelectedByDefault();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsCollapsibleByDefault();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getIsExecutedQueryByDefault();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getIsShowTotal();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getViewUuid();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getWindow();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.dictionary.Window.serializeBinaryToWriter
    );
  }
  f = message.getProcess();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.dictionary.Process.serializeBinaryToWriter
    );
  }
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      19,
      f,
      proto.dictionary.Field.serializeBinaryToWriter
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.Browser.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.Browser.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.dictionary.Browser.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.dictionary.Browser.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.dictionary.Browser.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string help = 6;
 * @return {string}
 */
proto.dictionary.Browser.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 access_level = 8;
 * @return {number}
 */
proto.dictionary.Browser.prototype.getAccessLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setAccessLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated string context_column_names = 9;
 * @return {!Array<string>}
 */
proto.dictionary.Browser.prototype.getContextColumnNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setContextColumnNamesList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.addContextColumnNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.clearContextColumnNamesList = function() {
  return this.setContextColumnNamesList([]);
};


/**
 * optional bool is_updateable = 10;
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.getIsUpdateable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setIsUpdateable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool is_deleteable = 11;
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.getIsDeleteable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setIsDeleteable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool is_selected_by_default = 12;
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.getIsSelectedByDefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setIsSelectedByDefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool is_collapsible_by_default = 13;
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.getIsCollapsibleByDefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setIsCollapsibleByDefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool is_executed_query_by_default = 14;
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.getIsExecutedQueryByDefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setIsExecutedQueryByDefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool is_show_total = 15;
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.getIsShowTotal = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setIsShowTotal = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional string view_uuid = 16;
 * @return {string}
 */
proto.dictionary.Browser.prototype.getViewUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setViewUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional Window window = 17;
 * @return {?proto.dictionary.Window}
 */
proto.dictionary.Browser.prototype.getWindow = function() {
  return /** @type{?proto.dictionary.Window} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.Window, 17));
};


/**
 * @param {?proto.dictionary.Window|undefined} value
 * @return {!proto.dictionary.Browser} returns this
*/
proto.dictionary.Browser.prototype.setWindow = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.clearWindow = function() {
  return this.setWindow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.hasWindow = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional Process process = 18;
 * @return {?proto.dictionary.Process}
 */
proto.dictionary.Browser.prototype.getProcess = function() {
  return /** @type{?proto.dictionary.Process} */ (
    jspb.Message.getWrapperField(this, proto.dictionary.Process, 18));
};


/**
 * @param {?proto.dictionary.Process|undefined} value
 * @return {!proto.dictionary.Browser} returns this
*/
proto.dictionary.Browser.prototype.setProcess = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.clearProcess = function() {
  return this.setProcess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.hasProcess = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * repeated Field fields = 19;
 * @return {!Array<!proto.dictionary.Field>}
 */
proto.dictionary.Browser.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.dictionary.Field>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.Field, 19));
};


/**
 * @param {!Array<!proto.dictionary.Field>} value
 * @return {!proto.dictionary.Browser} returns this
*/
proto.dictionary.Browser.prototype.setFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 19, value);
};


/**
 * @param {!proto.dictionary.Field=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.Field}
 */
proto.dictionary.Browser.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.dictionary.Field, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};


/**
 * optional bool is_active = 20;
 * @return {boolean}
 */
proto.dictionary.Browser.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional string table_name = 21;
 * @return {string}
 */
proto.dictionary.Browser.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Browser} returns this
 */
proto.dictionary.Browser.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.ZoomWindow.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.ZoomWindow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.ZoomWindow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ZoomWindow.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isSalesTransaction: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.ZoomWindow}
 */
proto.dictionary.ZoomWindow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.ZoomWindow;
  return proto.dictionary.ZoomWindow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.ZoomWindow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.ZoomWindow}
 */
proto.dictionary.ZoomWindow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSalesTransaction(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.ZoomWindow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.ZoomWindow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.ZoomWindow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ZoomWindow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsSalesTransaction();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dictionary.ZoomWindow.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.ZoomWindow} returns this
 */
proto.dictionary.ZoomWindow.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.dictionary.ZoomWindow.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ZoomWindow} returns this
 */
proto.dictionary.ZoomWindow.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dictionary.ZoomWindow.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ZoomWindow} returns this
 */
proto.dictionary.ZoomWindow.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.dictionary.ZoomWindow.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ZoomWindow} returns this
 */
proto.dictionary.ZoomWindow.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool is_sales_transaction = 5;
 * @return {boolean}
 */
proto.dictionary.ZoomWindow.prototype.getIsSalesTransaction = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.ZoomWindow} returns this
 */
proto.dictionary.ZoomWindow.prototype.setIsSalesTransaction = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool is_active = 6;
 * @return {boolean}
 */
proto.dictionary.ZoomWindow.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dictionary.ZoomWindow} returns this
 */
proto.dictionary.ZoomWindow.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dictionary.Reference.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.Reference.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.Reference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.Reference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Reference.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    keyColumnName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    displayColumnName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contextColumnNamesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    zoomWindowsList: jspb.Message.toObjectList(msg.getZoomWindowsList(),
    proto.dictionary.ZoomWindow.toObject, includeInstance),
    id: jspb.Message.getFieldWithDefault(msg, 6, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.Reference}
 */
proto.dictionary.Reference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.Reference;
  return proto.dictionary.Reference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.Reference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.Reference}
 */
proto.dictionary.Reference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyColumnName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayColumnName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addContextColumnNames(value);
      break;
    case 5:
      var value = new proto.dictionary.ZoomWindow;
      reader.readMessage(value,proto.dictionary.ZoomWindow.deserializeBinaryFromReader);
      msg.addZoomWindows(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.Reference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.Reference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.Reference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.Reference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKeyColumnName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDisplayColumnName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContextColumnNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getZoomWindowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.dictionary.ZoomWindow.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string table_name = 1;
 * @return {string}
 */
proto.dictionary.Reference.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Reference} returns this
 */
proto.dictionary.Reference.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string key_column_name = 2;
 * @return {string}
 */
proto.dictionary.Reference.prototype.getKeyColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Reference} returns this
 */
proto.dictionary.Reference.prototype.setKeyColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string display_column_name = 3;
 * @return {string}
 */
proto.dictionary.Reference.prototype.getDisplayColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Reference} returns this
 */
proto.dictionary.Reference.prototype.setDisplayColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string context_column_names = 4;
 * @return {!Array<string>}
 */
proto.dictionary.Reference.prototype.getContextColumnNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.dictionary.Reference} returns this
 */
proto.dictionary.Reference.prototype.setContextColumnNamesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dictionary.Reference} returns this
 */
proto.dictionary.Reference.prototype.addContextColumnNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Reference} returns this
 */
proto.dictionary.Reference.prototype.clearContextColumnNamesList = function() {
  return this.setContextColumnNamesList([]);
};


/**
 * repeated ZoomWindow zoom_windows = 5;
 * @return {!Array<!proto.dictionary.ZoomWindow>}
 */
proto.dictionary.Reference.prototype.getZoomWindowsList = function() {
  return /** @type{!Array<!proto.dictionary.ZoomWindow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.ZoomWindow, 5));
};


/**
 * @param {!Array<!proto.dictionary.ZoomWindow>} value
 * @return {!proto.dictionary.Reference} returns this
*/
proto.dictionary.Reference.prototype.setZoomWindowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.dictionary.ZoomWindow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.ZoomWindow}
 */
proto.dictionary.Reference.prototype.addZoomWindows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.dictionary.ZoomWindow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.Reference} returns this
 */
proto.dictionary.Reference.prototype.clearZoomWindowsList = function() {
  return this.setZoomWindowsList([]);
};


/**
 * optional int32 id = 6;
 * @return {number}
 */
proto.dictionary.Reference.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.Reference} returns this
 */
proto.dictionary.Reference.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string uuid = 7;
 * @return {string}
 */
proto.dictionary.Reference.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.Reference} returns this
 */
proto.dictionary.Reference.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.ReportExportType.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.ReportExportType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.ReportExportType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ReportExportType.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.ReportExportType}
 */
proto.dictionary.ReportExportType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.ReportExportType;
  return proto.dictionary.ReportExportType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.ReportExportType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.ReportExportType}
 */
proto.dictionary.ReportExportType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.ReportExportType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.ReportExportType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.ReportExportType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ReportExportType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.dictionary.ReportExportType.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ReportExportType} returns this
 */
proto.dictionary.ReportExportType.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.dictionary.ReportExportType.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ReportExportType} returns this
 */
proto.dictionary.ReportExportType.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.dictionary.ReportExportType.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ReportExportType} returns this
 */
proto.dictionary.ReportExportType.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.ListFieldsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.ListFieldsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.ListFieldsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ListFieldsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tableUuid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    tableId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    tableName: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.ListFieldsRequest}
 */
proto.dictionary.ListFieldsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.ListFieldsRequest;
  return proto.dictionary.ListFieldsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.ListFieldsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.ListFieldsRequest}
 */
proto.dictionary.ListFieldsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableUuid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTableId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.ListFieldsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.ListFieldsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.ListFieldsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ListFieldsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTableUuid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTableId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 page_size = 2;
 * @return {number}
 */
proto.dictionary.ListFieldsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.ListFieldsRequest} returns this
 */
proto.dictionary.ListFieldsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string page_token = 3;
 * @return {string}
 */
proto.dictionary.ListFieldsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ListFieldsRequest} returns this
 */
proto.dictionary.ListFieldsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string table_uuid = 4;
 * @return {string}
 */
proto.dictionary.ListFieldsRequest.prototype.getTableUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ListFieldsRequest} returns this
 */
proto.dictionary.ListFieldsRequest.prototype.setTableUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 table_id = 5;
 * @return {number}
 */
proto.dictionary.ListFieldsRequest.prototype.getTableId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.ListFieldsRequest} returns this
 */
proto.dictionary.ListFieldsRequest.prototype.setTableId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string table_name = 6;
 * @return {string}
 */
proto.dictionary.ListFieldsRequest.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ListFieldsRequest} returns this
 */
proto.dictionary.ListFieldsRequest.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dictionary.ListFieldsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dictionary.ListFieldsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dictionary.ListFieldsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dictionary.ListFieldsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ListFieldsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.dictionary.Field.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dictionary.ListFieldsResponse}
 */
proto.dictionary.ListFieldsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dictionary.ListFieldsResponse;
  return proto.dictionary.ListFieldsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dictionary.ListFieldsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dictionary.ListFieldsResponse}
 */
proto.dictionary.ListFieldsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordCount(value);
      break;
    case 2:
      var value = new proto.dictionary.Field;
      reader.readMessage(value,proto.dictionary.Field.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dictionary.ListFieldsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dictionary.ListFieldsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dictionary.ListFieldsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dictionary.ListFieldsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.dictionary.Field.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 record_count = 1;
 * @return {number}
 */
proto.dictionary.ListFieldsResponse.prototype.getRecordCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dictionary.ListFieldsResponse} returns this
 */
proto.dictionary.ListFieldsResponse.prototype.setRecordCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Field fields = 2;
 * @return {!Array<!proto.dictionary.Field>}
 */
proto.dictionary.ListFieldsResponse.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.dictionary.Field>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dictionary.Field, 2));
};


/**
 * @param {!Array<!proto.dictionary.Field>} value
 * @return {!proto.dictionary.ListFieldsResponse} returns this
*/
proto.dictionary.ListFieldsResponse.prototype.setFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.dictionary.Field=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dictionary.Field}
 */
proto.dictionary.ListFieldsResponse.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.dictionary.Field, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dictionary.ListFieldsResponse} returns this
 */
proto.dictionary.ListFieldsResponse.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};


/**
 * optional string next_page_token = 3;
 * @return {string}
 */
proto.dictionary.ListFieldsResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dictionary.ListFieldsResponse} returns this
 */
proto.dictionary.ListFieldsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.dictionary);
