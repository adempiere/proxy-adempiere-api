// source: proto/payment_print_export.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var proto_base_data_type_pb = require('../proto/base_data_type_pb.js');
goog.object.extend(proto, proto_base_data_type_pb);
var proto_business_pb = require('../proto/business_pb.js');
goog.object.extend(proto, proto_business_pb);
var proto_core_functionality_pb = require('../proto/core_functionality_pb.js');
goog.object.extend(proto, proto_core_functionality_pb);
goog.exportSymbol('proto.payment_print_export.BankAccount', null, global);
goog.exportSymbol('proto.payment_print_export.ConfirmPrintRequest', null, global);
goog.exportSymbol('proto.payment_print_export.ConfirmPrintResponse', null, global);
goog.exportSymbol('proto.payment_print_export.ExportRequest', null, global);
goog.exportSymbol('proto.payment_print_export.ExportResponse', null, global);
goog.exportSymbol('proto.payment_print_export.GetDocumentNoRequest', null, global);
goog.exportSymbol('proto.payment_print_export.GetDocumentNoResponse', null, global);
goog.exportSymbol('proto.payment_print_export.GetPaymentSelectionRequest', null, global);
goog.exportSymbol('proto.payment_print_export.ListPaymentRulesRequest', null, global);
goog.exportSymbol('proto.payment_print_export.ListPaymentSelectionsRequest', null, global);
goog.exportSymbol('proto.payment_print_export.ListPaymentsRequest', null, global);
goog.exportSymbol('proto.payment_print_export.ListPaymentsResponse', null, global);
goog.exportSymbol('proto.payment_print_export.Payment', null, global);
goog.exportSymbol('proto.payment_print_export.PaymentSelection', null, global);
goog.exportSymbol('proto.payment_print_export.PrintRemittanceRequest', null, global);
goog.exportSymbol('proto.payment_print_export.PrintRemittanceResponse', null, global);
goog.exportSymbol('proto.payment_print_export.PrintRequest', null, global);
goog.exportSymbol('proto.payment_print_export.PrintResponse', null, global);
goog.exportSymbol('proto.payment_print_export.ProcessRequest', null, global);
goog.exportSymbol('proto.payment_print_export.ProcessResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.BankAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.BankAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.BankAccount.displayName = 'proto.payment_print_export.BankAccount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.PaymentSelection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.PaymentSelection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.PaymentSelection.displayName = 'proto.payment_print_export.PaymentSelection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.ListPaymentSelectionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.ListPaymentSelectionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.ListPaymentSelectionsRequest.displayName = 'proto.payment_print_export.ListPaymentSelectionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.GetPaymentSelectionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.GetPaymentSelectionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.GetPaymentSelectionRequest.displayName = 'proto.payment_print_export.GetPaymentSelectionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.ListPaymentRulesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.ListPaymentRulesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.ListPaymentRulesRequest.displayName = 'proto.payment_print_export.ListPaymentRulesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.GetDocumentNoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.GetDocumentNoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.GetDocumentNoRequest.displayName = 'proto.payment_print_export.GetDocumentNoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.GetDocumentNoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.GetDocumentNoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.GetDocumentNoResponse.displayName = 'proto.payment_print_export.GetDocumentNoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.ListPaymentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.ListPaymentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.ListPaymentsRequest.displayName = 'proto.payment_print_export.ListPaymentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.Payment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.Payment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.Payment.displayName = 'proto.payment_print_export.Payment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.ListPaymentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.payment_print_export.ListPaymentsResponse.repeatedFields_, null);
};
goog.inherits(proto.payment_print_export.ListPaymentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.ListPaymentsResponse.displayName = 'proto.payment_print_export.ListPaymentsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.ProcessRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.ProcessRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.ProcessRequest.displayName = 'proto.payment_print_export.ProcessRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.ProcessResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.ProcessResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.ProcessResponse.displayName = 'proto.payment_print_export.ProcessResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.ExportRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.ExportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.ExportRequest.displayName = 'proto.payment_print_export.ExportRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.ExportResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.ExportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.ExportResponse.displayName = 'proto.payment_print_export.ExportResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.PrintRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.PrintRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.PrintRequest.displayName = 'proto.payment_print_export.PrintRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.PrintResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.PrintResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.PrintResponse.displayName = 'proto.payment_print_export.PrintResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.ConfirmPrintRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.ConfirmPrintRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.ConfirmPrintRequest.displayName = 'proto.payment_print_export.ConfirmPrintRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.ConfirmPrintResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.ConfirmPrintResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.ConfirmPrintResponse.displayName = 'proto.payment_print_export.ConfirmPrintResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.PrintRemittanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.PrintRemittanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.PrintRemittanceRequest.displayName = 'proto.payment_print_export.PrintRemittanceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.payment_print_export.PrintRemittanceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.payment_print_export.PrintRemittanceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.payment_print_export.PrintRemittanceResponse.displayName = 'proto.payment_print_export.PrintRemittanceResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.BankAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.BankAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.BankAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.BankAccount.toObject = function(includeInstance, msg) {
  var f, obj = {
    uuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    accountNo: jspb.Message.getFieldWithDefault(msg, 3, ""),
    accountName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bankName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    currentBalance: (f = msg.getCurrentBalance()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.BankAccount}
 */
proto.payment_print_export.BankAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.BankAccount;
  return proto.payment_print_export.BankAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.BankAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.BankAccount}
 */
proto.payment_print_export.BankAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountNo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBankName(value);
      break;
    case 6:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setCurrentBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.BankAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.BankAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.BankAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.BankAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAccountNo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAccountName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBankName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCurrentBalance();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
};


/**
 * optional string uuid = 1;
 * @return {string}
 */
proto.payment_print_export.BankAccount.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.BankAccount} returns this
 */
proto.payment_print_export.BankAccount.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.payment_print_export.BankAccount.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.BankAccount} returns this
 */
proto.payment_print_export.BankAccount.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string account_no = 3;
 * @return {string}
 */
proto.payment_print_export.BankAccount.prototype.getAccountNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.BankAccount} returns this
 */
proto.payment_print_export.BankAccount.prototype.setAccountNo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string account_name = 4;
 * @return {string}
 */
proto.payment_print_export.BankAccount.prototype.getAccountName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.BankAccount} returns this
 */
proto.payment_print_export.BankAccount.prototype.setAccountName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string bank_name = 5;
 * @return {string}
 */
proto.payment_print_export.BankAccount.prototype.getBankName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.BankAccount} returns this
 */
proto.payment_print_export.BankAccount.prototype.setBankName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional data.Decimal current_balance = 6;
 * @return {?proto.data.Decimal}
 */
proto.payment_print_export.BankAccount.prototype.getCurrentBalance = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 6));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.payment_print_export.BankAccount} returns this
*/
proto.payment_print_export.BankAccount.prototype.setCurrentBalance = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment_print_export.BankAccount} returns this
 */
proto.payment_print_export.BankAccount.prototype.clearCurrentBalance = function() {
  return this.setCurrentBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment_print_export.BankAccount.prototype.hasCurrentBalance = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.PaymentSelection.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.PaymentSelection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.PaymentSelection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.PaymentSelection.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    documentNo: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bankAccount: (f = msg.getBankAccount()) && proto.payment_print_export.BankAccount.toObject(includeInstance, f),
    paymentAmount: (f = msg.getPaymentAmount()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    paymentQuantity: jspb.Message.getFieldWithDefault(msg, 6, 0),
    currency: (f = msg.getCurrency()) && proto_core_functionality_pb.Currency.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.PaymentSelection}
 */
proto.payment_print_export.PaymentSelection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.PaymentSelection;
  return proto.payment_print_export.PaymentSelection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.PaymentSelection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.PaymentSelection}
 */
proto.payment_print_export.PaymentSelection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentNo(value);
      break;
    case 4:
      var value = new proto.payment_print_export.BankAccount;
      reader.readMessage(value,proto.payment_print_export.BankAccount.deserializeBinaryFromReader);
      msg.setBankAccount(value);
      break;
    case 5:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setPaymentAmount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaymentQuantity(value);
      break;
    case 7:
      var value = new proto_core_functionality_pb.Currency;
      reader.readMessage(value,proto_core_functionality_pb.Currency.deserializeBinaryFromReader);
      msg.setCurrency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.PaymentSelection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.PaymentSelection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.PaymentSelection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.PaymentSelection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDocumentNo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBankAccount();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.payment_print_export.BankAccount.serializeBinaryToWriter
    );
  }
  f = message.getPaymentAmount();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getPaymentQuantity();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getCurrency();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto_core_functionality_pb.Currency.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.payment_print_export.PaymentSelection.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.PaymentSelection} returns this
 */
proto.payment_print_export.PaymentSelection.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.payment_print_export.PaymentSelection.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.PaymentSelection} returns this
 */
proto.payment_print_export.PaymentSelection.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string document_no = 3;
 * @return {string}
 */
proto.payment_print_export.PaymentSelection.prototype.getDocumentNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.PaymentSelection} returns this
 */
proto.payment_print_export.PaymentSelection.prototype.setDocumentNo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional BankAccount bank_account = 4;
 * @return {?proto.payment_print_export.BankAccount}
 */
proto.payment_print_export.PaymentSelection.prototype.getBankAccount = function() {
  return /** @type{?proto.payment_print_export.BankAccount} */ (
    jspb.Message.getWrapperField(this, proto.payment_print_export.BankAccount, 4));
};


/**
 * @param {?proto.payment_print_export.BankAccount|undefined} value
 * @return {!proto.payment_print_export.PaymentSelection} returns this
*/
proto.payment_print_export.PaymentSelection.prototype.setBankAccount = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment_print_export.PaymentSelection} returns this
 */
proto.payment_print_export.PaymentSelection.prototype.clearBankAccount = function() {
  return this.setBankAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment_print_export.PaymentSelection.prototype.hasBankAccount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional data.Decimal payment_amount = 5;
 * @return {?proto.data.Decimal}
 */
proto.payment_print_export.PaymentSelection.prototype.getPaymentAmount = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 5));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.payment_print_export.PaymentSelection} returns this
*/
proto.payment_print_export.PaymentSelection.prototype.setPaymentAmount = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment_print_export.PaymentSelection} returns this
 */
proto.payment_print_export.PaymentSelection.prototype.clearPaymentAmount = function() {
  return this.setPaymentAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment_print_export.PaymentSelection.prototype.hasPaymentAmount = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 payment_quantity = 6;
 * @return {number}
 */
proto.payment_print_export.PaymentSelection.prototype.getPaymentQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.PaymentSelection} returns this
 */
proto.payment_print_export.PaymentSelection.prototype.setPaymentQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional data.Currency currency = 7;
 * @return {?proto.data.Currency}
 */
proto.payment_print_export.PaymentSelection.prototype.getCurrency = function() {
  return /** @type{?proto.data.Currency} */ (
    jspb.Message.getWrapperField(this, proto_core_functionality_pb.Currency, 7));
};


/**
 * @param {?proto.data.Currency|undefined} value
 * @return {!proto.payment_print_export.PaymentSelection} returns this
*/
proto.payment_print_export.PaymentSelection.prototype.setCurrency = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment_print_export.PaymentSelection} returns this
 */
proto.payment_print_export.PaymentSelection.prototype.clearCurrency = function() {
  return this.setCurrency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment_print_export.PaymentSelection.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.ListPaymentSelectionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.ListPaymentSelectionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.ListPaymentSelectionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ListPaymentSelectionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    searchValue: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.ListPaymentSelectionsRequest}
 */
proto.payment_print_export.ListPaymentSelectionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.ListPaymentSelectionsRequest;
  return proto.payment_print_export.ListPaymentSelectionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.ListPaymentSelectionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.ListPaymentSelectionsRequest}
 */
proto.payment_print_export.ListPaymentSelectionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.ListPaymentSelectionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.ListPaymentSelectionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.ListPaymentSelectionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ListPaymentSelectionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSearchValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.payment_print_export.ListPaymentSelectionsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.ListPaymentSelectionsRequest} returns this
 */
proto.payment_print_export.ListPaymentSelectionsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.payment_print_export.ListPaymentSelectionsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.ListPaymentSelectionsRequest} returns this
 */
proto.payment_print_export.ListPaymentSelectionsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string search_value = 3;
 * @return {string}
 */
proto.payment_print_export.ListPaymentSelectionsRequest.prototype.getSearchValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.ListPaymentSelectionsRequest} returns this
 */
proto.payment_print_export.ListPaymentSelectionsRequest.prototype.setSearchValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.GetPaymentSelectionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.GetPaymentSelectionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.GetPaymentSelectionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.GetPaymentSelectionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.GetPaymentSelectionRequest}
 */
proto.payment_print_export.GetPaymentSelectionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.GetPaymentSelectionRequest;
  return proto.payment_print_export.GetPaymentSelectionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.GetPaymentSelectionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.GetPaymentSelectionRequest}
 */
proto.payment_print_export.GetPaymentSelectionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.GetPaymentSelectionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.GetPaymentSelectionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.GetPaymentSelectionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.GetPaymentSelectionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.payment_print_export.GetPaymentSelectionRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.GetPaymentSelectionRequest} returns this
 */
proto.payment_print_export.GetPaymentSelectionRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.payment_print_export.GetPaymentSelectionRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.GetPaymentSelectionRequest} returns this
 */
proto.payment_print_export.GetPaymentSelectionRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.ListPaymentRulesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.ListPaymentRulesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.ListPaymentRulesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ListPaymentRulesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    searchValue: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paymentSelectionId: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.ListPaymentRulesRequest}
 */
proto.payment_print_export.ListPaymentRulesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.ListPaymentRulesRequest;
  return proto.payment_print_export.ListPaymentRulesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.ListPaymentRulesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.ListPaymentRulesRequest}
 */
proto.payment_print_export.ListPaymentRulesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaymentSelectionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.ListPaymentRulesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.ListPaymentRulesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.ListPaymentRulesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ListPaymentRulesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSearchValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPaymentSelectionId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.payment_print_export.ListPaymentRulesRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.ListPaymentRulesRequest} returns this
 */
proto.payment_print_export.ListPaymentRulesRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.payment_print_export.ListPaymentRulesRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.ListPaymentRulesRequest} returns this
 */
proto.payment_print_export.ListPaymentRulesRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string search_value = 3;
 * @return {string}
 */
proto.payment_print_export.ListPaymentRulesRequest.prototype.getSearchValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.ListPaymentRulesRequest} returns this
 */
proto.payment_print_export.ListPaymentRulesRequest.prototype.setSearchValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 payment_selection_id = 4;
 * @return {number}
 */
proto.payment_print_export.ListPaymentRulesRequest.prototype.getPaymentSelectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.ListPaymentRulesRequest} returns this
 */
proto.payment_print_export.ListPaymentRulesRequest.prototype.setPaymentSelectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.GetDocumentNoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.GetDocumentNoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.GetDocumentNoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.GetDocumentNoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bankAccountId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    paymentRule: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.GetDocumentNoRequest}
 */
proto.payment_print_export.GetDocumentNoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.GetDocumentNoRequest;
  return proto.payment_print_export.GetDocumentNoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.GetDocumentNoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.GetDocumentNoRequest}
 */
proto.payment_print_export.GetDocumentNoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBankAccountId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentRule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.GetDocumentNoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.GetDocumentNoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.GetDocumentNoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.GetDocumentNoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBankAccountId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPaymentRule();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 bank_account_id = 1;
 * @return {number}
 */
proto.payment_print_export.GetDocumentNoRequest.prototype.getBankAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.GetDocumentNoRequest} returns this
 */
proto.payment_print_export.GetDocumentNoRequest.prototype.setBankAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string payment_rule = 2;
 * @return {string}
 */
proto.payment_print_export.GetDocumentNoRequest.prototype.getPaymentRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.GetDocumentNoRequest} returns this
 */
proto.payment_print_export.GetDocumentNoRequest.prototype.setPaymentRule = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.GetDocumentNoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.GetDocumentNoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.GetDocumentNoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.GetDocumentNoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    documentNo: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.GetDocumentNoResponse}
 */
proto.payment_print_export.GetDocumentNoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.GetDocumentNoResponse;
  return proto.payment_print_export.GetDocumentNoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.GetDocumentNoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.GetDocumentNoResponse}
 */
proto.payment_print_export.GetDocumentNoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDocumentNo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.GetDocumentNoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.GetDocumentNoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.GetDocumentNoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.GetDocumentNoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocumentNo();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 document_no = 1;
 * @return {number}
 */
proto.payment_print_export.GetDocumentNoResponse.prototype.getDocumentNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.GetDocumentNoResponse} returns this
 */
proto.payment_print_export.GetDocumentNoResponse.prototype.setDocumentNo = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.ListPaymentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.ListPaymentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.ListPaymentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ListPaymentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    searchValue: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paymentSelectionId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    paymentRule: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.ListPaymentsRequest}
 */
proto.payment_print_export.ListPaymentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.ListPaymentsRequest;
  return proto.payment_print_export.ListPaymentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.ListPaymentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.ListPaymentsRequest}
 */
proto.payment_print_export.ListPaymentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaymentSelectionId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentRule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.ListPaymentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.ListPaymentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.ListPaymentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ListPaymentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSearchValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPaymentSelectionId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPaymentRule();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.payment_print_export.ListPaymentsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.ListPaymentsRequest} returns this
 */
proto.payment_print_export.ListPaymentsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.payment_print_export.ListPaymentsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.ListPaymentsRequest} returns this
 */
proto.payment_print_export.ListPaymentsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string search_value = 3;
 * @return {string}
 */
proto.payment_print_export.ListPaymentsRequest.prototype.getSearchValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.ListPaymentsRequest} returns this
 */
proto.payment_print_export.ListPaymentsRequest.prototype.setSearchValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 payment_selection_id = 4;
 * @return {number}
 */
proto.payment_print_export.ListPaymentsRequest.prototype.getPaymentSelectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.ListPaymentsRequest} returns this
 */
proto.payment_print_export.ListPaymentsRequest.prototype.setPaymentSelectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string payment_rule = 5;
 * @return {string}
 */
proto.payment_print_export.ListPaymentsRequest.prototype.getPaymentRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.ListPaymentsRequest} returns this
 */
proto.payment_print_export.ListPaymentsRequest.prototype.setPaymentRule = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.Payment.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.Payment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.Payment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.Payment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    documentNo: jspb.Message.getFieldWithDefault(msg, 3, ""),
    vendorId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    vendorUuid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    vendorTaxId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    vendorName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    grandTotal: (f = msg.getGrandTotal()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    overUnderAmount: (f = msg.getOverUnderAmount()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    paymentAmount: (f = msg.getPaymentAmount()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    openAmount: (f = msg.getOpenAmount()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f),
    finalBalance: (f = msg.getFinalBalance()) && proto_base_data_type_pb.Decimal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.Payment}
 */
proto.payment_print_export.Payment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.Payment;
  return proto.payment_print_export.Payment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.Payment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.Payment}
 */
proto.payment_print_export.Payment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentNo(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVendorId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setVendorUuid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVendorTaxId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVendorName(value);
      break;
    case 8:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setGrandTotal(value);
      break;
    case 9:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setOverUnderAmount(value);
      break;
    case 10:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setPaymentAmount(value);
      break;
    case 11:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setOpenAmount(value);
      break;
    case 12:
      var value = new proto_base_data_type_pb.Decimal;
      reader.readMessage(value,proto_base_data_type_pb.Decimal.deserializeBinaryFromReader);
      msg.setFinalBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.Payment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.Payment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.Payment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.Payment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDocumentNo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVendorId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getVendorUuid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getVendorTaxId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getVendorName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getGrandTotal();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getOverUnderAmount();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getPaymentAmount();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getOpenAmount();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
  f = message.getFinalBalance();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto_base_data_type_pb.Decimal.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.payment_print_export.Payment.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.Payment} returns this
 */
proto.payment_print_export.Payment.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.payment_print_export.Payment.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.Payment} returns this
 */
proto.payment_print_export.Payment.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string document_no = 3;
 * @return {string}
 */
proto.payment_print_export.Payment.prototype.getDocumentNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.Payment} returns this
 */
proto.payment_print_export.Payment.prototype.setDocumentNo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 vendor_id = 4;
 * @return {number}
 */
proto.payment_print_export.Payment.prototype.getVendorId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.Payment} returns this
 */
proto.payment_print_export.Payment.prototype.setVendorId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string vendor_uuid = 5;
 * @return {string}
 */
proto.payment_print_export.Payment.prototype.getVendorUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.Payment} returns this
 */
proto.payment_print_export.Payment.prototype.setVendorUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string vendor_tax_id = 6;
 * @return {string}
 */
proto.payment_print_export.Payment.prototype.getVendorTaxId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.Payment} returns this
 */
proto.payment_print_export.Payment.prototype.setVendorTaxId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string vendor_name = 7;
 * @return {string}
 */
proto.payment_print_export.Payment.prototype.getVendorName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.Payment} returns this
 */
proto.payment_print_export.Payment.prototype.setVendorName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional data.Decimal grand_total = 8;
 * @return {?proto.data.Decimal}
 */
proto.payment_print_export.Payment.prototype.getGrandTotal = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 8));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.payment_print_export.Payment} returns this
*/
proto.payment_print_export.Payment.prototype.setGrandTotal = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment_print_export.Payment} returns this
 */
proto.payment_print_export.Payment.prototype.clearGrandTotal = function() {
  return this.setGrandTotal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment_print_export.Payment.prototype.hasGrandTotal = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional data.Decimal over_under_amount = 9;
 * @return {?proto.data.Decimal}
 */
proto.payment_print_export.Payment.prototype.getOverUnderAmount = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 9));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.payment_print_export.Payment} returns this
*/
proto.payment_print_export.Payment.prototype.setOverUnderAmount = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment_print_export.Payment} returns this
 */
proto.payment_print_export.Payment.prototype.clearOverUnderAmount = function() {
  return this.setOverUnderAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment_print_export.Payment.prototype.hasOverUnderAmount = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional data.Decimal payment_amount = 10;
 * @return {?proto.data.Decimal}
 */
proto.payment_print_export.Payment.prototype.getPaymentAmount = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 10));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.payment_print_export.Payment} returns this
*/
proto.payment_print_export.Payment.prototype.setPaymentAmount = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment_print_export.Payment} returns this
 */
proto.payment_print_export.Payment.prototype.clearPaymentAmount = function() {
  return this.setPaymentAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment_print_export.Payment.prototype.hasPaymentAmount = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional data.Decimal open_amount = 11;
 * @return {?proto.data.Decimal}
 */
proto.payment_print_export.Payment.prototype.getOpenAmount = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 11));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.payment_print_export.Payment} returns this
*/
proto.payment_print_export.Payment.prototype.setOpenAmount = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment_print_export.Payment} returns this
 */
proto.payment_print_export.Payment.prototype.clearOpenAmount = function() {
  return this.setOpenAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment_print_export.Payment.prototype.hasOpenAmount = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional data.Decimal final_balance = 12;
 * @return {?proto.data.Decimal}
 */
proto.payment_print_export.Payment.prototype.getFinalBalance = function() {
  return /** @type{?proto.data.Decimal} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.Decimal, 12));
};


/**
 * @param {?proto.data.Decimal|undefined} value
 * @return {!proto.payment_print_export.Payment} returns this
*/
proto.payment_print_export.Payment.prototype.setFinalBalance = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment_print_export.Payment} returns this
 */
proto.payment_print_export.Payment.prototype.clearFinalBalance = function() {
  return this.setFinalBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment_print_export.Payment.prototype.hasFinalBalance = function() {
  return jspb.Message.getField(this, 12) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.payment_print_export.ListPaymentsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.ListPaymentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.ListPaymentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.ListPaymentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ListPaymentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.payment_print_export.Payment.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.ListPaymentsResponse}
 */
proto.payment_print_export.ListPaymentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.ListPaymentsResponse;
  return proto.payment_print_export.ListPaymentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.ListPaymentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.ListPaymentsResponse}
 */
proto.payment_print_export.ListPaymentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordCount(value);
      break;
    case 2:
      var value = new proto.payment_print_export.Payment;
      reader.readMessage(value,proto.payment_print_export.Payment.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.ListPaymentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.ListPaymentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.ListPaymentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ListPaymentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.payment_print_export.Payment.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 record_count = 1;
 * @return {number}
 */
proto.payment_print_export.ListPaymentsResponse.prototype.getRecordCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.ListPaymentsResponse} returns this
 */
proto.payment_print_export.ListPaymentsResponse.prototype.setRecordCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Payment records = 2;
 * @return {!Array<!proto.payment_print_export.Payment>}
 */
proto.payment_print_export.ListPaymentsResponse.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.payment_print_export.Payment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.payment_print_export.Payment, 2));
};


/**
 * @param {!Array<!proto.payment_print_export.Payment>} value
 * @return {!proto.payment_print_export.ListPaymentsResponse} returns this
*/
proto.payment_print_export.ListPaymentsResponse.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.payment_print_export.Payment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.payment_print_export.Payment}
 */
proto.payment_print_export.ListPaymentsResponse.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.payment_print_export.Payment, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.payment_print_export.ListPaymentsResponse} returns this
 */
proto.payment_print_export.ListPaymentsResponse.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};


/**
 * optional string next_page_token = 3;
 * @return {string}
 */
proto.payment_print_export.ListPaymentsResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.ListPaymentsResponse} returns this
 */
proto.payment_print_export.ListPaymentsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.ProcessRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.ProcessRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.ProcessRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ProcessRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentSelectionId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    paymentRule: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bankAccountId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    documentNo: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.ProcessRequest}
 */
proto.payment_print_export.ProcessRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.ProcessRequest;
  return proto.payment_print_export.ProcessRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.ProcessRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.ProcessRequest}
 */
proto.payment_print_export.ProcessRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaymentSelectionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentRule(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBankAccountId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDocumentNo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.ProcessRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.ProcessRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.ProcessRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ProcessRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentSelectionId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPaymentRule();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBankAccountId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDocumentNo();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 payment_selection_id = 1;
 * @return {number}
 */
proto.payment_print_export.ProcessRequest.prototype.getPaymentSelectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.ProcessRequest} returns this
 */
proto.payment_print_export.ProcessRequest.prototype.setPaymentSelectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string payment_rule = 2;
 * @return {string}
 */
proto.payment_print_export.ProcessRequest.prototype.getPaymentRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.ProcessRequest} returns this
 */
proto.payment_print_export.ProcessRequest.prototype.setPaymentRule = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 bank_account_id = 3;
 * @return {number}
 */
proto.payment_print_export.ProcessRequest.prototype.getBankAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.ProcessRequest} returns this
 */
proto.payment_print_export.ProcessRequest.prototype.setBankAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 document_no = 4;
 * @return {number}
 */
proto.payment_print_export.ProcessRequest.prototype.getDocumentNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.ProcessRequest} returns this
 */
proto.payment_print_export.ProcessRequest.prototype.setDocumentNo = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.ProcessResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.ProcessResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.ProcessResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ProcessResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportOutput: (f = msg.getReportOutput()) && proto_base_data_type_pb.ReportOutput.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.ProcessResponse}
 */
proto.payment_print_export.ProcessResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.ProcessResponse;
  return proto.payment_print_export.ProcessResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.ProcessResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.ProcessResponse}
 */
proto.payment_print_export.ProcessResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_base_data_type_pb.ReportOutput;
      reader.readMessage(value,proto_base_data_type_pb.ReportOutput.deserializeBinaryFromReader);
      msg.setReportOutput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.ProcessResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.ProcessResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.ProcessResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ProcessResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportOutput();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_base_data_type_pb.ReportOutput.serializeBinaryToWriter
    );
  }
};


/**
 * optional data.ReportOutput report_output = 1;
 * @return {?proto.data.ReportOutput}
 */
proto.payment_print_export.ProcessResponse.prototype.getReportOutput = function() {
  return /** @type{?proto.data.ReportOutput} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.ReportOutput, 1));
};


/**
 * @param {?proto.data.ReportOutput|undefined} value
 * @return {!proto.payment_print_export.ProcessResponse} returns this
*/
proto.payment_print_export.ProcessResponse.prototype.setReportOutput = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment_print_export.ProcessResponse} returns this
 */
proto.payment_print_export.ProcessResponse.prototype.clearReportOutput = function() {
  return this.setReportOutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment_print_export.ProcessResponse.prototype.hasReportOutput = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.ExportRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.ExportRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.ExportRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ExportRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentSelectionId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    paymentRule: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bankAccountId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    documentNo: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.ExportRequest}
 */
proto.payment_print_export.ExportRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.ExportRequest;
  return proto.payment_print_export.ExportRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.ExportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.ExportRequest}
 */
proto.payment_print_export.ExportRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaymentSelectionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentRule(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBankAccountId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDocumentNo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.ExportRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.ExportRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.ExportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ExportRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentSelectionId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPaymentRule();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBankAccountId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDocumentNo();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 payment_selection_id = 1;
 * @return {number}
 */
proto.payment_print_export.ExportRequest.prototype.getPaymentSelectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.ExportRequest} returns this
 */
proto.payment_print_export.ExportRequest.prototype.setPaymentSelectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string payment_rule = 2;
 * @return {string}
 */
proto.payment_print_export.ExportRequest.prototype.getPaymentRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.ExportRequest} returns this
 */
proto.payment_print_export.ExportRequest.prototype.setPaymentRule = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 bank_account_id = 3;
 * @return {number}
 */
proto.payment_print_export.ExportRequest.prototype.getBankAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.ExportRequest} returns this
 */
proto.payment_print_export.ExportRequest.prototype.setBankAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 document_no = 4;
 * @return {number}
 */
proto.payment_print_export.ExportRequest.prototype.getDocumentNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.ExportRequest} returns this
 */
proto.payment_print_export.ExportRequest.prototype.setDocumentNo = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.ExportResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.ExportResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.ExportResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ExportResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportOutput: (f = msg.getReportOutput()) && proto_base_data_type_pb.ReportOutput.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.ExportResponse}
 */
proto.payment_print_export.ExportResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.ExportResponse;
  return proto.payment_print_export.ExportResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.ExportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.ExportResponse}
 */
proto.payment_print_export.ExportResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_base_data_type_pb.ReportOutput;
      reader.readMessage(value,proto_base_data_type_pb.ReportOutput.deserializeBinaryFromReader);
      msg.setReportOutput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.ExportResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.ExportResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.ExportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ExportResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportOutput();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_base_data_type_pb.ReportOutput.serializeBinaryToWriter
    );
  }
};


/**
 * optional data.ReportOutput report_output = 1;
 * @return {?proto.data.ReportOutput}
 */
proto.payment_print_export.ExportResponse.prototype.getReportOutput = function() {
  return /** @type{?proto.data.ReportOutput} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.ReportOutput, 1));
};


/**
 * @param {?proto.data.ReportOutput|undefined} value
 * @return {!proto.payment_print_export.ExportResponse} returns this
*/
proto.payment_print_export.ExportResponse.prototype.setReportOutput = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment_print_export.ExportResponse} returns this
 */
proto.payment_print_export.ExportResponse.prototype.clearReportOutput = function() {
  return this.setReportOutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment_print_export.ExportResponse.prototype.hasReportOutput = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.PrintRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.PrintRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.PrintRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.PrintRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentSelectionId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    paymentRule: jspb.Message.getFieldWithDefault(msg, 2, ""),
    documentNo: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.PrintRequest}
 */
proto.payment_print_export.PrintRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.PrintRequest;
  return proto.payment_print_export.PrintRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.PrintRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.PrintRequest}
 */
proto.payment_print_export.PrintRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaymentSelectionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentRule(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDocumentNo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.PrintRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.PrintRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.PrintRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.PrintRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentSelectionId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPaymentRule();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDocumentNo();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 payment_selection_id = 1;
 * @return {number}
 */
proto.payment_print_export.PrintRequest.prototype.getPaymentSelectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.PrintRequest} returns this
 */
proto.payment_print_export.PrintRequest.prototype.setPaymentSelectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string payment_rule = 2;
 * @return {string}
 */
proto.payment_print_export.PrintRequest.prototype.getPaymentRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.PrintRequest} returns this
 */
proto.payment_print_export.PrintRequest.prototype.setPaymentRule = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 document_no = 3;
 * @return {number}
 */
proto.payment_print_export.PrintRequest.prototype.getDocumentNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.PrintRequest} returns this
 */
proto.payment_print_export.PrintRequest.prototype.setDocumentNo = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.PrintResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.PrintResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.PrintResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.PrintResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportOutput: (f = msg.getReportOutput()) && proto_base_data_type_pb.ReportOutput.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.PrintResponse}
 */
proto.payment_print_export.PrintResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.PrintResponse;
  return proto.payment_print_export.PrintResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.PrintResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.PrintResponse}
 */
proto.payment_print_export.PrintResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_base_data_type_pb.ReportOutput;
      reader.readMessage(value,proto_base_data_type_pb.ReportOutput.deserializeBinaryFromReader);
      msg.setReportOutput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.PrintResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.PrintResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.PrintResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.PrintResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportOutput();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_base_data_type_pb.ReportOutput.serializeBinaryToWriter
    );
  }
};


/**
 * optional data.ReportOutput report_output = 1;
 * @return {?proto.data.ReportOutput}
 */
proto.payment_print_export.PrintResponse.prototype.getReportOutput = function() {
  return /** @type{?proto.data.ReportOutput} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.ReportOutput, 1));
};


/**
 * @param {?proto.data.ReportOutput|undefined} value
 * @return {!proto.payment_print_export.PrintResponse} returns this
*/
proto.payment_print_export.PrintResponse.prototype.setReportOutput = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment_print_export.PrintResponse} returns this
 */
proto.payment_print_export.PrintResponse.prototype.clearReportOutput = function() {
  return this.setReportOutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment_print_export.PrintResponse.prototype.hasReportOutput = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.ConfirmPrintRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.ConfirmPrintRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.ConfirmPrintRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ConfirmPrintRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentSelectionId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    paymentRule: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bankAccountId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    documentNo: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.ConfirmPrintRequest}
 */
proto.payment_print_export.ConfirmPrintRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.ConfirmPrintRequest;
  return proto.payment_print_export.ConfirmPrintRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.ConfirmPrintRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.ConfirmPrintRequest}
 */
proto.payment_print_export.ConfirmPrintRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaymentSelectionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentRule(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBankAccountId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDocumentNo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.ConfirmPrintRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.ConfirmPrintRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.ConfirmPrintRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ConfirmPrintRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentSelectionId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPaymentRule();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBankAccountId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDocumentNo();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 payment_selection_id = 1;
 * @return {number}
 */
proto.payment_print_export.ConfirmPrintRequest.prototype.getPaymentSelectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.ConfirmPrintRequest} returns this
 */
proto.payment_print_export.ConfirmPrintRequest.prototype.setPaymentSelectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string payment_rule = 2;
 * @return {string}
 */
proto.payment_print_export.ConfirmPrintRequest.prototype.getPaymentRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.ConfirmPrintRequest} returns this
 */
proto.payment_print_export.ConfirmPrintRequest.prototype.setPaymentRule = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 bank_account_id = 3;
 * @return {number}
 */
proto.payment_print_export.ConfirmPrintRequest.prototype.getBankAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.ConfirmPrintRequest} returns this
 */
proto.payment_print_export.ConfirmPrintRequest.prototype.setBankAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 document_no = 4;
 * @return {number}
 */
proto.payment_print_export.ConfirmPrintRequest.prototype.getDocumentNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.ConfirmPrintRequest} returns this
 */
proto.payment_print_export.ConfirmPrintRequest.prototype.setDocumentNo = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.ConfirmPrintResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.ConfirmPrintResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.ConfirmPrintResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ConfirmPrintResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    lastDocumentNo: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.ConfirmPrintResponse}
 */
proto.payment_print_export.ConfirmPrintResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.ConfirmPrintResponse;
  return proto.payment_print_export.ConfirmPrintResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.ConfirmPrintResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.ConfirmPrintResponse}
 */
proto.payment_print_export.ConfirmPrintResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLastDocumentNo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.ConfirmPrintResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.ConfirmPrintResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.ConfirmPrintResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.ConfirmPrintResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLastDocumentNo();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 last_document_no = 1;
 * @return {number}
 */
proto.payment_print_export.ConfirmPrintResponse.prototype.getLastDocumentNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.ConfirmPrintResponse} returns this
 */
proto.payment_print_export.ConfirmPrintResponse.prototype.setLastDocumentNo = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.PrintRemittanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.PrintRemittanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.PrintRemittanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.PrintRemittanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentSelectionId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    paymentRule: jspb.Message.getFieldWithDefault(msg, 2, ""),
    documentNo: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.PrintRemittanceRequest}
 */
proto.payment_print_export.PrintRemittanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.PrintRemittanceRequest;
  return proto.payment_print_export.PrintRemittanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.PrintRemittanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.PrintRemittanceRequest}
 */
proto.payment_print_export.PrintRemittanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaymentSelectionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentRule(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDocumentNo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.PrintRemittanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.PrintRemittanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.PrintRemittanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.PrintRemittanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentSelectionId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPaymentRule();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDocumentNo();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 payment_selection_id = 1;
 * @return {number}
 */
proto.payment_print_export.PrintRemittanceRequest.prototype.getPaymentSelectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.PrintRemittanceRequest} returns this
 */
proto.payment_print_export.PrintRemittanceRequest.prototype.setPaymentSelectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string payment_rule = 2;
 * @return {string}
 */
proto.payment_print_export.PrintRemittanceRequest.prototype.getPaymentRule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.payment_print_export.PrintRemittanceRequest} returns this
 */
proto.payment_print_export.PrintRemittanceRequest.prototype.setPaymentRule = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 document_no = 3;
 * @return {number}
 */
proto.payment_print_export.PrintRemittanceRequest.prototype.getDocumentNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.payment_print_export.PrintRemittanceRequest} returns this
 */
proto.payment_print_export.PrintRemittanceRequest.prototype.setDocumentNo = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.payment_print_export.PrintRemittanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.payment_print_export.PrintRemittanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.payment_print_export.PrintRemittanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.PrintRemittanceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportOutput: (f = msg.getReportOutput()) && proto_base_data_type_pb.ReportOutput.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.payment_print_export.PrintRemittanceResponse}
 */
proto.payment_print_export.PrintRemittanceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.payment_print_export.PrintRemittanceResponse;
  return proto.payment_print_export.PrintRemittanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.payment_print_export.PrintRemittanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.payment_print_export.PrintRemittanceResponse}
 */
proto.payment_print_export.PrintRemittanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_base_data_type_pb.ReportOutput;
      reader.readMessage(value,proto_base_data_type_pb.ReportOutput.deserializeBinaryFromReader);
      msg.setReportOutput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.payment_print_export.PrintRemittanceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.payment_print_export.PrintRemittanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.payment_print_export.PrintRemittanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.payment_print_export.PrintRemittanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportOutput();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_base_data_type_pb.ReportOutput.serializeBinaryToWriter
    );
  }
};


/**
 * optional data.ReportOutput report_output = 1;
 * @return {?proto.data.ReportOutput}
 */
proto.payment_print_export.PrintRemittanceResponse.prototype.getReportOutput = function() {
  return /** @type{?proto.data.ReportOutput} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.ReportOutput, 1));
};


/**
 * @param {?proto.data.ReportOutput|undefined} value
 * @return {!proto.payment_print_export.PrintRemittanceResponse} returns this
*/
proto.payment_print_export.PrintRemittanceResponse.prototype.setReportOutput = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.payment_print_export.PrintRemittanceResponse} returns this
 */
proto.payment_print_export.PrintRemittanceResponse.prototype.clearReportOutput = function() {
  return this.setReportOutput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.payment_print_export.PrintRemittanceResponse.prototype.hasReportOutput = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.payment_print_export);
