// source: proto/workflow.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var proto_base_data_type_pb = require('../proto/base_data_type_pb.js');
goog.object.extend(proto, proto_base_data_type_pb);
goog.exportSymbol('proto.workflow.Action', null, global);
goog.exportSymbol('proto.workflow.ConditionType', null, global);
goog.exportSymbol('proto.workflow.DurationUnit', null, global);
goog.exportSymbol('proto.workflow.EventType', null, global);
goog.exportSymbol('proto.workflow.ForwardRequest', null, global);
goog.exportSymbol('proto.workflow.ListDocumentActionsRequest', null, global);
goog.exportSymbol('proto.workflow.ListDocumentActionsResponse', null, global);
goog.exportSymbol('proto.workflow.ListDocumentStatusesRequest', null, global);
goog.exportSymbol('proto.workflow.ListDocumentStatusesResponse', null, global);
goog.exportSymbol('proto.workflow.ListWorkflowActivitiesRequest', null, global);
goog.exportSymbol('proto.workflow.ListWorkflowActivitiesResponse', null, global);
goog.exportSymbol('proto.workflow.ListWorkflowsRequest', null, global);
goog.exportSymbol('proto.workflow.ListWorkflowsResponse', null, global);
goog.exportSymbol('proto.workflow.Operation', null, global);
goog.exportSymbol('proto.workflow.Priority', null, global);
goog.exportSymbol('proto.workflow.ProcessRequest', null, global);
goog.exportSymbol('proto.workflow.PublishStatus', null, global);
goog.exportSymbol('proto.workflow.RunDocumentActionRequest', null, global);
goog.exportSymbol('proto.workflow.WorkflowActivity', null, global);
goog.exportSymbol('proto.workflow.WorkflowCondition', null, global);
goog.exportSymbol('proto.workflow.WorkflowDefinition', null, global);
goog.exportSymbol('proto.workflow.WorkflowDefinitionRequest', null, global);
goog.exportSymbol('proto.workflow.WorkflowEvent', null, global);
goog.exportSymbol('proto.workflow.WorkflowNode', null, global);
goog.exportSymbol('proto.workflow.WorkflowProcess', null, global);
goog.exportSymbol('proto.workflow.WorkflowState', null, global);
goog.exportSymbol('proto.workflow.WorkflowTransition', null, global);
goog.exportSymbol('proto.workflow.ZoomWindow', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.WorkflowDefinitionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow.WorkflowDefinitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.WorkflowDefinitionRequest.displayName = 'proto.workflow.WorkflowDefinitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.ListWorkflowsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow.ListWorkflowsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.ListWorkflowsRequest.displayName = 'proto.workflow.ListWorkflowsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.ListWorkflowsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow.ListWorkflowsResponse.repeatedFields_, null);
};
goog.inherits(proto.workflow.ListWorkflowsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.ListWorkflowsResponse.displayName = 'proto.workflow.ListWorkflowsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.WorkflowDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow.WorkflowDefinition.repeatedFields_, null);
};
goog.inherits(proto.workflow.WorkflowDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.WorkflowDefinition.displayName = 'proto.workflow.WorkflowDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.WorkflowNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow.WorkflowNode.repeatedFields_, null);
};
goog.inherits(proto.workflow.WorkflowNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.WorkflowNode.displayName = 'proto.workflow.WorkflowNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.WorkflowTransition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow.WorkflowTransition.repeatedFields_, null);
};
goog.inherits(proto.workflow.WorkflowTransition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.WorkflowTransition.displayName = 'proto.workflow.WorkflowTransition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.WorkflowCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow.WorkflowCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.WorkflowCondition.displayName = 'proto.workflow.WorkflowCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.ListDocumentActionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow.ListDocumentActionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.ListDocumentActionsRequest.displayName = 'proto.workflow.ListDocumentActionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.ListDocumentActionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow.ListDocumentActionsResponse.repeatedFields_, null);
};
goog.inherits(proto.workflow.ListDocumentActionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.ListDocumentActionsResponse.displayName = 'proto.workflow.ListDocumentActionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.ListDocumentStatusesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow.ListDocumentStatusesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.ListDocumentStatusesRequest.displayName = 'proto.workflow.ListDocumentStatusesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.ListDocumentStatusesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow.ListDocumentStatusesResponse.repeatedFields_, null);
};
goog.inherits(proto.workflow.ListDocumentStatusesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.ListDocumentStatusesResponse.displayName = 'proto.workflow.ListDocumentStatusesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.ListWorkflowActivitiesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow.ListWorkflowActivitiesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.ListWorkflowActivitiesRequest.displayName = 'proto.workflow.ListWorkflowActivitiesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.ListWorkflowActivitiesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow.ListWorkflowActivitiesResponse.repeatedFields_, null);
};
goog.inherits(proto.workflow.ListWorkflowActivitiesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.ListWorkflowActivitiesResponse.displayName = 'proto.workflow.ListWorkflowActivitiesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.ZoomWindow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow.ZoomWindow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.ZoomWindow.displayName = 'proto.workflow.ZoomWindow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.WorkflowActivity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow.WorkflowActivity.repeatedFields_, null);
};
goog.inherits(proto.workflow.WorkflowActivity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.WorkflowActivity.displayName = 'proto.workflow.WorkflowActivity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.WorkflowProcess = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workflow.WorkflowProcess.repeatedFields_, null);
};
goog.inherits(proto.workflow.WorkflowProcess, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.WorkflowProcess.displayName = 'proto.workflow.WorkflowProcess';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.WorkflowEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow.WorkflowEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.WorkflowEvent.displayName = 'proto.workflow.WorkflowEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.RunDocumentActionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow.RunDocumentActionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.RunDocumentActionRequest.displayName = 'proto.workflow.RunDocumentActionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.ProcessRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow.ProcessRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.ProcessRequest.displayName = 'proto.workflow.ProcessRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workflow.ForwardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workflow.ForwardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workflow.ForwardRequest.displayName = 'proto.workflow.ForwardRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.WorkflowDefinitionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.WorkflowDefinitionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.WorkflowDefinitionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.WorkflowDefinitionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.WorkflowDefinitionRequest}
 */
proto.workflow.WorkflowDefinitionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.WorkflowDefinitionRequest;
  return proto.workflow.WorkflowDefinitionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.WorkflowDefinitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.WorkflowDefinitionRequest}
 */
proto.workflow.WorkflowDefinitionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.WorkflowDefinitionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.WorkflowDefinitionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.WorkflowDefinitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.WorkflowDefinitionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.workflow.WorkflowDefinitionRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowDefinitionRequest} returns this
 */
proto.workflow.WorkflowDefinitionRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string uuid = 3;
 * @return {string}
 */
proto.workflow.WorkflowDefinitionRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowDefinitionRequest} returns this
 */
proto.workflow.WorkflowDefinitionRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.ListWorkflowsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.ListWorkflowsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.ListWorkflowsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ListWorkflowsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.ListWorkflowsRequest}
 */
proto.workflow.ListWorkflowsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.ListWorkflowsRequest;
  return proto.workflow.ListWorkflowsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.ListWorkflowsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.ListWorkflowsRequest}
 */
proto.workflow.ListWorkflowsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.ListWorkflowsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.ListWorkflowsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.ListWorkflowsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ListWorkflowsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string table_name = 2;
 * @return {string}
 */
proto.workflow.ListWorkflowsRequest.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListWorkflowsRequest} returns this
 */
proto.workflow.ListWorkflowsRequest.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 page_size = 4;
 * @return {number}
 */
proto.workflow.ListWorkflowsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.ListWorkflowsRequest} returns this
 */
proto.workflow.ListWorkflowsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string page_token = 5;
 * @return {string}
 */
proto.workflow.ListWorkflowsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListWorkflowsRequest} returns this
 */
proto.workflow.ListWorkflowsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow.ListWorkflowsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.ListWorkflowsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.ListWorkflowsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.ListWorkflowsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ListWorkflowsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    workflowsList: jspb.Message.toObjectList(msg.getWorkflowsList(),
    proto.workflow.WorkflowDefinition.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.ListWorkflowsResponse}
 */
proto.workflow.ListWorkflowsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.ListWorkflowsResponse;
  return proto.workflow.ListWorkflowsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.ListWorkflowsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.ListWorkflowsResponse}
 */
proto.workflow.ListWorkflowsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordCount(value);
      break;
    case 2:
      var value = new proto.workflow.WorkflowDefinition;
      reader.readMessage(value,proto.workflow.WorkflowDefinition.deserializeBinaryFromReader);
      msg.addWorkflows(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.ListWorkflowsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.ListWorkflowsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.ListWorkflowsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ListWorkflowsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getWorkflowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.workflow.WorkflowDefinition.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 record_count = 1;
 * @return {number}
 */
proto.workflow.ListWorkflowsResponse.prototype.getRecordCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.ListWorkflowsResponse} returns this
 */
proto.workflow.ListWorkflowsResponse.prototype.setRecordCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated WorkflowDefinition workflows = 2;
 * @return {!Array<!proto.workflow.WorkflowDefinition>}
 */
proto.workflow.ListWorkflowsResponse.prototype.getWorkflowsList = function() {
  return /** @type{!Array<!proto.workflow.WorkflowDefinition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow.WorkflowDefinition, 2));
};


/**
 * @param {!Array<!proto.workflow.WorkflowDefinition>} value
 * @return {!proto.workflow.ListWorkflowsResponse} returns this
*/
proto.workflow.ListWorkflowsResponse.prototype.setWorkflowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.workflow.WorkflowDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow.WorkflowDefinition}
 */
proto.workflow.ListWorkflowsResponse.prototype.addWorkflows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.workflow.WorkflowDefinition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow.ListWorkflowsResponse} returns this
 */
proto.workflow.ListWorkflowsResponse.prototype.clearWorkflowsList = function() {
  return this.setWorkflowsList([]);
};


/**
 * optional string next_page_token = 3;
 * @return {string}
 */
proto.workflow.ListWorkflowsResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListWorkflowsResponse} returns this
 */
proto.workflow.ListWorkflowsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow.WorkflowDefinition.repeatedFields_ = [18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.WorkflowDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.WorkflowDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.WorkflowDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.WorkflowDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    help: jspb.Message.getFieldWithDefault(msg, 6, ""),
    tableName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    responsibleId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    responsibleUuid: jspb.Message.getFieldWithDefault(msg, 9, ""),
    responsibleName: jspb.Message.getFieldWithDefault(msg, 10, ""),
    priority: jspb.Message.getFieldWithDefault(msg, 11, 0),
    validFrom: jspb.Message.getFieldWithDefault(msg, 12, 0),
    isDefault: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    isValid: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    publishStatus: jspb.Message.getFieldWithDefault(msg, 15, 0),
    durationUnit: jspb.Message.getFieldWithDefault(msg, 16, 0),
    startNode: (f = msg.getStartNode()) && proto.workflow.WorkflowNode.toObject(includeInstance, f),
    workflowNodesList: jspb.Message.toObjectList(msg.getWorkflowNodesList(),
    proto.workflow.WorkflowNode.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.WorkflowDefinition}
 */
proto.workflow.WorkflowDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.WorkflowDefinition;
  return proto.workflow.WorkflowDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.WorkflowDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.WorkflowDefinition}
 */
proto.workflow.WorkflowDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResponsibleId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsibleUuid(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsibleName(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValidFrom(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDefault(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValid(value);
      break;
    case 15:
      var value = /** @type {!proto.workflow.PublishStatus} */ (reader.readEnum());
      msg.setPublishStatus(value);
      break;
    case 16:
      var value = /** @type {!proto.workflow.DurationUnit} */ (reader.readEnum());
      msg.setDurationUnit(value);
      break;
    case 17:
      var value = new proto.workflow.WorkflowNode;
      reader.readMessage(value,proto.workflow.WorkflowNode.deserializeBinaryFromReader);
      msg.setStartNode(value);
      break;
    case 18:
      var value = new proto.workflow.WorkflowNode;
      reader.readMessage(value,proto.workflow.WorkflowNode.deserializeBinaryFromReader);
      msg.addWorkflowNodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.WorkflowDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.WorkflowDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.WorkflowDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.WorkflowDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getResponsibleId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getResponsibleUuid();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getResponsibleName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getValidFrom();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getIsDefault();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getIsValid();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getPublishStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = message.getDurationUnit();
  if (f !== 0.0) {
    writer.writeEnum(
      16,
      f
    );
  }
  f = message.getStartNode();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.workflow.WorkflowNode.serializeBinaryToWriter
    );
  }
  f = message.getWorkflowNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.workflow.WorkflowNode.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.workflow.WorkflowDefinition.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.workflow.WorkflowDefinition.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.workflow.WorkflowDefinition.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.workflow.WorkflowDefinition.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.workflow.WorkflowDefinition.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string help = 6;
 * @return {string}
 */
proto.workflow.WorkflowDefinition.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string table_name = 7;
 * @return {string}
 */
proto.workflow.WorkflowDefinition.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 responsible_id = 8;
 * @return {number}
 */
proto.workflow.WorkflowDefinition.prototype.getResponsibleId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.setResponsibleId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string responsible_uuid = 9;
 * @return {string}
 */
proto.workflow.WorkflowDefinition.prototype.getResponsibleUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.setResponsibleUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string responsible_name = 10;
 * @return {string}
 */
proto.workflow.WorkflowDefinition.prototype.getResponsibleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.setResponsibleName = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 priority = 11;
 * @return {number}
 */
proto.workflow.WorkflowDefinition.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 valid_from = 12;
 * @return {number}
 */
proto.workflow.WorkflowDefinition.prototype.getValidFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.setValidFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional bool is_default = 13;
 * @return {boolean}
 */
proto.workflow.WorkflowDefinition.prototype.getIsDefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.setIsDefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool is_valid = 14;
 * @return {boolean}
 */
proto.workflow.WorkflowDefinition.prototype.getIsValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.setIsValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional PublishStatus publish_status = 15;
 * @return {!proto.workflow.PublishStatus}
 */
proto.workflow.WorkflowDefinition.prototype.getPublishStatus = function() {
  return /** @type {!proto.workflow.PublishStatus} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {!proto.workflow.PublishStatus} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.setPublishStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 15, value);
};


/**
 * optional DurationUnit duration_unit = 16;
 * @return {!proto.workflow.DurationUnit}
 */
proto.workflow.WorkflowDefinition.prototype.getDurationUnit = function() {
  return /** @type {!proto.workflow.DurationUnit} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {!proto.workflow.DurationUnit} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.setDurationUnit = function(value) {
  return jspb.Message.setProto3EnumField(this, 16, value);
};


/**
 * optional WorkflowNode start_node = 17;
 * @return {?proto.workflow.WorkflowNode}
 */
proto.workflow.WorkflowDefinition.prototype.getStartNode = function() {
  return /** @type{?proto.workflow.WorkflowNode} */ (
    jspb.Message.getWrapperField(this, proto.workflow.WorkflowNode, 17));
};


/**
 * @param {?proto.workflow.WorkflowNode|undefined} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
*/
proto.workflow.WorkflowDefinition.prototype.setStartNode = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.clearStartNode = function() {
  return this.setStartNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow.WorkflowDefinition.prototype.hasStartNode = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * repeated WorkflowNode workflow_nodes = 18;
 * @return {!Array<!proto.workflow.WorkflowNode>}
 */
proto.workflow.WorkflowDefinition.prototype.getWorkflowNodesList = function() {
  return /** @type{!Array<!proto.workflow.WorkflowNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow.WorkflowNode, 18));
};


/**
 * @param {!Array<!proto.workflow.WorkflowNode>} value
 * @return {!proto.workflow.WorkflowDefinition} returns this
*/
proto.workflow.WorkflowDefinition.prototype.setWorkflowNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.workflow.WorkflowNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow.WorkflowNode}
 */
proto.workflow.WorkflowDefinition.prototype.addWorkflowNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.workflow.WorkflowNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow.WorkflowDefinition} returns this
 */
proto.workflow.WorkflowDefinition.prototype.clearWorkflowNodesList = function() {
  return this.setWorkflowNodesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow.WorkflowNode.repeatedFields_ = [14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.WorkflowNode.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.WorkflowNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.WorkflowNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.WorkflowNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    help: jspb.Message.getFieldWithDefault(msg, 6, ""),
    responsibleId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    responsibleUuid: jspb.Message.getFieldWithDefault(msg, 8, ""),
    responsibleName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    documentActionValue: jspb.Message.getFieldWithDefault(msg, 10, ""),
    documentActionName: jspb.Message.getFieldWithDefault(msg, 11, ""),
    priority: jspb.Message.getFieldWithDefault(msg, 12, 0),
    action: jspb.Message.getFieldWithDefault(msg, 13, 0),
    transitionsList: jspb.Message.toObjectList(msg.getTransitionsList(),
    proto.workflow.WorkflowTransition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.WorkflowNode}
 */
proto.workflow.WorkflowNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.WorkflowNode;
  return proto.workflow.WorkflowNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.WorkflowNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.WorkflowNode}
 */
proto.workflow.WorkflowNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelp(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResponsibleId(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsibleUuid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsibleName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentActionValue(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentActionName(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 13:
      var value = /** @type {!proto.workflow.Action} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 14:
      var value = new proto.workflow.WorkflowTransition;
      reader.readMessage(value,proto.workflow.WorkflowTransition.deserializeBinaryFromReader);
      msg.addTransitions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.WorkflowNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.WorkflowNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.WorkflowNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.WorkflowNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getHelp();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getResponsibleId();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getResponsibleUuid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getResponsibleName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDocumentActionValue();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDocumentActionName();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getTransitionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.workflow.WorkflowTransition.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.workflow.WorkflowNode.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowNode} returns this
 */
proto.workflow.WorkflowNode.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.workflow.WorkflowNode.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowNode} returns this
 */
proto.workflow.WorkflowNode.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.workflow.WorkflowNode.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowNode} returns this
 */
proto.workflow.WorkflowNode.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.workflow.WorkflowNode.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowNode} returns this
 */
proto.workflow.WorkflowNode.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.workflow.WorkflowNode.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowNode} returns this
 */
proto.workflow.WorkflowNode.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string help = 6;
 * @return {string}
 */
proto.workflow.WorkflowNode.prototype.getHelp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowNode} returns this
 */
proto.workflow.WorkflowNode.prototype.setHelp = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 responsible_id = 7;
 * @return {number}
 */
proto.workflow.WorkflowNode.prototype.getResponsibleId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowNode} returns this
 */
proto.workflow.WorkflowNode.prototype.setResponsibleId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string responsible_uuid = 8;
 * @return {string}
 */
proto.workflow.WorkflowNode.prototype.getResponsibleUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowNode} returns this
 */
proto.workflow.WorkflowNode.prototype.setResponsibleUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string responsible_name = 9;
 * @return {string}
 */
proto.workflow.WorkflowNode.prototype.getResponsibleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowNode} returns this
 */
proto.workflow.WorkflowNode.prototype.setResponsibleName = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string document_action_value = 10;
 * @return {string}
 */
proto.workflow.WorkflowNode.prototype.getDocumentActionValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowNode} returns this
 */
proto.workflow.WorkflowNode.prototype.setDocumentActionValue = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string document_action_name = 11;
 * @return {string}
 */
proto.workflow.WorkflowNode.prototype.getDocumentActionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowNode} returns this
 */
proto.workflow.WorkflowNode.prototype.setDocumentActionName = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int32 priority = 12;
 * @return {number}
 */
proto.workflow.WorkflowNode.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowNode} returns this
 */
proto.workflow.WorkflowNode.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional Action action = 13;
 * @return {!proto.workflow.Action}
 */
proto.workflow.WorkflowNode.prototype.getAction = function() {
  return /** @type {!proto.workflow.Action} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.workflow.Action} value
 * @return {!proto.workflow.WorkflowNode} returns this
 */
proto.workflow.WorkflowNode.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * repeated WorkflowTransition transitions = 14;
 * @return {!Array<!proto.workflow.WorkflowTransition>}
 */
proto.workflow.WorkflowNode.prototype.getTransitionsList = function() {
  return /** @type{!Array<!proto.workflow.WorkflowTransition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow.WorkflowTransition, 14));
};


/**
 * @param {!Array<!proto.workflow.WorkflowTransition>} value
 * @return {!proto.workflow.WorkflowNode} returns this
*/
proto.workflow.WorkflowNode.prototype.setTransitionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.workflow.WorkflowTransition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow.WorkflowTransition}
 */
proto.workflow.WorkflowNode.prototype.addTransitions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.workflow.WorkflowTransition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow.WorkflowNode} returns this
 */
proto.workflow.WorkflowNode.prototype.clearTransitionsList = function() {
  return this.setTransitionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow.WorkflowTransition.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.WorkflowTransition.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.WorkflowTransition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.WorkflowTransition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.WorkflowTransition.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isStdUserWorkflow: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    sequence: jspb.Message.getFieldWithDefault(msg, 5, 0),
    nodeNextId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    nodeNextUuid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    nodeNextName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    workflowConditionsList: jspb.Message.toObjectList(msg.getWorkflowConditionsList(),
    proto.workflow.WorkflowCondition.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.WorkflowTransition}
 */
proto.workflow.WorkflowTransition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.WorkflowTransition;
  return proto.workflow.WorkflowTransition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.WorkflowTransition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.WorkflowTransition}
 */
proto.workflow.WorkflowTransition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsStdUserWorkflow(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequence(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNodeNextId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeNextUuid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeNextName(value);
      break;
    case 9:
      var value = new proto.workflow.WorkflowCondition;
      reader.readMessage(value,proto.workflow.WorkflowCondition.deserializeBinaryFromReader);
      msg.addWorkflowConditions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.WorkflowTransition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.WorkflowTransition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.WorkflowTransition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.WorkflowTransition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsStdUserWorkflow();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getNodeNextId();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getNodeNextUuid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getNodeNextName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getWorkflowConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.workflow.WorkflowCondition.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.workflow.WorkflowTransition.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowTransition} returns this
 */
proto.workflow.WorkflowTransition.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.workflow.WorkflowTransition.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowTransition} returns this
 */
proto.workflow.WorkflowTransition.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.workflow.WorkflowTransition.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowTransition} returns this
 */
proto.workflow.WorkflowTransition.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool is_std_user_workflow = 4;
 * @return {boolean}
 */
proto.workflow.WorkflowTransition.prototype.getIsStdUserWorkflow = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.workflow.WorkflowTransition} returns this
 */
proto.workflow.WorkflowTransition.prototype.setIsStdUserWorkflow = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int32 sequence = 5;
 * @return {number}
 */
proto.workflow.WorkflowTransition.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowTransition} returns this
 */
proto.workflow.WorkflowTransition.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 node_next_id = 6;
 * @return {number}
 */
proto.workflow.WorkflowTransition.prototype.getNodeNextId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowTransition} returns this
 */
proto.workflow.WorkflowTransition.prototype.setNodeNextId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string node_next_uuid = 7;
 * @return {string}
 */
proto.workflow.WorkflowTransition.prototype.getNodeNextUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowTransition} returns this
 */
proto.workflow.WorkflowTransition.prototype.setNodeNextUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string node_next_name = 8;
 * @return {string}
 */
proto.workflow.WorkflowTransition.prototype.getNodeNextName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowTransition} returns this
 */
proto.workflow.WorkflowTransition.prototype.setNodeNextName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated WorkflowCondition workflow_conditions = 9;
 * @return {!Array<!proto.workflow.WorkflowCondition>}
 */
proto.workflow.WorkflowTransition.prototype.getWorkflowConditionsList = function() {
  return /** @type{!Array<!proto.workflow.WorkflowCondition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow.WorkflowCondition, 9));
};


/**
 * @param {!Array<!proto.workflow.WorkflowCondition>} value
 * @return {!proto.workflow.WorkflowTransition} returns this
*/
proto.workflow.WorkflowTransition.prototype.setWorkflowConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.workflow.WorkflowCondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow.WorkflowCondition}
 */
proto.workflow.WorkflowTransition.prototype.addWorkflowConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.workflow.WorkflowCondition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow.WorkflowTransition} returns this
 */
proto.workflow.WorkflowTransition.prototype.clearWorkflowConditionsList = function() {
  return this.setWorkflowConditionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.WorkflowCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.WorkflowCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.WorkflowCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.WorkflowCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 3, 0),
    columnName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    value: jspb.Message.getFieldWithDefault(msg, 5, ""),
    conditionType: jspb.Message.getFieldWithDefault(msg, 6, 0),
    operation: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.WorkflowCondition}
 */
proto.workflow.WorkflowCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.WorkflowCondition;
  return proto.workflow.WorkflowCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.WorkflowCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.WorkflowCondition}
 */
proto.workflow.WorkflowCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequence(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setColumnName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 6:
      var value = /** @type {!proto.workflow.ConditionType} */ (reader.readEnum());
      msg.setConditionType(value);
      break;
    case 7:
      var value = /** @type {!proto.workflow.Operation} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.WorkflowCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.WorkflowCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.WorkflowCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.WorkflowCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getColumnName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getConditionType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.workflow.WorkflowCondition.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowCondition} returns this
 */
proto.workflow.WorkflowCondition.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.workflow.WorkflowCondition.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowCondition} returns this
 */
proto.workflow.WorkflowCondition.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 sequence = 3;
 * @return {number}
 */
proto.workflow.WorkflowCondition.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowCondition} returns this
 */
proto.workflow.WorkflowCondition.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string column_name = 4;
 * @return {string}
 */
proto.workflow.WorkflowCondition.prototype.getColumnName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowCondition} returns this
 */
proto.workflow.WorkflowCondition.prototype.setColumnName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string value = 5;
 * @return {string}
 */
proto.workflow.WorkflowCondition.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowCondition} returns this
 */
proto.workflow.WorkflowCondition.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional ConditionType condition_type = 6;
 * @return {!proto.workflow.ConditionType}
 */
proto.workflow.WorkflowCondition.prototype.getConditionType = function() {
  return /** @type {!proto.workflow.ConditionType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.workflow.ConditionType} value
 * @return {!proto.workflow.WorkflowCondition} returns this
 */
proto.workflow.WorkflowCondition.prototype.setConditionType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional Operation operation = 7;
 * @return {!proto.workflow.Operation}
 */
proto.workflow.WorkflowCondition.prototype.getOperation = function() {
  return /** @type {!proto.workflow.Operation} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.workflow.Operation} value
 * @return {!proto.workflow.WorkflowCondition} returns this
 */
proto.workflow.WorkflowCondition.prototype.setOperation = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.ListDocumentActionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.ListDocumentActionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.ListDocumentActionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ListDocumentActionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    documentStatus: jspb.Message.getFieldWithDefault(msg, 5, ""),
    documentAction: jspb.Message.getFieldWithDefault(msg, 6, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 7, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.ListDocumentActionsRequest}
 */
proto.workflow.ListDocumentActionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.ListDocumentActionsRequest;
  return proto.workflow.ListDocumentActionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.ListDocumentActionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.ListDocumentActionsRequest}
 */
proto.workflow.ListDocumentActionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentAction(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.ListDocumentActionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.ListDocumentActionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.ListDocumentActionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ListDocumentActionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDocumentStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDocumentAction();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string table_name = 2;
 * @return {string}
 */
proto.workflow.ListDocumentActionsRequest.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListDocumentActionsRequest} returns this
 */
proto.workflow.ListDocumentActionsRequest.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 id = 3;
 * @return {number}
 */
proto.workflow.ListDocumentActionsRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.ListDocumentActionsRequest} returns this
 */
proto.workflow.ListDocumentActionsRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string uuid = 4;
 * @return {string}
 */
proto.workflow.ListDocumentActionsRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListDocumentActionsRequest} returns this
 */
proto.workflow.ListDocumentActionsRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string document_status = 5;
 * @return {string}
 */
proto.workflow.ListDocumentActionsRequest.prototype.getDocumentStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListDocumentActionsRequest} returns this
 */
proto.workflow.ListDocumentActionsRequest.prototype.setDocumentStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string document_action = 6;
 * @return {string}
 */
proto.workflow.ListDocumentActionsRequest.prototype.getDocumentAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListDocumentActionsRequest} returns this
 */
proto.workflow.ListDocumentActionsRequest.prototype.setDocumentAction = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 page_size = 7;
 * @return {number}
 */
proto.workflow.ListDocumentActionsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.ListDocumentActionsRequest} returns this
 */
proto.workflow.ListDocumentActionsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string page_token = 8;
 * @return {string}
 */
proto.workflow.ListDocumentActionsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListDocumentActionsRequest} returns this
 */
proto.workflow.ListDocumentActionsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow.ListDocumentActionsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.ListDocumentActionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.ListDocumentActionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.ListDocumentActionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ListDocumentActionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    documentActionsList: jspb.Message.toObjectList(msg.getDocumentActionsList(),
    proto_base_data_type_pb.DocumentAction.toObject, includeInstance),
    defaultDocumentAction: (f = msg.getDefaultDocumentAction()) && proto_base_data_type_pb.DocumentAction.toObject(includeInstance, f),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.ListDocumentActionsResponse}
 */
proto.workflow.ListDocumentActionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.ListDocumentActionsResponse;
  return proto.workflow.ListDocumentActionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.ListDocumentActionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.ListDocumentActionsResponse}
 */
proto.workflow.ListDocumentActionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordCount(value);
      break;
    case 2:
      var value = new proto_base_data_type_pb.DocumentAction;
      reader.readMessage(value,proto_base_data_type_pb.DocumentAction.deserializeBinaryFromReader);
      msg.addDocumentActions(value);
      break;
    case 3:
      var value = new proto_base_data_type_pb.DocumentAction;
      reader.readMessage(value,proto_base_data_type_pb.DocumentAction.deserializeBinaryFromReader);
      msg.setDefaultDocumentAction(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.ListDocumentActionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.ListDocumentActionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.ListDocumentActionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ListDocumentActionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getDocumentActionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto_base_data_type_pb.DocumentAction.serializeBinaryToWriter
    );
  }
  f = message.getDefaultDocumentAction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto_base_data_type_pb.DocumentAction.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int64 record_count = 1;
 * @return {number}
 */
proto.workflow.ListDocumentActionsResponse.prototype.getRecordCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.ListDocumentActionsResponse} returns this
 */
proto.workflow.ListDocumentActionsResponse.prototype.setRecordCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated data.DocumentAction document_actions = 2;
 * @return {!Array<!proto.data.DocumentAction>}
 */
proto.workflow.ListDocumentActionsResponse.prototype.getDocumentActionsList = function() {
  return /** @type{!Array<!proto.data.DocumentAction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_base_data_type_pb.DocumentAction, 2));
};


/**
 * @param {!Array<!proto.data.DocumentAction>} value
 * @return {!proto.workflow.ListDocumentActionsResponse} returns this
*/
proto.workflow.ListDocumentActionsResponse.prototype.setDocumentActionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.data.DocumentAction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.data.DocumentAction}
 */
proto.workflow.ListDocumentActionsResponse.prototype.addDocumentActions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.data.DocumentAction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow.ListDocumentActionsResponse} returns this
 */
proto.workflow.ListDocumentActionsResponse.prototype.clearDocumentActionsList = function() {
  return this.setDocumentActionsList([]);
};


/**
 * optional data.DocumentAction default_document_action = 3;
 * @return {?proto.data.DocumentAction}
 */
proto.workflow.ListDocumentActionsResponse.prototype.getDefaultDocumentAction = function() {
  return /** @type{?proto.data.DocumentAction} */ (
    jspb.Message.getWrapperField(this, proto_base_data_type_pb.DocumentAction, 3));
};


/**
 * @param {?proto.data.DocumentAction|undefined} value
 * @return {!proto.workflow.ListDocumentActionsResponse} returns this
*/
proto.workflow.ListDocumentActionsResponse.prototype.setDefaultDocumentAction = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow.ListDocumentActionsResponse} returns this
 */
proto.workflow.ListDocumentActionsResponse.prototype.clearDefaultDocumentAction = function() {
  return this.setDefaultDocumentAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow.ListDocumentActionsResponse.prototype.hasDefaultDocumentAction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string next_page_token = 4;
 * @return {string}
 */
proto.workflow.ListDocumentActionsResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListDocumentActionsResponse} returns this
 */
proto.workflow.ListDocumentActionsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.ListDocumentStatusesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.ListDocumentStatusesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.ListDocumentStatusesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ListDocumentStatusesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    documentStatus: jspb.Message.getFieldWithDefault(msg, 5, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 6, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.ListDocumentStatusesRequest}
 */
proto.workflow.ListDocumentStatusesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.ListDocumentStatusesRequest;
  return proto.workflow.ListDocumentStatusesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.ListDocumentStatusesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.ListDocumentStatusesRequest}
 */
proto.workflow.ListDocumentStatusesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.ListDocumentStatusesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.ListDocumentStatusesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.ListDocumentStatusesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ListDocumentStatusesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDocumentStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string table_name = 2;
 * @return {string}
 */
proto.workflow.ListDocumentStatusesRequest.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListDocumentStatusesRequest} returns this
 */
proto.workflow.ListDocumentStatusesRequest.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 id = 3;
 * @return {number}
 */
proto.workflow.ListDocumentStatusesRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.ListDocumentStatusesRequest} returns this
 */
proto.workflow.ListDocumentStatusesRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string uuid = 4;
 * @return {string}
 */
proto.workflow.ListDocumentStatusesRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListDocumentStatusesRequest} returns this
 */
proto.workflow.ListDocumentStatusesRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string document_status = 5;
 * @return {string}
 */
proto.workflow.ListDocumentStatusesRequest.prototype.getDocumentStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListDocumentStatusesRequest} returns this
 */
proto.workflow.ListDocumentStatusesRequest.prototype.setDocumentStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 page_size = 6;
 * @return {number}
 */
proto.workflow.ListDocumentStatusesRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.ListDocumentStatusesRequest} returns this
 */
proto.workflow.ListDocumentStatusesRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string page_token = 7;
 * @return {string}
 */
proto.workflow.ListDocumentStatusesRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListDocumentStatusesRequest} returns this
 */
proto.workflow.ListDocumentStatusesRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow.ListDocumentStatusesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.ListDocumentStatusesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.ListDocumentStatusesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.ListDocumentStatusesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ListDocumentStatusesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    documentStatusesList: jspb.Message.toObjectList(msg.getDocumentStatusesList(),
    proto_base_data_type_pb.DocumentStatus.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.ListDocumentStatusesResponse}
 */
proto.workflow.ListDocumentStatusesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.ListDocumentStatusesResponse;
  return proto.workflow.ListDocumentStatusesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.ListDocumentStatusesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.ListDocumentStatusesResponse}
 */
proto.workflow.ListDocumentStatusesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordCount(value);
      break;
    case 2:
      var value = new proto_base_data_type_pb.DocumentStatus;
      reader.readMessage(value,proto_base_data_type_pb.DocumentStatus.deserializeBinaryFromReader);
      msg.addDocumentStatuses(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.ListDocumentStatusesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.ListDocumentStatusesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.ListDocumentStatusesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ListDocumentStatusesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getDocumentStatusesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto_base_data_type_pb.DocumentStatus.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 record_count = 1;
 * @return {number}
 */
proto.workflow.ListDocumentStatusesResponse.prototype.getRecordCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.ListDocumentStatusesResponse} returns this
 */
proto.workflow.ListDocumentStatusesResponse.prototype.setRecordCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated data.DocumentStatus document_statuses = 2;
 * @return {!Array<!proto.data.DocumentStatus>}
 */
proto.workflow.ListDocumentStatusesResponse.prototype.getDocumentStatusesList = function() {
  return /** @type{!Array<!proto.data.DocumentStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto_base_data_type_pb.DocumentStatus, 2));
};


/**
 * @param {!Array<!proto.data.DocumentStatus>} value
 * @return {!proto.workflow.ListDocumentStatusesResponse} returns this
*/
proto.workflow.ListDocumentStatusesResponse.prototype.setDocumentStatusesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.data.DocumentStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.data.DocumentStatus}
 */
proto.workflow.ListDocumentStatusesResponse.prototype.addDocumentStatuses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.data.DocumentStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow.ListDocumentStatusesResponse} returns this
 */
proto.workflow.ListDocumentStatusesResponse.prototype.clearDocumentStatusesList = function() {
  return this.setDocumentStatusesList([]);
};


/**
 * optional string next_page_token = 3;
 * @return {string}
 */
proto.workflow.ListDocumentStatusesResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListDocumentStatusesResponse} returns this
 */
proto.workflow.ListDocumentStatusesResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.ListWorkflowActivitiesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.ListWorkflowActivitiesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.ListWorkflowActivitiesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ListWorkflowActivitiesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pageSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.ListWorkflowActivitiesRequest}
 */
proto.workflow.ListWorkflowActivitiesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.ListWorkflowActivitiesRequest;
  return proto.workflow.ListWorkflowActivitiesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.ListWorkflowActivitiesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.ListWorkflowActivitiesRequest}
 */
proto.workflow.ListWorkflowActivitiesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserUuid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.ListWorkflowActivitiesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.ListWorkflowActivitiesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.ListWorkflowActivitiesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ListWorkflowActivitiesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string user_uuid = 2;
 * @return {string}
 */
proto.workflow.ListWorkflowActivitiesRequest.prototype.getUserUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListWorkflowActivitiesRequest} returns this
 */
proto.workflow.ListWorkflowActivitiesRequest.prototype.setUserUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 page_size = 4;
 * @return {number}
 */
proto.workflow.ListWorkflowActivitiesRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.ListWorkflowActivitiesRequest} returns this
 */
proto.workflow.ListWorkflowActivitiesRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string page_token = 5;
 * @return {string}
 */
proto.workflow.ListWorkflowActivitiesRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListWorkflowActivitiesRequest} returns this
 */
proto.workflow.ListWorkflowActivitiesRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow.ListWorkflowActivitiesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.ListWorkflowActivitiesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.ListWorkflowActivitiesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.ListWorkflowActivitiesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ListWorkflowActivitiesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    activitiesList: jspb.Message.toObjectList(msg.getActivitiesList(),
    proto.workflow.WorkflowActivity.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.ListWorkflowActivitiesResponse}
 */
proto.workflow.ListWorkflowActivitiesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.ListWorkflowActivitiesResponse;
  return proto.workflow.ListWorkflowActivitiesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.ListWorkflowActivitiesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.ListWorkflowActivitiesResponse}
 */
proto.workflow.ListWorkflowActivitiesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRecordCount(value);
      break;
    case 2:
      var value = new proto.workflow.WorkflowActivity;
      reader.readMessage(value,proto.workflow.WorkflowActivity.deserializeBinaryFromReader);
      msg.addActivities(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.ListWorkflowActivitiesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.ListWorkflowActivitiesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.ListWorkflowActivitiesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ListWorkflowActivitiesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getActivitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.workflow.WorkflowActivity.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 record_count = 1;
 * @return {number}
 */
proto.workflow.ListWorkflowActivitiesResponse.prototype.getRecordCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.ListWorkflowActivitiesResponse} returns this
 */
proto.workflow.ListWorkflowActivitiesResponse.prototype.setRecordCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated WorkflowActivity activities = 2;
 * @return {!Array<!proto.workflow.WorkflowActivity>}
 */
proto.workflow.ListWorkflowActivitiesResponse.prototype.getActivitiesList = function() {
  return /** @type{!Array<!proto.workflow.WorkflowActivity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow.WorkflowActivity, 2));
};


/**
 * @param {!Array<!proto.workflow.WorkflowActivity>} value
 * @return {!proto.workflow.ListWorkflowActivitiesResponse} returns this
*/
proto.workflow.ListWorkflowActivitiesResponse.prototype.setActivitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.workflow.WorkflowActivity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow.WorkflowActivity}
 */
proto.workflow.ListWorkflowActivitiesResponse.prototype.addActivities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.workflow.WorkflowActivity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow.ListWorkflowActivitiesResponse} returns this
 */
proto.workflow.ListWorkflowActivitiesResponse.prototype.clearActivitiesList = function() {
  return this.setActivitiesList([]);
};


/**
 * optional string next_page_token = 3;
 * @return {string}
 */
proto.workflow.ListWorkflowActivitiesResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ListWorkflowActivitiesResponse} returns this
 */
proto.workflow.ListWorkflowActivitiesResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.ZoomWindow.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.ZoomWindow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.ZoomWindow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ZoomWindow.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isSalesTransaction: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.ZoomWindow}
 */
proto.workflow.ZoomWindow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.ZoomWindow;
  return proto.workflow.ZoomWindow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.ZoomWindow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.ZoomWindow}
 */
proto.workflow.ZoomWindow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSalesTransaction(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.ZoomWindow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.ZoomWindow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.ZoomWindow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ZoomWindow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsSalesTransaction();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.workflow.ZoomWindow.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.ZoomWindow} returns this
 */
proto.workflow.ZoomWindow.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.workflow.ZoomWindow.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ZoomWindow} returns this
 */
proto.workflow.ZoomWindow.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.workflow.ZoomWindow.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ZoomWindow} returns this
 */
proto.workflow.ZoomWindow.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.workflow.ZoomWindow.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ZoomWindow} returns this
 */
proto.workflow.ZoomWindow.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool is_sales_transaction = 5;
 * @return {boolean}
 */
proto.workflow.ZoomWindow.prototype.getIsSalesTransaction = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.workflow.ZoomWindow} returns this
 */
proto.workflow.ZoomWindow.prototype.setIsSalesTransaction = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool is_active = 6;
 * @return {boolean}
 */
proto.workflow.ZoomWindow.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.workflow.ZoomWindow} returns this
 */
proto.workflow.ZoomWindow.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow.WorkflowActivity.repeatedFields_ = [19];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.WorkflowActivity.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.WorkflowActivity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.WorkflowActivity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.WorkflowActivity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tableName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    recordId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    recordUuid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    userUuid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    responsibleId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    responsibleUuid: jspb.Message.getFieldWithDefault(msg, 9, ""),
    responsibleName: jspb.Message.getFieldWithDefault(msg, 10, ""),
    textMessage: jspb.Message.getFieldWithDefault(msg, 11, ""),
    processed: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    priority: jspb.Message.getFieldWithDefault(msg, 13, 0),
    created: jspb.Message.getFieldWithDefault(msg, 14, 0),
    lastAlert: jspb.Message.getFieldWithDefault(msg, 15, 0),
    workflowProcess: (f = msg.getWorkflowProcess()) && proto.workflow.WorkflowProcess.toObject(includeInstance, f),
    workflow: (f = msg.getWorkflow()) && proto.workflow.WorkflowDefinition.toObject(includeInstance, f),
    node: (f = msg.getNode()) && proto.workflow.WorkflowNode.toObject(includeInstance, f),
    zoomWindowsList: jspb.Message.toObjectList(msg.getZoomWindowsList(),
    proto.workflow.ZoomWindow.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.WorkflowActivity}
 */
proto.workflow.WorkflowActivity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.WorkflowActivity;
  return proto.workflow.WorkflowActivity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.WorkflowActivity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.WorkflowActivity}
 */
proto.workflow.WorkflowActivity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRecordId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecordUuid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserUuid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResponsibleId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsibleUuid(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsibleName(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextMessage(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProcessed(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreated(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastAlert(value);
      break;
    case 16:
      var value = new proto.workflow.WorkflowProcess;
      reader.readMessage(value,proto.workflow.WorkflowProcess.deserializeBinaryFromReader);
      msg.setWorkflowProcess(value);
      break;
    case 17:
      var value = new proto.workflow.WorkflowDefinition;
      reader.readMessage(value,proto.workflow.WorkflowDefinition.deserializeBinaryFromReader);
      msg.setWorkflow(value);
      break;
    case 18:
      var value = new proto.workflow.WorkflowNode;
      reader.readMessage(value,proto.workflow.WorkflowNode.deserializeBinaryFromReader);
      msg.setNode(value);
      break;
    case 19:
      var value = new proto.workflow.ZoomWindow;
      reader.readMessage(value,proto.workflow.ZoomWindow.deserializeBinaryFromReader);
      msg.addZoomWindows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.WorkflowActivity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.WorkflowActivity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.WorkflowActivity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.WorkflowActivity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRecordId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getRecordUuid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUserUuid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getResponsibleId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getResponsibleUuid();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getResponsibleName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTextMessage();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getProcessed();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getCreated();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getLastAlert();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getWorkflowProcess();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.workflow.WorkflowProcess.serializeBinaryToWriter
    );
  }
  f = message.getWorkflow();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.workflow.WorkflowDefinition.serializeBinaryToWriter
    );
  }
  f = message.getNode();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.workflow.WorkflowNode.serializeBinaryToWriter
    );
  }
  f = message.getZoomWindowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      19,
      f,
      proto.workflow.ZoomWindow.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.workflow.WorkflowActivity.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.workflow.WorkflowActivity.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string table_name = 3;
 * @return {string}
 */
proto.workflow.WorkflowActivity.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 record_id = 4;
 * @return {number}
 */
proto.workflow.WorkflowActivity.prototype.getRecordId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.setRecordId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string record_uuid = 5;
 * @return {string}
 */
proto.workflow.WorkflowActivity.prototype.getRecordUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.setRecordUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string user_uuid = 6;
 * @return {string}
 */
proto.workflow.WorkflowActivity.prototype.getUserUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.setUserUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string user_name = 7;
 * @return {string}
 */
proto.workflow.WorkflowActivity.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 responsible_id = 8;
 * @return {number}
 */
proto.workflow.WorkflowActivity.prototype.getResponsibleId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.setResponsibleId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string responsible_uuid = 9;
 * @return {string}
 */
proto.workflow.WorkflowActivity.prototype.getResponsibleUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.setResponsibleUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string responsible_name = 10;
 * @return {string}
 */
proto.workflow.WorkflowActivity.prototype.getResponsibleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.setResponsibleName = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string text_message = 11;
 * @return {string}
 */
proto.workflow.WorkflowActivity.prototype.getTextMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.setTextMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool processed = 12;
 * @return {boolean}
 */
proto.workflow.WorkflowActivity.prototype.getProcessed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.setProcessed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional int32 priority = 13;
 * @return {number}
 */
proto.workflow.WorkflowActivity.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 created = 14;
 * @return {number}
 */
proto.workflow.WorkflowActivity.prototype.getCreated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.setCreated = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int64 last_alert = 15;
 * @return {number}
 */
proto.workflow.WorkflowActivity.prototype.getLastAlert = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.setLastAlert = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional WorkflowProcess workflow_process = 16;
 * @return {?proto.workflow.WorkflowProcess}
 */
proto.workflow.WorkflowActivity.prototype.getWorkflowProcess = function() {
  return /** @type{?proto.workflow.WorkflowProcess} */ (
    jspb.Message.getWrapperField(this, proto.workflow.WorkflowProcess, 16));
};


/**
 * @param {?proto.workflow.WorkflowProcess|undefined} value
 * @return {!proto.workflow.WorkflowActivity} returns this
*/
proto.workflow.WorkflowActivity.prototype.setWorkflowProcess = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.clearWorkflowProcess = function() {
  return this.setWorkflowProcess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow.WorkflowActivity.prototype.hasWorkflowProcess = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional WorkflowDefinition workflow = 17;
 * @return {?proto.workflow.WorkflowDefinition}
 */
proto.workflow.WorkflowActivity.prototype.getWorkflow = function() {
  return /** @type{?proto.workflow.WorkflowDefinition} */ (
    jspb.Message.getWrapperField(this, proto.workflow.WorkflowDefinition, 17));
};


/**
 * @param {?proto.workflow.WorkflowDefinition|undefined} value
 * @return {!proto.workflow.WorkflowActivity} returns this
*/
proto.workflow.WorkflowActivity.prototype.setWorkflow = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.clearWorkflow = function() {
  return this.setWorkflow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow.WorkflowActivity.prototype.hasWorkflow = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional WorkflowNode node = 18;
 * @return {?proto.workflow.WorkflowNode}
 */
proto.workflow.WorkflowActivity.prototype.getNode = function() {
  return /** @type{?proto.workflow.WorkflowNode} */ (
    jspb.Message.getWrapperField(this, proto.workflow.WorkflowNode, 18));
};


/**
 * @param {?proto.workflow.WorkflowNode|undefined} value
 * @return {!proto.workflow.WorkflowActivity} returns this
*/
proto.workflow.WorkflowActivity.prototype.setNode = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.clearNode = function() {
  return this.setNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workflow.WorkflowActivity.prototype.hasNode = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * repeated ZoomWindow zoom_windows = 19;
 * @return {!Array<!proto.workflow.ZoomWindow>}
 */
proto.workflow.WorkflowActivity.prototype.getZoomWindowsList = function() {
  return /** @type{!Array<!proto.workflow.ZoomWindow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow.ZoomWindow, 19));
};


/**
 * @param {!Array<!proto.workflow.ZoomWindow>} value
 * @return {!proto.workflow.WorkflowActivity} returns this
*/
proto.workflow.WorkflowActivity.prototype.setZoomWindowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 19, value);
};


/**
 * @param {!proto.workflow.ZoomWindow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow.ZoomWindow}
 */
proto.workflow.WorkflowActivity.prototype.addZoomWindows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.workflow.ZoomWindow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow.WorkflowActivity} returns this
 */
proto.workflow.WorkflowActivity.prototype.clearZoomWindowsList = function() {
  return this.setZoomWindowsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workflow.WorkflowProcess.repeatedFields_ = [16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.WorkflowProcess.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.WorkflowProcess.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.WorkflowProcess} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.WorkflowProcess.toObject = function(includeInstance, msg) {
  var f, obj = {
    processUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    workflowUuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    workflowName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    id: jspb.Message.getFieldWithDefault(msg, 4, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tableName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    userUuid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    responsibleId: jspb.Message.getFieldWithDefault(msg, 9, 0),
    responsibleUuid: jspb.Message.getFieldWithDefault(msg, 10, ""),
    responsibleName: jspb.Message.getFieldWithDefault(msg, 11, ""),
    textMessage: jspb.Message.getFieldWithDefault(msg, 12, ""),
    processed: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    workflowState: jspb.Message.getFieldWithDefault(msg, 14, 0),
    priority: jspb.Message.getFieldWithDefault(msg, 15, 0),
    workflowEventsList: jspb.Message.toObjectList(msg.getWorkflowEventsList(),
    proto.workflow.WorkflowEvent.toObject, includeInstance),
    logDate: jspb.Message.getFieldWithDefault(msg, 17, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.WorkflowProcess}
 */
proto.workflow.WorkflowProcess.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.WorkflowProcess;
  return proto.workflow.WorkflowProcess.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.WorkflowProcess} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.WorkflowProcess}
 */
proto.workflow.WorkflowProcess.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkflowUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkflowName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserUuid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResponsibleId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsibleUuid(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsibleName(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextMessage(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProcessed(value);
      break;
    case 14:
      var value = /** @type {!proto.workflow.WorkflowState} */ (reader.readEnum());
      msg.setWorkflowState(value);
      break;
    case 15:
      var value = /** @type {!proto.workflow.Priority} */ (reader.readEnum());
      msg.setPriority(value);
      break;
    case 16:
      var value = new proto.workflow.WorkflowEvent;
      reader.readMessage(value,proto.workflow.WorkflowEvent.deserializeBinaryFromReader);
      msg.addWorkflowEvents(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLogDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.WorkflowProcess.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.WorkflowProcess.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.WorkflowProcess} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.WorkflowProcess.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProcessUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWorkflowUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWorkflowName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUserUuid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getResponsibleId();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getResponsibleUuid();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getResponsibleName();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTextMessage();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getProcessed();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getWorkflowState();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0.0) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = message.getWorkflowEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.workflow.WorkflowEvent.serializeBinaryToWriter
    );
  }
  f = message.getLogDate();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
};


/**
 * optional string process_uuid = 1;
 * @return {string}
 */
proto.workflow.WorkflowProcess.prototype.getProcessUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.setProcessUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string workflow_uuid = 2;
 * @return {string}
 */
proto.workflow.WorkflowProcess.prototype.getWorkflowUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.setWorkflowUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string workflow_name = 3;
 * @return {string}
 */
proto.workflow.WorkflowProcess.prototype.getWorkflowName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.setWorkflowName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 id = 4;
 * @return {number}
 */
proto.workflow.WorkflowProcess.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string uuid = 5;
 * @return {string}
 */
proto.workflow.WorkflowProcess.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string table_name = 6;
 * @return {string}
 */
proto.workflow.WorkflowProcess.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string user_uuid = 7;
 * @return {string}
 */
proto.workflow.WorkflowProcess.prototype.getUserUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.setUserUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string user_name = 8;
 * @return {string}
 */
proto.workflow.WorkflowProcess.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int32 responsible_id = 9;
 * @return {number}
 */
proto.workflow.WorkflowProcess.prototype.getResponsibleId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.setResponsibleId = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string responsible_uuid = 10;
 * @return {string}
 */
proto.workflow.WorkflowProcess.prototype.getResponsibleUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.setResponsibleUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string responsible_name = 11;
 * @return {string}
 */
proto.workflow.WorkflowProcess.prototype.getResponsibleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.setResponsibleName = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string text_message = 12;
 * @return {string}
 */
proto.workflow.WorkflowProcess.prototype.getTextMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.setTextMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool processed = 13;
 * @return {boolean}
 */
proto.workflow.WorkflowProcess.prototype.getProcessed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.setProcessed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional WorkflowState workflow_state = 14;
 * @return {!proto.workflow.WorkflowState}
 */
proto.workflow.WorkflowProcess.prototype.getWorkflowState = function() {
  return /** @type {!proto.workflow.WorkflowState} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.workflow.WorkflowState} value
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.setWorkflowState = function(value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};


/**
 * optional Priority priority = 15;
 * @return {!proto.workflow.Priority}
 */
proto.workflow.WorkflowProcess.prototype.getPriority = function() {
  return /** @type {!proto.workflow.Priority} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {!proto.workflow.Priority} value
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.setPriority = function(value) {
  return jspb.Message.setProto3EnumField(this, 15, value);
};


/**
 * repeated WorkflowEvent workflow_events = 16;
 * @return {!Array<!proto.workflow.WorkflowEvent>}
 */
proto.workflow.WorkflowProcess.prototype.getWorkflowEventsList = function() {
  return /** @type{!Array<!proto.workflow.WorkflowEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workflow.WorkflowEvent, 16));
};


/**
 * @param {!Array<!proto.workflow.WorkflowEvent>} value
 * @return {!proto.workflow.WorkflowProcess} returns this
*/
proto.workflow.WorkflowProcess.prototype.setWorkflowEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.workflow.WorkflowEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workflow.WorkflowEvent}
 */
proto.workflow.WorkflowProcess.prototype.addWorkflowEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.workflow.WorkflowEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.clearWorkflowEventsList = function() {
  return this.setWorkflowEventsList([]);
};


/**
 * optional int64 log_date = 17;
 * @return {number}
 */
proto.workflow.WorkflowProcess.prototype.getLogDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowProcess} returns this
 */
proto.workflow.WorkflowProcess.prototype.setLogDate = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.WorkflowEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.WorkflowEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.WorkflowEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.WorkflowEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeUuid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    nodeName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    id: jspb.Message.getFieldWithDefault(msg, 3, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    tableName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    userUuid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    responsibleId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    responsibleUuid: jspb.Message.getFieldWithDefault(msg, 9, ""),
    responsibleName: jspb.Message.getFieldWithDefault(msg, 10, ""),
    textMessage: jspb.Message.getFieldWithDefault(msg, 11, ""),
    timeElapsed: jspb.Message.getFieldWithDefault(msg, 12, 0),
    attributeName: jspb.Message.getFieldWithDefault(msg, 13, ""),
    oldValue: jspb.Message.getFieldWithDefault(msg, 14, ""),
    newValue: jspb.Message.getFieldWithDefault(msg, 15, ""),
    workflowState: jspb.Message.getFieldWithDefault(msg, 16, 0),
    eventType: jspb.Message.getFieldWithDefault(msg, 17, 0),
    logDate: jspb.Message.getFieldWithDefault(msg, 18, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.WorkflowEvent}
 */
proto.workflow.WorkflowEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.WorkflowEvent;
  return proto.workflow.WorkflowEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.WorkflowEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.WorkflowEvent}
 */
proto.workflow.WorkflowEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeUuid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserUuid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResponsibleId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsibleUuid(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponsibleName(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextMessage(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimeElapsed(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttributeName(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setOldValue(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewValue(value);
      break;
    case 16:
      var value = /** @type {!proto.workflow.WorkflowState} */ (reader.readEnum());
      msg.setWorkflowState(value);
      break;
    case 17:
      var value = /** @type {!proto.workflow.EventType} */ (reader.readEnum());
      msg.setEventType(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLogDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.WorkflowEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.WorkflowEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.WorkflowEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.WorkflowEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodeUuid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNodeName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUserUuid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getResponsibleId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getResponsibleUuid();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getResponsibleName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTextMessage();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTimeElapsed();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getAttributeName();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getOldValue();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getNewValue();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getWorkflowState();
  if (f !== 0.0) {
    writer.writeEnum(
      16,
      f
    );
  }
  f = message.getEventType();
  if (f !== 0.0) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = message.getLogDate();
  if (f !== 0) {
    writer.writeInt64(
      18,
      f
    );
  }
};


/**
 * optional string node_uuid = 1;
 * @return {string}
 */
proto.workflow.WorkflowEvent.prototype.getNodeUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setNodeUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string node_name = 2;
 * @return {string}
 */
proto.workflow.WorkflowEvent.prototype.getNodeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setNodeName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 id = 3;
 * @return {number}
 */
proto.workflow.WorkflowEvent.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string uuid = 4;
 * @return {string}
 */
proto.workflow.WorkflowEvent.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string table_name = 5;
 * @return {string}
 */
proto.workflow.WorkflowEvent.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string user_uuid = 6;
 * @return {string}
 */
proto.workflow.WorkflowEvent.prototype.getUserUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setUserUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string user_name = 7;
 * @return {string}
 */
proto.workflow.WorkflowEvent.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 responsible_id = 8;
 * @return {number}
 */
proto.workflow.WorkflowEvent.prototype.getResponsibleId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setResponsibleId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string responsible_uuid = 9;
 * @return {string}
 */
proto.workflow.WorkflowEvent.prototype.getResponsibleUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setResponsibleUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string responsible_name = 10;
 * @return {string}
 */
proto.workflow.WorkflowEvent.prototype.getResponsibleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setResponsibleName = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string text_message = 11;
 * @return {string}
 */
proto.workflow.WorkflowEvent.prototype.getTextMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setTextMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int64 time_elapsed = 12;
 * @return {number}
 */
proto.workflow.WorkflowEvent.prototype.getTimeElapsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setTimeElapsed = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional string attribute_name = 13;
 * @return {string}
 */
proto.workflow.WorkflowEvent.prototype.getAttributeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setAttributeName = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string old_value = 14;
 * @return {string}
 */
proto.workflow.WorkflowEvent.prototype.getOldValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setOldValue = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string new_value = 15;
 * @return {string}
 */
proto.workflow.WorkflowEvent.prototype.getNewValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setNewValue = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional WorkflowState workflow_state = 16;
 * @return {!proto.workflow.WorkflowState}
 */
proto.workflow.WorkflowEvent.prototype.getWorkflowState = function() {
  return /** @type {!proto.workflow.WorkflowState} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {!proto.workflow.WorkflowState} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setWorkflowState = function(value) {
  return jspb.Message.setProto3EnumField(this, 16, value);
};


/**
 * optional EventType event_type = 17;
 * @return {!proto.workflow.EventType}
 */
proto.workflow.WorkflowEvent.prototype.getEventType = function() {
  return /** @type {!proto.workflow.EventType} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {!proto.workflow.EventType} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setEventType = function(value) {
  return jspb.Message.setProto3EnumField(this, 17, value);
};


/**
 * optional int64 log_date = 18;
 * @return {number}
 */
proto.workflow.WorkflowEvent.prototype.getLogDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.WorkflowEvent} returns this
 */
proto.workflow.WorkflowEvent.prototype.setLogDate = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.RunDocumentActionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.RunDocumentActionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.RunDocumentActionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.RunDocumentActionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    uuid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    id: jspb.Message.getFieldWithDefault(msg, 4, 0),
    documentAction: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.RunDocumentActionRequest}
 */
proto.workflow.RunDocumentActionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.RunDocumentActionRequest;
  return proto.workflow.RunDocumentActionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.RunDocumentActionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.RunDocumentActionRequest}
 */
proto.workflow.RunDocumentActionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.RunDocumentActionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.RunDocumentActionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.RunDocumentActionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.RunDocumentActionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDocumentAction();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string table_name = 2;
 * @return {string}
 */
proto.workflow.RunDocumentActionRequest.prototype.getTableName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.RunDocumentActionRequest} returns this
 */
proto.workflow.RunDocumentActionRequest.prototype.setTableName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string uuid = 3;
 * @return {string}
 */
proto.workflow.RunDocumentActionRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.RunDocumentActionRequest} returns this
 */
proto.workflow.RunDocumentActionRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 id = 4;
 * @return {number}
 */
proto.workflow.RunDocumentActionRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.RunDocumentActionRequest} returns this
 */
proto.workflow.RunDocumentActionRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string document_action = 5;
 * @return {string}
 */
proto.workflow.RunDocumentActionRequest.prototype.getDocumentAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.RunDocumentActionRequest} returns this
 */
proto.workflow.RunDocumentActionRequest.prototype.setDocumentAction = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.ProcessRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.ProcessRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.ProcessRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ProcessRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    message: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isApproved: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.ProcessRequest}
 */
proto.workflow.ProcessRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.ProcessRequest;
  return proto.workflow.ProcessRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.ProcessRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.ProcessRequest}
 */
proto.workflow.ProcessRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsApproved(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.ProcessRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.ProcessRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.ProcessRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ProcessRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsApproved();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.workflow.ProcessRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.ProcessRequest} returns this
 */
proto.workflow.ProcessRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string uuid = 3;
 * @return {string}
 */
proto.workflow.ProcessRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ProcessRequest} returns this
 */
proto.workflow.ProcessRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string message = 4;
 * @return {string}
 */
proto.workflow.ProcessRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ProcessRequest} returns this
 */
proto.workflow.ProcessRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool is_approved = 5;
 * @return {boolean}
 */
proto.workflow.ProcessRequest.prototype.getIsApproved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.workflow.ProcessRequest} returns this
 */
proto.workflow.ProcessRequest.prototype.setIsApproved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workflow.ForwardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workflow.ForwardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workflow.ForwardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ForwardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    message: jspb.Message.getFieldWithDefault(msg, 4, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    userUuid: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workflow.ForwardRequest}
 */
proto.workflow.ForwardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workflow.ForwardRequest;
  return proto.workflow.ForwardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workflow.ForwardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workflow.ForwardRequest}
 */
proto.workflow.ForwardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserUuid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workflow.ForwardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workflow.ForwardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workflow.ForwardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workflow.ForwardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getUserUuid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 id = 2;
 * @return {number}
 */
proto.workflow.ForwardRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.ForwardRequest} returns this
 */
proto.workflow.ForwardRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string uuid = 3;
 * @return {string}
 */
proto.workflow.ForwardRequest.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ForwardRequest} returns this
 */
proto.workflow.ForwardRequest.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string message = 4;
 * @return {string}
 */
proto.workflow.ForwardRequest.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ForwardRequest} returns this
 */
proto.workflow.ForwardRequest.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 user_id = 5;
 * @return {number}
 */
proto.workflow.ForwardRequest.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.workflow.ForwardRequest} returns this
 */
proto.workflow.ForwardRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string user_uuid = 6;
 * @return {string}
 */
proto.workflow.ForwardRequest.prototype.getUserUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.workflow.ForwardRequest} returns this
 */
proto.workflow.ForwardRequest.prototype.setUserUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * @enum {number}
 */
proto.workflow.DurationUnit = {
  DAY: 0,
  HOUR: 1,
  MINUTE: 2,
  MONTH: 3,
  SECOND: 4,
  YEAR: 5
};

/**
 * @enum {number}
 */
proto.workflow.PublishStatus = {
  RELEASED: 0,
  TEST: 1,
  UNDER_REVISION: 2,
  VOID: 3
};

/**
 * @enum {number}
 */
proto.workflow.Action = {
  USER_CHOICE: 0,
  DOCUMENT_ACTION: 1,
  SUB_WORKFLOW: 2,
  EMAIL: 3,
  APPS_PROCESS: 4,
  SMART_VIEW: 5,
  APPS_REPORT: 6,
  SMART_BROWSE: 7,
  APPS_TASK: 8,
  SET_VARIABLE: 9,
  USER_WINDOW: 10,
  USER_FORM: 11,
  WAIT_SLEEP: 12
};

/**
 * @enum {number}
 */
proto.workflow.ConditionType = {
  AND: 0,
  OR: 1
};

/**
 * @enum {number}
 */
proto.workflow.Operation = {
  EQUAL: 0,
  NOT_EQUAL: 1,
  LIKE: 2,
  GREATER: 4,
  GREATER_EQUAL: 5,
  LESS: 6,
  LESS_EQUAL: 7,
  BETWEEN: 8,
  SQL: 9
};

/**
 * @enum {number}
 */
proto.workflow.WorkflowState = {
  RUNNING: 0,
  COMPLETED: 1,
  ABORTED: 2,
  TERMINATED: 3,
  SUSPENDED: 4,
  NOT_STARTED: 5
};

/**
 * @enum {number}
 */
proto.workflow.Priority = {
  URGENT: 0,
  HIGH: 1,
  MEDIUM: 2,
  LOW: 3,
  MINOR: 4
};

/**
 * @enum {number}
 */
proto.workflow.EventType = {
  PROCESS_CREATED: 0,
  PROCESS_COMPLETED: 1,
  STATE_CHANGED: 2
};

goog.object.extend(exports, proto.workflow);
