/************************************************************************************
 * Copyright (C) 2012-2018 E.R.P. Consultores y Asociados, C.A.                     *
 * Contributor(s): Yamel Senih ysenih@erpya.com                                     *
 * This program is free software: you can redistribute it and/or modify             *
 * it under the terms of the GNU General Public License as published by             *
 * the Free Software Foundation, either version 2 of the License, or                *
 * (at your option) any later version.                                              *
 * This program is distributed in the hope that it will be useful,                  *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of                   *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the                     *
 * GNU General Public License for more details.                                     *
 * You should have received a copy of the GNU General Public License                *
 * along with this program. If not, see <https://www.gnu.org/licenses/>.            *
 ************************************************************************************/
syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.spin.backend.grpc.common";
option java_outer_classname = "ADempiereData";

import "proto/base_data_type.proto";

package data;

// The greeting service definition.
service BusinessData {
	// Get a Entity
	rpc GetEntity(GetEntityRequest) returns (Entity) {}
	// Create Entity Request
	rpc CreateEntity(CreateEntityRequest) returns (Entity) {}
	// Update Entity Request
	rpc UpdateEntity(UpdateEntityRequest) returns (Entity) {}
	// Delete Entity Request
	rpc DeleteEntity(DeleteEntityRequest) returns (Empty) {}
	//	List a Entities
	rpc ListEntities(ListEntitiesRequest) returns (ListEntitiesResponse) {}
	//	Request a BusinessProcess / Report
	rpc RunBusinessProcess(RunBusinessProcessRequest) returns (ProcessLog) {}
}

//	User Interface
service UserInterface {
	// Get a Tab Entity
	rpc GetTabEntity(GetTabEntityRequest) returns (Entity) {}
	// Create Tab Entity
	rpc CreateTabEntity(CreateTabEntityRequest) returns (Entity) {}
	// Update Tab Entity
	rpc UpdateTabEntity(UpdateTabEntityRequest) returns (Entity) {}
	//	List tab Entities
	rpc ListTabEntities(ListTabEntitiesRequest) returns (ListEntitiesResponse) {}
	//	Rollback Entity Request
	rpc RollbackEntity(RollbackEntityRequest) returns (Entity) {}
	// Run a Callout
	rpc RunCallout(RunCalloutRequest) returns (Callout) {}
	//	Request Translations List
	rpc ListTranslations(ListTranslationsRequest) returns (ListTranslationsResponse) {}
	// Get Default Value
	rpc GetDefaultValue(GetDefaultValueRequest) returns (DefaultValue) {}
	// Get Lookup Item
	rpc GetLookupItem(GetLookupItemRequest) returns (LookupItem) {}
	// List Lookup Item
	rpc ListLookupItems(ListLookupItemsRequest) returns (ListLookupItemsResponse) {}
	//	Request Browser Data
	rpc ListBrowserItems(ListBrowserItemsRequest) returns (ListBrowserItemsResponse) {}
	// Update Browser Entity
	rpc UpdateBrowserEntity(UpdateBrowserEntityRequest) returns (Entity) {}
	// Exists References on Record
	rpc ExistsReferences(ExistsReferencesRequest) returns (ExistsReferencesResponse) {}
	// List a References
	rpc ListReferences(ListReferencesRequest) returns (ListReferencesResponse) {}
	// Get context Info
	rpc GetContextInfoValue(GetContextInfoValueRequest) returns (ContextInfoValue) {}
	// Get Private Access
	rpc GetPrivateAccess(GetPrivateAccessRequest) returns (PrivateAccess) {}
	// Create Private Access
	rpc LockPrivateAccess(LockPrivateAccessRequest) returns (PrivateAccess) {}
	// Change Private Access
	rpc UnlockPrivateAccess(UnlockPrivateAccessRequest) returns (PrivateAccess) {}
	// Get Record Access
	rpc GetRecordAccess(GetRecordAccessRequest) returns (RecordAccess) {}
	// Set Record Access
	rpc SetRecordAccess(SetRecordAccessRequest) returns (RecordAccess) {}
	//	Request Print Format List
	rpc ListPrintFormats(ListPrintFormatsRequest) returns (ListPrintFormatsResponse) {}
	//	Request Report View List
	rpc ListReportViews(ListReportViewsRequest) returns (ListReportViewsResponse) {}
	//	Request Drill Tables List
	rpc ListDrillTables(ListDrillTablesRequest) returns (ListDrillTablesResponse) {}
	//	Request Report Output
	rpc GetReportOutput(GetReportOutputRequest) returns (ReportOutput) {}
	// Add Chat Entry
	rpc CreateChatEntry(CreateChatEntryRequest) returns (ChatEntry) {}
	//	Set Preference from field
	rpc SetPreference(SetPreferenceRequest) returns (Preference) {}
	//	Delete Preference from field
	rpc DeletePreference(DeletePreferenceRequest) returns (Empty) {}
	//	List General Info
	rpc ListGeneralInfo(ListGeneralInfoRequest) returns (ListEntitiesResponse) {}
	//	List Tab Sequences
	rpc ListTabSequences(ListTabSequencesRequest) returns (ListEntitiesResponse) {}
	//	Save Tab Sequences
	rpc SaveTabSequences(SaveTabSequencesRequest) returns (ListEntitiesResponse) {}
	// List Tree Nodes Request
	rpc ListTreeNodes(ListTreeNodesRequest) returns (ListTreeNodesResponse) {}
	// List Mail Templates
	rpc ListMailTemplates(ListMailTemplatesRequest) returns (ListMailTemplatesResponse) {}
}

//	Role Access Request
message GetRecordAccessRequest {
	string table_name = 2;
	int32 id = 3;
	string uuid = 4;
}

//	Set Access Request
message SetRecordAccessRequest {
	string table_name = 2;
	int32 id = 3;
	string uuid = 4;
	repeated RecordAccessRole record_accesses = 5;
}

//	Record Access Definition
message RecordAccess {
	string table_name = 2;
	int32 id = 3;
	string uuid = 4;
	repeated RecordAccessRole available_roles = 5;
	repeated RecordAccessRole current_roles = 6;
}

//	Record Access Stub
message RecordAccessRole {
	int32 role_id = 1;
	string role_uuid = 2;
	string role_name = 3;
	bool is_active = 4;
	bool is_exclude = 5;
	bool is_read_only = 6;
	bool is_dependent_entities = 7;
}

// Request for set preference
message SetPreferenceRequest {
	string container_uuid = 2;
	string column_name = 3;
	bool is_for_current_user = 4;
	bool is_for_current_client = 5;
	bool is_for_current_organization = 6;
	bool is_for_current_container = 7;
	enum Type {
		WINDOW = 0;
		PROCESS = 1;
		SMART_BROWSER = 2;
	}
	Type type = 8;
	string value = 9;
}

// Request for delete preference
message DeletePreferenceRequest {
	string container_uuid = 2;
	string column_name = 3;
	bool is_for_current_user = 4;
	bool is_for_current_client = 5;
	bool is_for_current_organization = 6;
	bool is_for_current_container = 7;
	enum Type {
		WINDOW = 0;
		PROCESS = 1;
		SMART_BROWSER = 2;
	}
	Type type = 8;
}

// Preference from window
message Preference {
	string container_uuid = 2;
	string column_name = 3;
	string value = 4;
	enum Type {
		WINDOW = 0;
		PROCESS = 1;
		SMART_BROWSER = 2;
	}
	Type type = 5;
	string user_uuid = 6;
	string client_uuid = 7;
	string organization_uuid = 8;
}

// Get Entity Request
message GetReportOutputRequest {
	int32 process_id = 1;
	string process_uuid = 2;
	int32 print_format_id = 3;
	string print_format_uuid = 4;
	string report_view_id = 5;
	string report_view_uuid = 6;
	bool is_summary = 7;
	string report_name = 8;
	string report_type = 9;
	// Query
	Criteria criteria = 10;
}

// Create Entity Request
message CreateEntityRequest {
	string table_name = 2;
	repeated KeyValue attributes = 3;
}

// Create Private Access Request
message LockPrivateAccessRequest {
	string table_name = 2;
	int32 id = 3;
	string uuid = 4;
}

// Get Entity Request
message GetEntityRequest {
	string uuid = 1;
	int32 id = 2;
	string table_name = 3;
	// Query
	Criteria criteria = 4;
}

// Get Private Access Request
message GetPrivateAccessRequest {
	string table_name = 2;
	int32 id = 3;
	string uuid = 4;
}

// Delete Private Access Request
message UnlockPrivateAccessRequest {
	string table_name = 2;
	int32 id = 3;
	string uuid = 4;
}

// Private Access Object
message PrivateAccess {
	string table_name = 1;
	int32 id = 2;
	string uuid = 3;
	bool is_locked = 4;
}

//  Empty message
message RollbackEntityRequest {
	string table_name = 2;
	string uuid = 3;
	int32 id = 4;
	int32 log_id = 5;
}

// Update Entity Request
message UpdateEntityRequest {
	string table_name = 2;
	string uuid = 3;
	int32 id = 4;
	repeated KeyValue attributes = 5;
}

// Delete Entity Request
message DeleteEntityRequest {
	string table_name = 2;
	string uuid = 3;
	int32 id = 4;
	repeated string uuids = 5;
	repeated int32 ids = 6;
}

// Browser request
message ListBrowserItemsRequest {
	string uuid = 1;
	Criteria criteria = 2;
	repeated KeyValue context_attributes = 3;
	int32 page_size = 4;
	string page_token = 5;
}

// Browsers List
message ListBrowserItemsResponse {
	int64 record_count = 1;
	repeated Entity records = 2;
	string next_page_token = 3;
}

// Update Browser Entity Request
message UpdateBrowserEntityRequest {
	string uuid = 2;
	int32 id = 3;
	int32 record_id = 4;
	repeated KeyValue attributes = 5;
}

// Context Info Value
message ContextInfoValue {
	string message_text = 1;
	string message_tip = 2;
}

// Get Lookup Item
message GetLookupItemRequest {
	int32 id = 1;
	string uuid = 2;
	string process_parameter_uuid = 3;
	string field_uuid = 4;
	string browse_field_uuid = 5;
	string reference_uuid = 6;
	string column_uuid = 7;
	string column_name = 8;
	string table_name = 9;
	repeated KeyValue context_attributes = 10;
}

// Get Default Value Request
message GetDefaultValueRequest {
	// References
	string process_parameter_uuid = 2;
	string field_uuid = 3;
	string browse_field_uuid = 4;
	string column_uuid = 5;
	repeated KeyValue context_attributes = 6;
	Value value = 7;
}

// Default Value Response
message DefaultValue {
	int32 id = 1;
	string uuid = 2;
	map<string, Value> values = 3;
}

// Get Lookup Item
message GetContextInfoValueRequest {
	int32 id = 2;
	string uuid = 3;
	// Query
	string query = 4;
}

// Lookup Item Response
message LookupItem {
	int32 id = 1;
	string uuid = 2;
	string table_name = 3;
	map<string, Value> values = 4;
}

// List Lookup Item
message ListLookupItemsRequest {
	// References
	string process_parameter_uuid = 2;
	string field_uuid = 3;
	string browse_field_uuid = 4;
	string reference_uuid = 5;
	string column_uuid = 6;
	string column_name = 7;
	string table_name = 8;
	string search_value = 9;
	repeated KeyValue context_attributes = 10;
	int32 page_size = 11;
	string page_token = 12;
}

// List Lookup Item Response
message ListLookupItemsResponse {
	int64 record_count = 1;
	repeated LookupItem records = 2;
	string next_page_token = 3;
}

// Get Tab Entity Request
message GetTabEntityRequest {
	string window_uuid = 2;
	string tab_uuid = 3;
	int32 window_no = 4;
	repeated KeyValue context_attributes = 5;
	string uuid = 6;
	int32 id = 7;
}

// Create Tab Entity Request
message CreateTabEntityRequest {
	string window_uuid = 2;
	string tab_uuid = 3;
	int32 window_no = 4;
	repeated KeyValue attributes = 5;
}

// Update Tab Entity Request
message UpdateTabEntityRequest {
	string window_uuid = 2;
	string tab_uuid = 3;
	int32 window_no = 4;
	string uuid = 5;
	int32 id = 6;
	repeated KeyValue attributes = 7;
}

// List Tab Entities Request
message ListTabEntitiesRequest {
	string window_uuid = 2;
	string tab_uuid = 3;
	int32 window_no = 4;
	Criteria filters = 5;
	repeated KeyValue context_attributes = 6;
	repeated string columns = 7;
	string search_value = 8;
	int32 page_size = 9;
	string page_token = 10;
}

// @deprecated please use ListEntitiesResponse
// List Entities Response
message ListTabEntitiesResponse {
	int64 record_count = 1;
	repeated Entity records = 2;
	string next_page_token = 3;
}

// List Entities Request
message ListEntitiesRequest {
	// Query
	Criteria criteria = 2;
	repeated string columns = 3;
	int32 page_size = 4;
	string page_token = 5;
}

// List Entities Response
message ListEntitiesResponse {
	int64 record_count = 1;
	repeated Entity records = 2;
	string next_page_token = 3;
}

// Callout Request
message RunCalloutRequest {
	string table_name = 2;
	string window_uuid = 3;
	string tab_uuid = 4;
	string callout = 5;
	string column_name = 6;
	Value old_value = 7;
	Value value = 8;
	int32 window_no = 9;
	repeated KeyValue context_attributes = 10;
}

// Callout response with data from server
message Callout {
	string result = 1;
	map<string, Value> values = 2;
}

// BusinessProcess Request
message RunBusinessProcessRequest {
	int32 id = 1;
	string uuid = 2;
	string table_name = 3;
	int32 record_id = 4;
	string record_uuid = 5;
	int32 table_selected_id = 6;
	string report_type = 7;
	int32 print_format_id = 8;
	string print_format_uuid = 9;
	int32 report_view_id = 10;
	string report_view_uuid = 11;
	bool is_summary = 12;
	repeated KeyValue parameters = 13;
	repeated KeyValueSelection selections = 14;
}

// Translations Request
message ListTranslationsRequest {
	string table_name = 2;
	string uuid = 3;
	int32 id = 4;
	string language = 5;
	int32 page_size = 6;
	string page_token = 7;
}

//	Translations List
message ListTranslationsResponse {
	int64 record_count = 1;
	repeated Translation translations = 2;
	string next_page_token = 3;
}

// Print Formats Request
message ListPrintFormatsRequest {
	string table_name = 2;
	string report_view_uuid = 3;
	string process_uuid = 4;
	int32 page_size = 5;
	string page_token = 6;
}

//	Print Format List
message ListPrintFormatsResponse {
	int64 record_count = 1;
	repeated PrintFormat print_formats = 2;
	string next_page_token = 3;
}

// Create Chat Entry Request
message CreateChatEntryRequest {
	string table_name = 2;
	int32 id = 3;
	string uuid = 4;
	string comment = 5;
}

// Record Chat
message ChatEntry {
	string chat_uuid = 1;
	int32 id = 2;
	string uuid = 3;
	string subject = 4;
	string character_data = 5;
	string user_uuid = 6;
	string user_name = 7;
	enum ConfidentialType {
		PUBLIC = 0;
		PARTER = 1;
		INTERNAL = 2;
	}
	enum ModeratorStatus {
		NOT_DISPLAYED = 0;
		PUBLISHED = 1;
		SUSPICIUS = 2;
		TO_BE_REVIEWED = 3;
	}
	enum ChatEntryType {
		NOTE_FLAT = 0;
		FORUM_THREADED = 1;
		WIKI = 2;
	}
	ChatEntryType chat_entry_type = 8;
	ConfidentialType confidential_type = 9;
	ModeratorStatus moderator_status = 10;
	int64 log_date = 11;
}

// Report _views Request
message ListReportViewsRequest {
	string table_name = 2;
	string process_uuid = 3;
	int32 page_size = 4;
	string page_token = 5;
}

//	Report View List
message ListReportViewsResponse {
	int64 record_count = 1;
	repeated ReportView report_views = 2;
	string next_page_token = 3;
}

// Drill table Request
message ListDrillTablesRequest {
	string table_name = 2;
	int32 page_size = 3;
	string page_token = 4;
}

//	Drill Tables List
message ListDrillTablesResponse {
	int64 record_count = 1;
	repeated DrillTable drill_tables = 2;
	string next_page_token = 3;
}

// Exists References Request
message ExistsReferencesRequest {
	int32 tab_id = 2;
	string tab_uuid = 3;
	int32 record_id = 4;
	string record_uuid = 5;
}

// References Count
message ExistsReferencesResponse {
	int32 record_count = 1;
}

// List References
message ListReferencesRequest {
	string uuid = 1;
	string table_name = 2;
	int32 id = 3;
	string window_uuid = 4;
	int32 page_size = 5;
	string page_token = 6;
}

// List References Response
message ListReferencesResponse {
	int64 record_count = 1;
	repeated RecordReferenceInfo references = 2;
	string next_page_token = 3;
}

// List General Info Request
message ListGeneralInfoRequest {
	int32 page_size = 2;
	string page_token = 3;
	// filters
	Criteria filters = 4;
	repeated KeyValue context_attributes = 5;
	string search_value = 6;
	// references
	string process_parameter_uuid = 7;
	string field_uuid = 8;
	string browse_field_uuid = 9;
	string reference_uuid = 10;
	string column_uuid = 11;
	string table_name = 12;
	string column_name = 13;
}

message ListTabSequencesRequest {
	int32 page_size = 2;
	string page_token = 3;
	string window_uuid = 4;
	string tab_uuid = 5;
	// filters
	repeated KeyValue context_attributes = 6;
}

message SaveTabSequencesRequest {
	string tab_uuid = 2;
	repeated KeyValue context_attributes = 3;
	repeated KeyValueSelection entities = 4;
}


// List Tree Nodes Request
message ListTreeNodesRequest {
	int32 tab_id = 1;
	string table_name = 2;
	int32 id = 3;
	string uuid = 4;
	int32 element_id = 5;
	string element_uuid = 6;
	repeated KeyValue context_attributes = 7;
}

// Tree Node
message TreeNode {
	int32 id = 1;
	string uuid = 2;
	int32 parent_id = 3;
	string parent_uuid = 4;
	int32 record_id = 5;
	string record_uuid = 6;
	string name = 7;
	string description = 8;
	string sequence = 9;
	bool is_summary = 10;
	bool is_active = 11;
	repeated TreeNode childs = 12;
}

message TreeType {
	int32 id = 1;
	string uuid = 2;
	string value = 3;
	string name = 4;
	string description = 5;
}

// List Tree Nodes Response
message ListTreeNodesResponse {
	int64 record_count = 1;
	repeated TreeNode records = 2;
	string next_page_token = 3;
	TreeType tree_type = 4;
}

message MailTemplate {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
	string subject = 4;
	string mail_text = 5;
}

message ListMailTemplatesRequest {
	int32 page_size = 2;
	string page_token = 3;
	string search_value = 4;
}

message ListMailTemplatesResponse {
	int64 record_count = 1;
	repeated MailTemplate records = 2;
	string next_page_token = 3;
}
